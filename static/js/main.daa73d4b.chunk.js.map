{"version":3,"sources":["constants/appConstants.js","constants/userConstants.js","components/LogoutButton.jsx","actions/userActions.js","data/lookUpTables/listNameValuePairs.js","actions/appActions.js","helpers/dateHelpers.js","components/FooterEvent.jsx","components/modals/DeleteAppModal.jsx","components/ListSelect.jsx","components/FavoriteButton.jsx","components/DetailModalNav.jsx","constants/noteConstants.js","components/Message.jsx","components/AppNote.jsx","actions/noteActions.js","components/NotesModal.jsx","styles/colorPallet.js","components/ColorSelect.jsx","components/DetailModal.jsx","components/modals/AppDetailsModal.jsx","components/AppCard.jsx","components/FavoritedDragDropContext.jsx","components/modals/FavoritedAppsModal.jsx","components/OpenFavorites.jsx","components/Logo.jsx","components/Header.jsx","components/modals/NewAppModal.jsx","components/AppList.jsx","components/DragDropContextComponent.jsx","screens/HomeScreen.jsx","stores/store.js","reducers/appReducer.js","reducers/userReducer.js","reducers/noteReducer.js","App.jsx","index.js"],"names":["USER_APPS_REQUEST","USER_APPS_SUCCESS","USER_APPS_FAIL","USER_APPS_RESET","POST_APP_REQUEST","POST_APP_SUCCESS","POST_APP_FAIL","POST_APP_RESET","UPDATE_APP_REQUEST","UPDATE_APP_SUCCESS","UPDATE_APP_FAIL","UPDATE_APP_RESET","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_REGISTER_RESET","LogoutButton","history","useHistory","dispatch","useDispatch","useSelector","state","userLogin","userInfo","className","onClick","push","type","sessionStorage","removeItem","title","nameValuePairs","addAppToList","application","getState","a","apps","userApps","id","uuid","list","listNameValuePairs","appsCopy","forEach","app","index","sort","b","unshift","localStorage","setItem","JSON","stringify","payload","error","response","data","message","formatDate","date","month","slice","day","year","trimDate","FooterEvent","text","offer_acceptance","offer","interview","deadline","date_applied","DeleteAppModal","show","handleClose","deleteHandler","item","Modal","onHide","centered","size","e","stopPropagation","Body","Button","ListSelect","close","handleClick","i","sourceIndex","sourceList","sourceListName","destinationListName","destinationList","appId","config","headers","Authorization","token","moveData","destinationIndex","sourceArr","destinationArr","updatedApp","splice","length","axios","put","Row","map","Col","color","xs","FavoriteButton","demoButton","setApps","favorited","key","fav_index","arr","indexOf","favoriteAppById","DetailModalNav","routeName","useLocation","pathname","split","to","notes","POST_NOTE_REQUEST","POST_NOTE_SUCCESS","POST_NOTE_FAIL","messageStyle","width","Message","variant","children","style","Alert","AppNote","note","location","path","noteId","useState","content","setContent","showDeleteModal","setShowDeleteModal","errorMessage","setErrorMessage","closeDeleteModal","handleUpdateClick","listName","findIndex","noteIndex","updateNoteById","useEffect","created_on","render","props","Form","Control","as","value","onChange","target","placeholder","margin","padding","height","display","alignItems","paddingTop","paddingLeft","borderRadius","marginRight","filter","delete","deleteNoteById","NotesModal","showListSelect","setShowListSelect","noteContent","setNoteContent","notesModalBodyRef","useRef","url","closeListSelect","handleSaveClick","trim","post","saveNote","Header","companyName","jobTitle","ref","borderBottom","Group","current","scroll","top","behavior","exact","colorsArr","ColorSelect","setColor","openColorSelect","closeColorSelect","clr","sm","md","DetailModal","updateApp","success","company","setCompany","setJobTitle","setUrl","salary","setSalary","setLocation","description","setDescription","validationMessages","setValidationMessages","setDeadline","applicationDate","setApplicationDate","interviewDate","setInterviewDate","offerDate","setOfferDate","offerAcceptanceDate","setOfferAcceptanceDate","showColorSelect","setShowColorSelect","modalRef","handleUpdateButtonClick","validateForm","setTimeout","updateAppById","autoComplete","lg","Label","scrollIntoView","block","AppDetailsModal","AppCard","favslist","showDetailsModal","setShowDetailsModal","detailsModalDisabled","setDetailsModalDisabled","openDeleteModal","openDetailsModal","disableDetailsModal","enableDetailsModal","draggableId","provided","innerRef","draggableProps","dragHandleProps","onMouseOver","onMouseLeave","appsArr","deleteAppById","FavoritedDragDropContext","onDragEnd","result","destination","source","droppableId","FavoritedAppsModal","favoritedApps","droppableProps","OpenFavorites","showFavorites","setShowFavorites","Logo","Container","fluid","listValues","NewAppModal","listValue","postApp","today","Date","dd","String","getDate","padStart","mm","getMonth","yyyy","getFullYear","setCompanyName","setList","setDate","resetForm","useCallback","submitHandler","preventDefault","contentClassName","Title","controlId","wishlist","applied","phone","rejected","AppList","name","icon","listIntFromDB","showModal","setShowModal","xl","DragDropContextComponent","HomeScreen","reducer","combineReducers","action","loading","userRegister","notePost","initialState","getItem","parse","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","App","component","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.daa73d4b.chunk.js","sourcesContent":["export const USER_APPS_REQUEST = 'USER_APPS_REQUEST';\nexport const USER_APPS_SUCCESS = 'USER_APPS_SUCCESS';\nexport const USER_APPS_FAIL = 'USER_APPS_FAIL';\nexport const USER_APPS_RESET = 'USER_APPS_RESET';\n\nexport const POST_APP_REQUEST = 'POST_APP_REQUEST';\nexport const POST_APP_SUCCESS = 'POST_APP_SUCCESS';\nexport const POST_APP_FAIL = 'POST_APP_FAIL';\nexport const POST_APP_RESET = 'POST_APP_RESET';\n\nexport const UPDATE_APP_REQUEST = 'UPDATE_APP_REQUEST';\nexport const UPDATE_APP_SUCCESS = 'UPDATE_APP_SUCCESS';\nexport const UPDATE_APP_FAIL = 'UPDATE_APP_FAIL';\nexport const UPDATE_APP_RESET = 'UPDATE_APP_RESET';\n","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST';\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS';\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL';\nexport const USER_LOGOUT = 'USER_LOGOUT';\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST';\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS';\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL';\nexport const USER_REGISTER_RESET = 'USER_REGISTER_RESET';\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { logoutUser } from '../actions/userActions';\nimport { useHistory } from 'react-router-dom';\n\nconst LogoutButton = () => {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const logoutHandler = () => {\n    history.push('/info');\n    dispatch(logoutUser());\n  };\n  return userInfo ? (\n    <div className='header-icon' onClick={logoutHandler} title='Logout'>\n      <i className='fas fa-sign-out-alt'></i>\n    </div>\n  ) : null;\n};\n\nexport default LogoutButton;\n","import axios from 'axios';\nimport { USER_APPS_RESET } from '../constants/appConstants';\nimport {\n  USER_REGISTER_REQUEST,\n  USER_REGISTER_SUCCESS,\n  USER_REGISTER_FAIL,\n  USER_LOGIN_REQUEST,\n  USER_LOGIN_FAIL,\n  USER_LOGIN_SUCCESS,\n  USER_LOGOUT,\n} from '../constants/userConstants';\n\nexport const registerUser = (user) => async (dispatch, getState) => {\n  try {\n    dispatch({ type: USER_REGISTER_REQUEST });\n    let config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n\n    let { data } = await axios.post('/api/users', user, config);\n    dispatch({ type: USER_REGISTER_SUCCESS });\n    dispatch(loginUser(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const loginUser = (emailAndPassword) => async (dispatch, getState) => {\n  try {\n    dispatch({ type: USER_LOGIN_REQUEST });\n    let config = { headers: { 'Content-Type': 'application/json' } };\n    let { data } = await axios.post(\n      '/api/users/login',\n      emailAndPassword,\n      config\n    );\n    dispatch({ type: USER_LOGIN_SUCCESS, payload: data });\n    sessionStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const logoutUser = () => (dispatch) => {\n  dispatch({ type: USER_LOGOUT });\n  dispatch({ type: USER_APPS_RESET });\n  sessionStorage.removeItem('userInfo');\n};\n\nexport const loginFirebaseUser = (uidAndEmail) => async (dispatch) => {\n  try {\n    dispatch({ type: USER_LOGIN_REQUEST });\n    let config = { headers: { 'Content-Type': 'application/json' } };\n    const { data } = await axios.post(\n      '/api/users/auth_login',\n      uidAndEmail,\n      config\n    );\n    dispatch({ type: USER_LOGIN_SUCCESS, payload: data });\n    sessionStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n","let nameValuePairs = [\n  '',\n  'wishlist',\n  'applied',\n  'phone',\n  'on site',\n  'offer',\n  'rejected',\n];\n\nexport default nameValuePairs;\n","import axios from 'axios';\nimport {\n  USER_APPS_SUCCESS,\n  POST_APP_REQUEST,\n  POST_APP_SUCCESS,\n  POST_APP_FAIL,\n  UPDATE_APP_REQUEST,\n  UPDATE_APP_SUCCESS,\n  UPDATE_APP_FAIL,\n  UPDATE_APP_RESET,\n} from '../constants/appConstants';\nimport listNameValuePairs from '../data/lookUpTables/listNameValuePairs';\nimport { v4 as uuid } from 'uuid';\n\n//DONE\nexport const addAppToList = (application) => async (dispatch, getState) => {\n  dispatch({ type: POST_APP_REQUEST });\n  try {\n    const {\n      userApps: { apps },\n    } = getState();\n    application.id = uuid();\n    let list = listNameValuePairs[application.list];\n\n    let appsCopy = apps;\n\n    appsCopy[list].forEach((app) => {\n      app.index++;\n    });\n    appsCopy[list].sort((a, b) => a.index - b.index);\n    appsCopy[list].unshift(application);\n    localStorage.setItem('apps', JSON.stringify(appsCopy));\n    dispatch({ type: USER_APPS_SUCCESS, payload: appsCopy });\n    dispatch({ type: POST_APP_SUCCESS });\n  } catch (error) {\n    dispatch({\n      type: POST_APP_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const deleteAppById = (app) => async (dispatch, getState) => {\n  const {\n    userLogin: { userInfo },\n  } = getState();\n  const {\n    userApps: { apps },\n  } = getState();\n  const { id, list, index, fav_index, favorited } = app;\n\n  let config = {\n    headers: {\n      Authorization: `Bearer ${userInfo.token}`,\n      'Content-Type': 'application/json',\n    },\n  };\n\n  let data = { ...config, data: { id, index, list, fav_index, favorited } };\n\n  let appsCopy = apps;\n\n  for (let key in appsCopy) {\n    appsCopy[key].forEach((app) => {\n      if (app.fav_index > fav_index) {\n        app.fav_index -= 1;\n      }\n    });\n  }\n\n  let listName = listNameValuePairs[list];\n  let appsArr = appsCopy[listName];\n\n  appsArr.forEach((app) => {\n    if (app.index > index) app.index -= 1;\n  });\n\n  appsArr = appsArr.filter((app) => app.id !== id);\n  appsCopy[listName] = appsArr;\n  dispatch({ type: USER_APPS_SUCCESS, payload: appsCopy });\n\n  await axios.delete('/api/apps', data);\n};\n\nexport const updateAppById = (app) => async (dispatch, getState) => {\n  try {\n    dispatch({ type: UPDATE_APP_REQUEST });\n    let {\n      userLogin: { userInfo },\n    } = getState();\n\n    let {\n      userApps: { apps },\n    } = getState();\n    let list = listNameValuePairs[app.list];\n    let appsCopy = apps;\n    let arr = apps[list];\n    arr[arr.indexOf((e) => (e.id = app.id))] = app;\n    appsCopy[list] = arr;\n\n    let config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    dispatch({ type: USER_APPS_SUCCESS, payload: appsCopy });\n    await axios.put('/api/apps', app, config);\n    dispatch({ type: UPDATE_APP_SUCCESS });\n    setTimeout(() => {\n      dispatch({ type: UPDATE_APP_RESET });\n    }, 1500);\n  } catch (error) {\n    dispatch({\n      type: UPDATE_APP_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const favoriteAppById = (app) => async (dispatch, getState) => {\n  let {\n    userLogin: { userInfo },\n  } = getState();\n\n  let {\n    userApps: { apps },\n  } = getState();\n\n  if (app.favorited) {\n    for (let key in apps) {\n      apps[key].forEach((e) => {\n        if (e.fav_index >= 0) {\n          e.fav_index += 1;\n        }\n      });\n    }\n    app.fav_index = 0;\n  } else {\n    for (let key in apps) {\n      apps[key].forEach((e) => {\n        if (e.fav_index > app.fav_index) {\n          e.fav_index -= 1;\n        }\n      });\n    }\n    app.fav_index = null;\n  }\n\n  let list = listNameValuePairs[app.list];\n  let appsCopy = apps;\n  let arr = apps[list];\n  arr[arr.indexOf((e) => (e.id = app.id))] = app;\n  appsCopy[list] = arr;\n\n  let config = {\n    headers: {\n      Authorization: `Bearer ${userInfo.token}`,\n    },\n  };\n\n  dispatch({ type: USER_APPS_SUCCESS, payload: appsCopy });\n  await axios.put('/api/apps/update/fav', app, config);\n  await axios.put('/api/apps', app, config);\n};\n","export const formatDate = (date) => {\n  let month = `${date.slice(5, 7)}`;\n  let day = `${date.slice(8, 10)}`;\n  let year = date.slice(0, 4);\n  return `${month}/${day}/${year}`;\n};\n\nexport const trimDate = (date) => {\n  return date.slice(0, 10);\n};\n","import React from 'react';\nimport { formatDate, trimDate } from '../helpers/dateHelpers';\n\nconst FooterEvent = ({ app }) => {\n  let {\n    offer_acceptance,\n    offer,\n    interview,\n    deadline,\n    application,\n    date_applied,\n  } = app;\n\n  let text;\n\n  if (offer_acceptance) {\n    text = `Accept Offer by: ${formatDate(trimDate(offer_acceptance))}`;\n  } else if (offer) {\n    text = `Offer Recieved on: ${formatDate(trimDate(offer))}`;\n  } else if (interview) {\n    text = `Interview Date: ${formatDate(trimDate(interview))}`;\n  } else if (deadline) {\n    text = `Application Deadline: ${formatDate(trimDate(deadline))}`;\n  } else if (application) {\n    text = `Applied On: ${formatDate(trimDate(application))}`;\n  } else if (date_applied) {\n    text = `Created On: ${formatDate(trimDate(date_applied))}`;\n  }\n  return <div>{text}</div>;\n};\n\nexport default FooterEvent;\n","import React from 'react';\nimport { Modal, Button } from 'react-bootstrap';\nimport '../../styles/deleteModal.css';\n\nconst DeleteAppModal = ({ show, handleClose, deleteHandler, item }) => {\n  return (\n    <Modal\n      show={show}\n      onHide={handleClose}\n      centered\n      size='md'\n      className='deleteModal'\n      onClick={(e) => {\n        e.stopPropagation();\n      }}\n    >\n      <Modal.Body className='deleteModal-body'>\n        <h4>Delete {`${item}`}</h4>\n        <p>{`Are you sure you want to delete this ${item}?`}</p>\n        <div className='deleteModal-body-button-container'>\n          <Button\n            className='modal-button deleteModal-delete-button default-accent-border'\n            onClick={(e) => {\n              e.stopPropagation();\n              deleteHandler();\n            }}\n          >\n            Delete\n          </Button>\n          <Button\n            className='modal-button deleteModal-cancel-button default-accent-border'\n            onClick={(e) => {\n              e.stopPropagation();\n              handleClose();\n            }}\n          >\n            Cancel\n          </Button>\n        </div>\n      </Modal.Body>\n    </Modal>\n  );\n};\n\nexport default DeleteAppModal;\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Row, Col } from 'react-bootstrap';\nimport '../styles/listSelect.css';\nimport nameValuePairs from '../data/lookUpTables/listNameValuePairs';\nimport { USER_APPS_SUCCESS } from '../constants/appConstants';\nimport axios from 'axios';\n\nconst ListSelect = ({ close, app }) => {\n  const dispatch = useDispatch();\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n  const userApps = useSelector((state) => state.userApps);\n  const { apps } = userApps;\n\n  const handleClick = async (e, i) => {\n    e.stopPropagation();\n\n    if (i !== app.list) {\n      let sourceIndex = app.index;\n      let destinationIndex = 0;\n      let sourceList = app.list;\n      let sourceListName = nameValuePairs[sourceList];\n      let destinationList = i;\n      let destinationListName = nameValuePairs[destinationList];\n      let appId = app.id;\n\n      let config = {\n        headers: {\n          Authorization: `Bearer ${userInfo.token}`,\n          'Content-Type': 'application/json',\n        },\n      };\n\n      let moveData = {\n        sourceIndex,\n        destinationIndex,\n        sourceList: sourceListName,\n        destinationList: destinationListName,\n        appId,\n      };\n\n      let appsCopy = apps;\n      let sourceArr = appsCopy[sourceListName];\n      let destinationArr = appsCopy[destinationListName];\n      let updatedApp = sourceArr.splice(sourceIndex, 1);\n      updatedApp = updatedApp[0];\n      updatedApp.index = 0;\n      updatedApp.list = destinationList;\n      for (let i = sourceIndex; i < sourceArr.length; i++) {\n        sourceArr[i].index -= 1;\n      }\n      for (let i = destinationIndex; i < destinationArr.length; i++) {\n        destinationArr[i].index += 1;\n      }\n      destinationArr.unshift(updatedApp);\n      appsCopy[sourceListName] = sourceArr;\n      appsCopy[destinationListName] = destinationArr;\n      dispatch({ type: USER_APPS_SUCCESS, payload: appsCopy });\n      await axios.put('/api/apps/update/index', moveData, config);\n      close();\n    }\n  };\n\n  return (\n    <Row className='list-select-container'>\n      {nameValuePairs.map(\n        (list, i) =>\n          list && (\n            <Col\n              className={`list-select-item noselect ${\n                app.list === i ? 'current-active-list' : ''\n              } modal-nav-link ${app.color} ${app.color}-card-border`}\n              key={i}\n              xs={12}\n              onClick={(e) => {\n                handleClick(e, i);\n              }}\n            >\n              {list}\n            </Col>\n          )\n      )}\n    </Row>\n  );\n};\n\nexport default ListSelect;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport '../styles/favoriteButton.css';\nimport { favoriteAppById } from '../actions/appActions';\n\nconst FavoriteButton = ({ app, color, demoButton, setApps }) => {\n  const dispatch = useDispatch();\n  let { favorited } = app;\n\n  const handleClick = (e) => {\n    e.stopPropagation();\n    let updatedApp = app;\n    updatedApp.favorited = !favorited;\n    if (demoButton) {\n      setApps([app]);\n    }\n    if (!demoButton) {\n      dispatch(favoriteAppById(updatedApp));\n    }\n  };\n\n  return (\n    <i\n      className={` ${`${\n        favorited ? 'fas' : 'far'\n      } fa-bookmark`} favoriteButton ${color && color}`}\n      onClick={handleClick}\n      title='Favorite'\n    ></i>\n  );\n};\n\nexport default FavoriteButton;\n","import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { UPDATE_APP_RESET } from '../constants/appConstants';\nimport '../styles/modalNav.css';\n\nconst DetailModalNav = ({ app, color }) => {\n  const dispatch = useDispatch();\n  const location = useLocation();\n  const path = location.pathname;\n  const routeName = path.split('/')[1];\n\n  return (\n    <div className='modal-nav-container'>\n      <Link\n        to={`/app_details/${app.id}`}\n        onClick={(e) => {\n          e.stopPropagation();\n        }}\n        className={`modal-nav-link ${\n          routeName === 'app_details' ? 'modal-nav-link-active' : ''\n        } ${color ? color : 'default'} ${\n          color ? color : 'default'\n        }-accent-border`}\n      >\n        Details\n      </Link>\n      <Link\n        to={`/app_notes/${app.id}${app.notes.length === 0 ? '/create' : ''}`}\n        className={`modal-nav-link ${\n          routeName === 'app_notes' ? 'modal-nav-link-active' : ''\n        } ${color ? color : 'default'} ${\n          color ? color : 'default'\n        }-accent-border`}\n        onClick={(e) => {\n          e.stopPropagation();\n          dispatch({ type: UPDATE_APP_RESET });\n        }}\n      >\n        Notes\n      </Link>\n    </div>\n  );\n};\n\nexport default DetailModalNav;\n","export const POST_NOTE_REQUEST = 'POST_NOTE_REQUEST';\nexport const POST_NOTE_SUCCESS = 'POST_NOTE_SUCCESS';\nexport const POST_NOTE_FAIL = 'POST_NOTE_FAIL';\nexport const POST_NOTE_RESET = 'POST_NOTE_RESET';\n","import React from 'react';\nimport { Alert } from 'react-bootstrap';\n\nconst messageStyle = {\n  width: '100%',\n};\n\nconst Message = ({ variant, children, style, className }) => {\n  return (\n    <Alert\n      variant={variant}\n      style={{ ...messageStyle, ...style }}\n      className={className}\n    >\n      {children}\n    </Alert>\n  );\n};\n\nexport default Message;\n","import React, { useState, useEffect } from 'react';\nimport { Button, Form } from 'react-bootstrap';\nimport '../styles/note.css';\nimport { trimDate, formatDate } from '../helpers/dateHelpers';\nimport DeleteAppModal from './modals/DeleteAppModal';\nimport { deleteNoteById, updateNoteById } from '../actions/noteActions';\nimport { useDispatch } from 'react-redux';\nimport { useHistory, Route, useLocation } from 'react-router-dom';\nimport Message from './Message';\n\nconst AppNote = ({ note, app }) => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const location = useLocation();\n  let path = location.pathname;\n  let noteId = location.pathname.split('/')[4];\n  const [content, setContent] = useState(note ? note.content : '');\n  const [showDeleteModal, setShowDeleteModal] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n  const closeDeleteModal = () => {\n    setShowDeleteModal(false);\n  };\n\n  const openDeleteModal = () => {\n    setShowDeleteModal(true);\n  };\n\n  const deleteHandler = () => {\n    dispatch(deleteNoteById(app, note.id));\n    closeDeleteModal();\n  };\n\n  const handleUpdateClick = () => {\n    setErrorMessage('');\n    if (content.length !== 0) {\n      let note = {\n        noteId,\n        content,\n      };\n      dispatch(updateNoteById(app, note));\n      history.push(`/app_notes/${app.id}`);\n    } else {\n      setErrorMessage('Empty notes cannot be saved');\n    }\n  };\n\n  useEffect(() => {\n    setErrorMessage('');\n    return () => {\n      setErrorMessage('');\n    };\n  }, [path]);\n\n  return (\n    note && (\n      <>\n        <div\n          className='note'\n          onClick={(e) => {\n            if (noteId === note.id) {\n              e.stopPropagation();\n            }\n          }}\n        >\n          <div className='note-header'>\n            <div className='note-header-date'>\n              {note.created_on && formatDate(trimDate(note.created_on))}\n            </div>\n            <div className='note-header-border'></div>\n            <div className='note-header-buttons'>\n              <i\n                className={`${\n                  noteId === note.id ? 'fas fa-times' : 'far fa-edit'\n                }`}\n                title={`${noteId === note.id ? 'Close' : 'Edit'}`}\n                onClick={(e) => {\n                  e.stopPropagation();\n                  if (noteId === note.id) {\n                    history.push(`/app_notes/${app.id}`);\n                  } else {\n                    history.push(`/app_notes/${app.id}/edit/${note.id}`);\n                  }\n                }}\n              />\n              <i\n                className='far fa-trash-alt'\n                title='Delete'\n                onClick={() => {\n                  openDeleteModal();\n                }}\n              ></i>\n            </div>\n          </div>\n          <div className='note-body'>\n            {noteId !== note.id && (\n              <div className='note-body-content'>{note.content}</div>\n            )}\n            <Route\n              render={(props) =>\n                note.id === location.pathname.split('/')[4] && (\n                  <Form>\n                    <Form.Control\n                      as='textarea'\n                      className='noteupdate-textarea'\n                      value={content}\n                      onChange={(e) => {\n                        setContent(e.target.value);\n                      }}\n                      placeholder='Update note...'\n                    ></Form.Control>\n                    <div className='noteupdateform-update-button'>\n                      {errorMessage && (\n                        <Message\n                          variant='danger'\n                          style={{\n                            margin: '0px',\n                            padding: '0px',\n                            height: '30px',\n                            display: 'flex',\n                            alignItems: 'center',\n                            paddingTop: '3px',\n                            paddingLeft: '23px',\n                            borderRadius: '5px',\n                            width: '561px',\n                          }}\n                        >\n                          {errorMessage}\n                        </Message>\n                      )}\n                      <Button\n                        className='modal-button detail-modal-updateButton'\n                        style={{ marginRight: '5px' }}\n                        onClick={(e) => {\n                          e.stopPropagation();\n                          handleUpdateClick();\n                        }}\n                      >\n                        Update\n                      </Button>\n                    </div>\n                  </Form>\n                )\n              }\n              path={'/app_notes/:id/edit/:noteId'}\n            />\n          </div>\n        </div>\n        <DeleteAppModal\n          show={showDeleteModal}\n          handleClose={closeDeleteModal}\n          deleteHandler={deleteHandler}\n          item='note'\n        />\n      </>\n    )\n  );\n};\n\nexport default AppNote;\n","import axios from 'axios';\nimport {\n  POST_NOTE_REQUEST,\n  POST_NOTE_SUCCESS,\n  POST_NOTE_FAIL,\n} from '../constants/noteConstants';\nimport { USER_APPS_SUCCESS } from '../constants/appConstants';\nimport nameValuePairs from '../data/lookUpTables/listNameValuePairs';\n\nexport const saveNote = (app, content) => async (dispatch, getState) => {\n  try {\n    dispatch({ type: POST_NOTE_REQUEST });\n    const {\n      userLogin: { userInfo },\n    } = getState();\n    const {\n      userApps: { apps },\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n        'Content-Type': 'application/json',\n      },\n    };\n\n    let { data } = await axios.post(`/api/apps/${app.id}`, { content }, config);\n    let appsCopy = apps;\n    let listName = nameValuePairs[app.list];\n    let arr = appsCopy[listName];\n    let index = arr.findIndex((e) => e.id === app.id);\n    arr[index].notes.unshift(data);\n    appsCopy[listName] = arr;\n    dispatch({ type: USER_APPS_SUCCESS, payload: appsCopy });\n    dispatch({ type: POST_NOTE_SUCCESS });\n  } catch (error) {\n    dispatch({ type: POST_NOTE_FAIL });\n  }\n};\n\nexport const deleteNoteById = (app, noteId) => async (dispatch, getState) => {\n  const {\n    userLogin: { userInfo },\n  } = getState();\n  const {\n    userApps: { apps },\n  } = getState();\n\n  const config = { headers: { Authorization: `Bearer ${userInfo.token}` } };\n\n  let appsCopy = apps;\n  let listName = nameValuePairs[app.list];\n  let arr = appsCopy[listName];\n  let index = arr.findIndex((e) => e.id === app.id);\n  arr[index].notes = arr[index].notes.filter((note) => note.id !== noteId);\n  appsCopy[listName] = arr;\n  dispatch({ type: USER_APPS_SUCCESS, payload: appsCopy });\n  await axios.delete(`/api/notes/${noteId}`, config);\n};\n\nexport const updateNoteById = (app, note) => async (dispatch, getState) => {\n  const {\n    userLogin: { userInfo },\n  } = getState();\n  const {\n    userApps: { apps },\n  } = getState();\n  const config = {\n    headers: {\n      Authorization: `Bearer ${userInfo.token}`,\n      'Content-Type': 'application/json',\n    },\n  };\n\n  let { data } = await axios.put(`/api/notes/${note.noteId}`, note, config);\n  let appsCopy = apps;\n  let listName = nameValuePairs[app.list];\n  let arr = appsCopy[listName];\n\n  let index = arr.findIndex((e) => e.id === app.id);\n  let noteIndex = arr[index].notes.findIndex((e) => e.id === note.noteId);\n  arr[index].notes[noteIndex] = data;\n  appsCopy[listName] = arr;\n  dispatch({ type: USER_APPS_SUCCESS, payload: appsCopy });\n};\n","import React, { useState, useEffect, useRef } from 'react';\nimport { Modal, Row, Button, Form } from 'react-bootstrap';\nimport ListSelect from './ListSelect';\nimport FavoriteButton from './FavoriteButton';\nimport '../styles/notesModal.css';\nimport DetailModalNav from './DetailModalNav';\nimport { useDispatch } from 'react-redux';\nimport AppNote from './AppNote';\nimport { saveNote } from '../actions/noteActions';\nimport { useHistory } from 'react-router-dom';\nimport { Route } from 'react-router-dom';\nimport Message from './Message';\n\nconst NotesModal = ({ app, handleClose }) => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const [errorMessage, setErrorMessage] = useState('Save a new note');\n\n  const [showListSelect, setShowListSelect] = useState(false);\n  const [noteContent, setNoteContent] = useState('');\n\n  const notesModalBodyRef = useRef();\n\n  const url = `/app_notes/${app.id}`;\n\n  useEffect(() => {\n    if (app.notes.length === 0) {\n      history.push(`/app_notes/${app.id}/create`);\n    }\n  }, [app.notes.length, history, app.id, app.notes]);\n\n  const openListSelect = () => {\n    setShowListSelect(true);\n  };\n\n  const closeListSelect = () => {\n    setShowListSelect(false);\n  };\n\n  const handleCloseButtonClick = () => {\n    handleClose();\n  };\n\n  const handleSaveClick = () => {\n    if (noteContent.trim()) {\n      dispatch(saveNote(app, noteContent));\n      setNoteContent('');\n      history.push(`/app_notes/${app.id}`);\n    } else {\n      setErrorMessage('Empty notes cannot be saved');\n    }\n  };\n\n  return (\n    <>\n      <Modal.Header\n        className={`detailModal-header ${app.color ? app.color : 'default'} ${\n          app.color ? app.color : 'default'\n        }-modal-header-border`}\n        onClick={(e) => {\n          e.stopPropagation();\n          closeListSelect();\n          setErrorMessage('');\n          if (app.notes.length) {\n            history.push(url);\n          }\n        }}\n      >\n        <Row className='detailModal-header-nav'>\n          <div className='detailModal-header-nav-buttonContainer'>\n            <div className='detailModal-moveButton-container'>\n              <Button\n                className={`modal-button detail-modal-moveButton ${app.color}-accent-border`}\n                onClick={(e) => {\n                  e.stopPropagation();\n                  openListSelect();\n                }}\n              >\n                Move\n              </Button>\n              {showListSelect && (\n                <ListSelect close={closeListSelect} app={app} />\n              )}\n            </div>\n            <Button\n              className={`modal-button ${app.color}-accent-border detail-modal-closeButton`}\n              onClick={(e) => {\n                e.stopPropagation();\n                handleCloseButtonClick();\n              }}\n            >\n              Close\n            </Button>\n          </div>\n          <div className='detailModal-header-main'>\n            <div className='detailModal-header-main-text'>\n              <p className='detailModal-header-main-text-company'>\n                {app.companyName}\n              </p>\n              <p className='detailModal-header-main-text-job'>{app.jobTitle}</p>\n            </div>\n            <FavoriteButton app={app} color={app.color} />\n          </div>\n          <DetailModalNav app={app} color={app.color} />\n        </Row>\n      </Modal.Header>\n      <Modal.Body\n        className={`notesModal-body detailModal-body ${\n          app.color ? app.color : 'default'\n        }-body ${app.color}-modal-body-border`}\n        ref={notesModalBodyRef}\n        onClick={() => {\n          closeListSelect();\n          setErrorMessage('');\n          if (app.notes.length) {\n            history.push(url);\n          }\n        }}\n      >\n        <div className='notesModal-body-container'>\n          <Route\n            path={`/app_notes/${app.id}/create`}\n            render={(props) => (\n              <>\n                {' '}\n                <div\n                  className='notesModal-body-button-container'\n                  onClick={(e) => {\n                    e.stopPropagation();\n                  }}\n                >\n                  <Message\n                    style={{\n                      margin: '0px',\n                      padding: '0px',\n                      height: '30px',\n                      display: 'flex',\n                      alignItems: 'center',\n                      paddingTop: '3px',\n                      paddingLeft: '23px',\n                      borderRadius: '10px 10px 0 0',\n                      borderBottom: 'unset !important',\n                    }}\n                    className={`${app.color ? app.color : 'default'} ${\n                      app.color ? app.color : 'default'\n                    }-accent-border`}\n                  >\n                    {errorMessage}\n                  </Message>\n                  <div\n                    className='notesModal-body-create-container'\n                    onClick={(e) => {\n                      e.stopPropagation();\n                      handleSaveClick();\n                    }}\n                  >\n                    <div\n                      className={`notesModal-body-create-right ${\n                        app.color ? app.color : 'default'\n                      } ${app.color ? app.color : 'default'}-accent-border`}\n                      title='Save'\n                    >\n                      <i className='fas fa-plus notesModal-body-create-icon'></i>\n                      <span className='notesModal-body-create-text'>Save</span>\n                    </div>\n                  </div>\n                  <div\n                    className='notesModal-body-create-container'\n                    onClick={(e) => {\n                      e.stopPropagation();\n                      if (app.notes) {\n                        if (app.notes.length !== 0) {\n                          history.push(`/app_notes/${app.id}`);\n                        } else {\n                          setErrorMessage('Create your first note to display');\n                        }\n                      }\n                    }}\n                  >\n                    <div\n                      className={`notesModal-body-create-right ${\n                        app.color ? app.color : 'default'\n                      } ${app.color ? app.color : 'default'}-accent-border`}\n                      title='Close'\n                    >\n                      <i className='fas fa-times notesModal-body-close-icon'></i>\n                      <span className='notesModal-body-create-text'>Close</span>\n                    </div>\n                  </div>\n                </div>\n                <Form\n                  onClick={(e) => {\n                    e.stopPropagation();\n                  }}\n                >\n                  <Form.Group>\n                    <Form.Control\n                      as='textarea'\n                      placeholder='Save your notes here'\n                      value={noteContent}\n                      onChange={(e) => {\n                        setNoteContent(e.target.value);\n                      }}\n                    ></Form.Control>\n                  </Form.Group>\n                </Form>\n              </>\n            )}\n          />\n          {app.notes.length > 0 &&\n            app.notes.map((note, i) => (\n              <AppNote note={note} key={i} app={app} />\n            ))}\n        </div>\n      </Modal.Body>\n      <Route\n        path={`/app_notes/${app.id}`}\n        render={(props) => (\n          <div className='notesModal-open-form-button'>\n            <div\n              className={`notesModal-body-create-right square-corner  ${app.color}`}\n              title='Create a note'\n              onClick={(e) => {\n                e.stopPropagation();\n                history.push(`/app_notes/${app.id}/create`);\n                notesModalBodyRef.current.scroll({\n                  top: 0,\n                  behavior: 'smooth',\n                });\n              }}\n            >\n              <i className='fas fa-plus notesModal-body-create-icon'></i>\n              <span className='notesModal-body-create-text'>Note</span>\n            </div>\n          </div>\n        )}\n        exact\n      />\n    </>\n  );\n};\n\nexport default NotesModal;\n","let colors = {\n  white: 'white',\n  red: 'red',\n  salmon: 'salmon',\n  orange: 'orange',\n  gold: 'gold',\n  yellow: 'yellow',\n  lightGreen: 'light-green',\n  green: 'green',\n  darkGreen: 'dark-green',\n  blueGreen: 'blue-green',\n  lightBlue: 'light-blue',\n  blue: 'blue',\n  navy: 'navy',\n  purple: 'purple',\n  black: 'black',\n  gray: 'gray',\n  offPurple: 'off-purple',\n};\n\nexport let colorsArr = [\n  'default',\n  'dark-1',\n  'dark-2',\n  'light-3',\n  'light-2',\n  'light-1',\n  'row-1-1',\n  'row-1-2',\n  'row-1-3',\n  'row-1-4',\n  'row-1-5',\n  'row-1-6',\n  'row-2-1',\n  'row-2-2',\n  'row-2-3',\n  'row-2-4',\n  'row-2-5',\n  'row-2-6',\n  'row-3-1',\n  'row-3-2',\n  'row-3-3',\n  'row-3-4',\n  'row-3-5',\n  'row-3-6',\n  'row-4-1',\n  'row-4-2',\n  'row-4-3',\n  'row-4-4',\n  'row-4-5',\n  'row-4-6',\n  'row-5-1',\n  'row-5-2',\n  'row-5-3',\n  'row-5-4',\n  'row-5-5',\n  'row-5-6',\n  'row-6-1',\n  'row-6-2',\n  'row-6-3',\n  'row-6-4',\n  'row-6-5',\n  'row-6-6',\n];\nexport default colors;\n","import React from 'react';\nimport { Row, Col } from 'react-bootstrap';\nimport '../styles/colorSelect.css';\nimport { colorsArr } from '../styles/colorPallet';\n\nconst ColorSelect = ({\n  color,\n  setColor,\n  show,\n  openColorSelect,\n  closeColorSelect,\n}) => {\n  return (\n    <>\n      <div\n        className='colorSelect'\n        onClick={(e) => {\n          e.stopPropagation();\n          openColorSelect();\n        }}\n      >\n        <div className={`colorSelect-content ${color}`}></div>\n      </div>\n      {show && (\n        <Row\n          className='colorSelect-menu'\n          onClick={(e) => {\n            e.stopPropagation();\n          }}\n        >\n          {colorsArr.map((clr, i) => (\n            <Col\n              xs={1}\n              sm={2}\n              md={4}\n              key={i}\n              className={`colorSelect-menu-option-container`}\n            >\n              <div\n                className={`colorSelect-menu-option-border ${\n                  clr === color && 'colorSelect-menu-option-active'\n                }`}\n                onClick={(e) => {\n                  setColor(clr);\n                  closeColorSelect();\n                }}\n              >\n                <div className={`colorSelect-menu-option  ${clr} `}></div>\n              </div>\n            </Col>\n          ))}\n        </Row>\n      )}{' '}\n    </>\n  );\n};\n\nexport default ColorSelect;\n","import React, { useState, useRef } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Modal, Form, Row, Col, Button } from 'react-bootstrap';\nimport { trimDate } from '../helpers/dateHelpers';\nimport { UPDATE_APP_RESET } from '../constants/appConstants';\nimport { updateAppById } from '../actions/appActions';\nimport ListSelect from './ListSelect';\nimport FavoriteButton from './FavoriteButton';\nimport Message from './Message';\nimport ColorSelect from './ColorSelect';\nimport DetailModalNav from './DetailModalNav';\n\nconst DetailModal = ({ app, handleClose }) => {\n  const dispatch = useDispatch();\n\n  const updateApp = useSelector((state) => state.updateApp);\n  const { success, error } = updateApp;\n\n  const [company, setCompany] = useState(app.companyName);\n  const [jobTitle, setJobTitle] = useState(app.jobTitle);\n  const [url, setUrl] = useState(app.url);\n  const [color, setColor] = useState(app.color);\n  const [salary, setSalary] = useState(app.salary);\n  const [location, setLocation] = useState(app.location);\n  const [description, setDescription] = useState(app.description);\n  const [validationMessages, setValidationMessages] = useState([]);\n  const [showListSelect, setShowListSelect] = useState(false);\n\n  const [deadline, setDeadline] = useState(\n    app.deadline ? trimDate(app.deadline) : ''\n  );\n  const [applicationDate, setApplicationDate] = useState(\n    app.application ? trimDate(app.application) : ''\n  );\n  const [interviewDate, setInterviewDate] = useState(\n    app.interview ? trimDate(app.interview) : ''\n  );\n  const [offerDate, setOfferDate] = useState(\n    app.offer ? trimDate(app.offer) : ''\n  );\n  const [offerAcceptanceDate, setOfferAcceptanceDate] = useState(\n    app.offer_acceptance ? trimDate(app.offer_acceptance) : ''\n  );\n\n  const [showColorSelect, setShowColorSelect] = useState(false);\n\n  const modalRef = useRef();\n\n  const validateForm = () => {\n    let arr = [];\n    if (company.length < 1) {\n      arr.push('Company name is a required field');\n    }\n    if (jobTitle.length < 1) {\n      arr.push('Job title is a required field');\n    }\n    if (arr.length < 1) {\n      return true;\n    } else {\n      setValidationMessages(arr);\n      return false;\n    }\n  };\n\n  const handleUpdateButtonClick = (e) => {\n    dispatch({ type: UPDATE_APP_RESET });\n\n    if (validateForm()) {\n      let updatedApp = app;\n      updatedApp.companyName = company;\n      updatedApp.jobTitle = jobTitle;\n      updatedApp.url = url;\n      updatedApp.color = color;\n      updatedApp.salary = salary;\n      updatedApp.location = location;\n      updatedApp.description = description;\n      updatedApp.deadline = deadline;\n      updatedApp.application = applicationDate;\n      updatedApp.offer = offerDate;\n      updatedApp.offer_acceptance = offerAcceptanceDate;\n      updatedApp.interview = interviewDate;\n\n      dispatch(updateAppById(updatedApp));\n    }\n  };\n\n  const openListSelect = (e) => {\n    e.stopPropagation();\n    setShowListSelect(true);\n  };\n\n  const closeListSelect = () => {\n    setShowListSelect(false);\n  };\n\n  const handleCloseButtonClick = (e) => {\n    handleClose();\n  };\n\n  const changeColorTo = (color) => {\n    setColor(color);\n  };\n\n  const openColorSelect = () => {\n    setShowColorSelect(true);\n  };\n\n  const closeColorSelect = () => {\n    setShowColorSelect(false);\n  };\n\n  return (\n    <>\n      <Modal.Header\n        className={`detailModal-header ${color ? color : 'default'} ${\n          color ? color : 'default'\n        }-modal-header-border`}\n        onClick={(e) => {\n          closeListSelect();\n          closeColorSelect();\n        }}\n        ref={modalRef}\n      >\n        <Row className='detailModal-header-nav'>\n          <div className='detailModal-header-nav-buttonContainer'>\n            <div className='detailModal-moveButton-container'>\n              <Button\n                className={`modal-button detail-modal-moveButton ${color}-accent-border`}\n                onClick={openListSelect}\n              >\n                Move\n              </Button>\n              {showListSelect && (\n                <ListSelect close={closeListSelect} app={app} />\n              )}\n            </div>\n            <Button\n              className={`${color}-accent-border modal-button detail-modal-updateButton`}\n              onClick={handleUpdateButtonClick}\n            >\n              Update\n            </Button>\n            <Button\n              className={`${color}-accent-border modal-button detail-modal-closeButton`}\n              onClick={handleCloseButtonClick}\n            >\n              Close\n            </Button>\n          </div>\n          <div className='detailModal-header-main'>\n            <div className='detailModal-header-main-text'>\n              <p className={`detailModal-header-main-text-company`}>\n                {app.companyName}\n              </p>\n              <p className={`detailModal-header-main-text-job`}>\n                {app.jobTitle}\n              </p>\n            </div>\n            <FavoriteButton app={app} color={color} />\n          </div>\n          <DetailModalNav app={app} color={color} />\n        </Row>\n      </Modal.Header>\n      <Modal.Body\n        className={`detailModal-body ${\n          color ? color : 'default'\n        }-body  ${color}-modal-body-border`}\n        as={Row}\n        onClick={() => {\n          closeListSelect();\n          closeColorSelect();\n        }}\n      >\n        <div className='detailModal-message-container'>\n          {validationMessages.length > 0 && (\n            <Message variant='danger'>\n              <ul className='validation-list'>\n                {validationMessages.map((message, i) => (\n                  <li key={i}>{message}</li>\n                ))}\n              </ul>\n            </Message>\n          )}\n          {success && (\n            <Message variant='success'>\n              Your application has been updated successfully\n            </Message>\n          )}\n          {error && <Message variant='danger'>{error}</Message>}\n        </div>\n\n        <Col\n          xs={12}\n          sm={12}\n          md={8}\n          className='detailModal-body-left'\n          as={Row}\n          autoComplete='off'\n        >\n          <Form.Group as={Col} xs={12} sm={6} md={6} lg={6}>\n            <Form.Label>Company</Form.Label>\n            <Form.Control\n              autoComplete='off'\n              className='capitalize'\n              value={company}\n              placeholder='+ Company Name'\n              onChange={(e) => {\n                setCompany(e.target.value);\n              }}\n            ></Form.Control>\n          </Form.Group>\n          <Form.Group as={Col} xs={12} sm={6} md={6} lg={6}>\n            <Form.Label>Job Title</Form.Label>\n            <Form.Control\n              autoComplete='off'\n              className='capitalize'\n              value={jobTitle}\n              onChange={(e) => {\n                setJobTitle(e.target.value);\n              }}\n              placeholder='+ Job Title'\n            ></Form.Control>\n          </Form.Group>\n          <Form.Group as={Col} xs={12} sm={6} md={8}>\n            <Form.Label>URL</Form.Label>\n            <Form.Control\n              autoComplete='off'\n              value={url}\n              onChange={(e) => {\n                setUrl(e.target.value);\n              }}\n              placeholder='+ Enter URL'\n            ></Form.Control>\n          </Form.Group>\n          <Form.Group as={Col} xs={12} sm={6} md={4}>\n            <Form.Label>Salary</Form.Label>\n            <Form.Control\n              autoComplete='off'\n              value={salary ? salary : ''}\n              onChange={(e) => {\n                setSalary(e.target.value);\n              }}\n              placeholder='+ Salary'\n            ></Form.Control>\n          </Form.Group>\n          <Form.Group as={Col} xs={12} sm={6} md={8}>\n            <Form.Label>Location</Form.Label>\n            <Form.Control\n              autoComplete='off'\n              className='capitalize'\n              value={location}\n              onChange={(e) => {\n                setLocation(e.target.value);\n              }}\n              placeholder='+ Location'\n            ></Form.Control>\n          </Form.Group>\n          <Form.Group as={Col} xs={12} sm={6} md={4}>\n            <Form.Label>Color</Form.Label>\n            <ColorSelect\n              color={color}\n              setColor={changeColorTo}\n              show={showColorSelect}\n              openColorSelect={openColorSelect}\n              closeColorSelect={closeColorSelect}\n            />\n          </Form.Group>\n          <Form.Group as={Col} xs={12}>\n            <Form.Label>Description</Form.Label>\n            <Form.Control\n              autoComplete='off'\n              as='textarea'\n              value={description}\n              onChange={(e) => {\n                setDescription(e.target.value);\n              }}\n              placeholder='+ Description...'\n            ></Form.Control>\n          </Form.Group>\n        </Col>\n        <Col xs={12} sm={12} md={4} className='detailModal-body-right'>\n          <Row className='detailModal-body-right-content'>\n            <Form.Group as={Col}>\n              <Form.Label className='detailModal-date-container'>\n                <span className='detailModal-date-title'>\n                  Application Deadline\n                </span>\n                <span\n                  className={`clear-border detailModal-date-clear ${color}-clear-border`}\n                  onClick={(e) => {\n                    setDeadline('');\n                  }}\n                >\n                  Clear\n                </span>\n              </Form.Label>\n              <Form.Control\n                type='date'\n                value={deadline}\n                onChange={(e) => {\n                  setDeadline(e.target.value);\n                }}\n              ></Form.Control>\n            </Form.Group>\n            <Form.Group as={Col}>\n              <Form.Label className='detailModal-date-container'>\n                <span className='detailModal-date-title'>Applied on</span>\n                <span\n                  className={`clear-border detailModal-date-clear ${color}-clear-border`}\n                  onClick={(e) => {\n                    setApplicationDate('');\n                  }}\n                >\n                  Clear\n                </span>\n              </Form.Label>\n              <Form.Control\n                type='date'\n                value={applicationDate}\n                onChange={(e) => {\n                  setApplicationDate(e.target.value);\n                }}\n              ></Form.Control>\n            </Form.Group>\n            <Form.Group as={Col}>\n              <Form.Label className='detailModal-date-container'>\n                <span className='detailModal-date-title'>Interview Date</span>\n                <span\n                  className={`clear-border detailModal-date-clear ${color}-clear-border`}\n                  onClick={(e) => {\n                    setInterviewDate('');\n                  }}\n                >\n                  Clear\n                </span>\n              </Form.Label>\n              <Form.Control\n                type='date'\n                value={interviewDate}\n                onChange={(e) => {\n                  setInterviewDate(e.target.value);\n                }}\n              ></Form.Control>\n            </Form.Group>\n            <Form.Group as={Col}>\n              <Form.Label className='detailModal-date-container'>\n                <span className='detailModal-date-title'>Offer Recieved</span>\n                <span\n                  className={`clear-border detailModal-date-clear ${color}-clear-border`}\n                  onClick={(e) => {\n                    setOfferDate('');\n                  }}\n                >\n                  Clear\n                </span>\n              </Form.Label>\n              <Form.Control\n                autoComplete='off'\n                type='date'\n                value={offerDate}\n                onChange={(e) => {\n                  setOfferDate(e.target.value);\n                }}\n              ></Form.Control>\n            </Form.Group>\n            <Form.Group as={Col}>\n              <Form.Label className='detailModal-date-container'>\n                <span className='detailModal-date-title'>Accept Offer by</span>\n                <span\n                  className={`clear-border detailModal-date-clear ${color}-clear-border`}\n                  onClick={(e) => {\n                    setOfferAcceptanceDate('');\n                  }}\n                >\n                  Clear\n                </span>\n              </Form.Label>\n              <Form.Control\n                type='date'\n                value={offerAcceptanceDate}\n                onChange={(e) => {\n                  setOfferAcceptanceDate(e.target.value);\n                }}\n              ></Form.Control>\n            </Form.Group>\n          </Row>\n        </Col>\n        <Button\n          className='detail-modal-updateButton detailModal-updateButton-xs'\n          onClick={() => {\n            handleUpdateButtonClick();\n            modalRef.current.scrollIntoView({\n              behavior: 'smooth',\n              block: 'start',\n            });\n          }}\n        >\n          Update\n        </Button>\n      </Modal.Body>\n    </>\n  );\n};\n\nexport default DetailModal;\n","import { Modal } from 'react-bootstrap';\nimport { Route } from 'react-router-dom';\n\nimport NotesModal from '../NotesModal';\nimport DetailModal from '../DetailModal';\nimport '../../styles/appDetailsModal.css';\n\nconst AppDetailsModal = ({ app, show, handleClose }) => {\n  return (\n    <Modal\n      show={show}\n      onHide={handleClose}\n      centered\n      size='xl'\n      className='detailModal'\n    >\n      <Route\n        path={`/app_details/${app.id}`}\n        render={(props) => (\n          <DetailModal {...props} app={app} handleClose={handleClose} />\n        )}\n      />\n      <Route\n        path={`/app_notes/${app.id}`}\n        render={(props) => (\n          <NotesModal {...props} app={app} handleClose={handleClose} />\n        )}\n      />\n    </Modal>\n  );\n};\n\nexport default AppDetailsModal;\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Draggable } from 'react-beautiful-dnd';\nimport { deleteAppById } from '../actions/appActions';\nimport { UPDATE_APP_RESET } from '../constants/appConstants';\nimport { useHistory } from 'react-router-dom';\n\nimport FooterEvent from './FooterEvent';\nimport DeleteAppModal from './modals/DeleteAppModal';\nimport AppDetailsModal from './modals/AppDetailsModal';\nimport FavoriteButton from './FavoriteButton';\n\nimport '../styles/appCard.css';\nimport '../styles/colorPalette.css';\n\nconst AppCard = ({ app, favslist, index }) => {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const { companyName, jobTitle, id, color } = app;\n\n  const [showDeleteModal, setShowDeleteModal] = useState(false);\n  const [showDetailsModal, setShowDetailsModal] = useState(false);\n  const [detailsModalDisabled, setDetailsModalDisabled] = useState(false);\n\n  const deleteHandler = (e) => {\n    dispatch(deleteAppById(app));\n    closeDeleteModal();\n  };\n\n  const openDeleteModal = () => {\n    setShowDeleteModal(true);\n  };\n\n  const closeDeleteModal = () => {\n    setShowDeleteModal(false);\n  };\n\n  const openDetailsModal = () => {\n    if (!detailsModalDisabled) {\n      history.push(`/app_details/${app.id}`);\n      setShowDetailsModal(true);\n    }\n  };\n\n  const closeDetailsModal = () => {\n    history.push('/');\n    setShowDetailsModal(false);\n    dispatch({ type: UPDATE_APP_RESET });\n  };\n\n  const disableDetailsModal = () => {\n    setDetailsModalDisabled(true);\n  };\n\n  const enableDetailsModal = () => {\n    setDetailsModalDisabled(false);\n  };\n\n  return (\n    <>\n      <Draggable draggableId={id} index={index}>\n        {(provided) => (\n          <div\n            className={`app-card ${\n              color ? color : 'white'\n            } ${color}-card-border`}\n            ref={provided.innerRef}\n            {...provided.draggableProps}\n            {...provided.dragHandleProps}\n            onClick={openDetailsModal}\n          >\n            <div className='app-card-body'>\n              <div className='app-card-body-left'>\n                <span className='app-card-body-job'>{jobTitle}</span>\n                <span className='app-card-body-company'>{companyName}</span>\n              </div>\n              <div\n                className='app-card-body-right'\n                onMouseOver={disableDetailsModal}\n                onMouseLeave={enableDetailsModal}\n              >\n                <FavoriteButton app={app} color={app.color} />\n                <i\n                  className='far fa-trash-alt'\n                  onClick={openDeleteModal}\n                  title='Delete'\n                ></i>\n              </div>\n            </div>\n            <div className='app-card-footer'>\n              <div className='app-card-footer-content'>\n                <FooterEvent app={app} />\n              </div>\n            </div>\n          </div>\n        )}\n      </Draggable>\n      <DeleteAppModal\n        show={showDeleteModal}\n        handleClose={closeDeleteModal}\n        deleteHandler={deleteHandler}\n        item={'job'}\n      />\n      <AppDetailsModal\n        app={app}\n        show={showDetailsModal}\n        handleClose={closeDetailsModal}\n      />\n    </>\n  );\n};\n\nexport default AppCard;\n","import React from 'react';\nimport axios from 'axios';\nimport { DragDropContext } from 'react-beautiful-dnd';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { USER_APPS_SUCCESS } from '../constants/appConstants';\n\nconst FavoritedDragDropContext = ({ children }) => {\n  const dispatch = useDispatch();\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n  const userApps = useSelector((state) => state.userApps);\n  const { apps } = userApps;\n\n  const onDragEnd = async (result) => {\n    const { destination, source, draggableId } = result;\n    if (!destination) {\n      return;\n    }\n    if (\n      destination.droppableId === source.droppableId &&\n      destination.index === source.index\n    ) {\n      return;\n    }\n\n    let moveData = {\n      sourceIndex: source.index,\n      destinationIndex: destination.index,\n      appId: draggableId,\n    };\n\n    let config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n        'Content-Type': 'application/json',\n      },\n    };\n\n    let appsCopy = apps;\n\n    if (source.index < destination.index) {\n      for (let key in appsCopy) {\n        appsCopy[key].forEach((e) => {\n          if (e.fav_index > source.index && e.fav_index <= destination.index) {\n            e.fav_index -= 1;\n            return;\n          }\n          if (e.fav_index === source.index) {\n            e.fav_index = destination.index;\n          }\n        });\n      }\n    } else {\n      for (let key in appsCopy) {\n        appsCopy[key].forEach((e) => {\n          if (e.fav_index < source.index && e.fav_index >= destination.index) {\n            e.fav_index += 1;\n            return;\n          }\n          if (e.fav_index === source.index) {\n            e.fav_index = destination.index;\n          }\n        });\n      }\n    }\n\n    await axios.put('/api/apps/update/fav_index', moveData, config);\n    dispatch({ type: USER_APPS_SUCCESS, payload: appsCopy });\n  };\n\n  return <DragDropContext onDragEnd={onDragEnd}>{children}</DragDropContext>;\n};\n\nexport default FavoritedDragDropContext;\n","import React from 'react';\nimport { Modal } from 'react-bootstrap';\nimport { useSelector } from 'react-redux';\nimport { Droppable } from 'react-beautiful-dnd';\nimport AppCard from '../AppCard';\nimport FavoritedDragDropContext from '../FavoritedDragDropContext.jsx';\nimport '../../styles/favoritedAppsModal.css';\n\nconst FavoritedAppsModal = ({ show, onHide }) => {\n  const userApps = useSelector((state) => state.userApps);\n  const { apps } = userApps;\n  let favoritedApps = [];\n  for (let list in apps) {\n    favoritedApps = [...favoritedApps, ...apps[list]];\n  }\n\n  return (\n    <FavoritedDragDropContext>\n      <Modal\n        show={show}\n        onHide={onHide}\n        centered\n        size='xl'\n        className='favoritesModal'\n        onClick={() => {}}\n      >\n        <Modal.Body className='favoritesModal-body'>\n          <div className='list-container'>\n            <div className='list-header'>\n              <span className='list-header-icon'>\n                <i className='far fa-bookmark' />\n              </span>\n              <div className='list-header-main'>\n                <div className='list-header-main-title'>Favorited</div>\n                <div className='list-header-main-count'>\n                  {favoritedApps.filter((app) => app.favorited === true)\n                    .length === 0\n                    ? 0\n                    : favoritedApps.filter((app) => app.favorited === true)\n                        .length}{' '}\n                  {`job${\n                    favoritedApps.filter((app) => app.favorited === true)\n                      .length === 1\n                      ? ''\n                      : 's'\n                  }`}\n                </div>\n              </div>\n            </div>\n\n            <Droppable droppableId='favorited'>\n              {(provided) => (\n                <div\n                  className='list-body-main'\n                  ref={provided.innerRef}\n                  {...provided.droppableProps}\n                >\n                  {favoritedApps &&\n                    favoritedApps\n                      .filter((app) => app.favorited === true)\n                      .sort((a, b) => a.fav_index - b.fav_index)\n                      .map((app) => (\n                        <AppCard\n                          app={app}\n                          key={app.id}\n                          favslist\n                          index={app.fav_index}\n                        />\n                      ))}\n                  {provided.placeholder}\n                </div>\n              )}\n            </Droppable>\n          </div>\n        </Modal.Body>\n      </Modal>\n    </FavoritedDragDropContext>\n  );\n};\n\nexport default FavoritedAppsModal;\n","import React, { useState } from 'react';\nimport '../styles/openFavorites.css';\nimport FavoritedAppsModal from './modals/FavoritedAppsModal';\n\nconst OpenFavorites = () => {\n  const [showFavorites, setShowFavorites] = useState(false);\n\n  const handleClose = () => {\n    setShowFavorites(false);\n  };\n\n  return (\n    <>\n      <div\n        className='openFavorites header-icon'\n        title='Show Bookmarked'\n        onClick={(e) => {\n          e.stopPropagation();\n          setShowFavorites(true);\n        }}\n      >\n        <i className='fas fa-bookmark openFavorites-icon fa-lg' />\n      </div>\n      <FavoritedAppsModal show={showFavorites} onHide={handleClose} />\n    </>\n  );\n};\n\nexport default OpenFavorites;\n","import React from 'react';\nimport '../styles/logo.css';\n\nconst Logo = () => {\n  return (\n    <div className='logo-container'>\n      <div className='logo-block orange'></div>\n      <div className='logo-block off-white'></div>\n      <div className='logo-block purple'></div>\n    </div>\n  );\n};\n\nexport default Logo;\n","import React from 'react';\nimport { Container } from 'react-bootstrap';\nimport { useSelector } from 'react-redux';\nimport LogoutButton from './LogoutButton';\nimport OpenFavorites from './OpenFavorites';\nimport '../styles/header.css';\nimport Logo from './Logo';\n\nconst Header = () => {\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  return (\n    <Container fluid className='header-background'>\n      <Container className='header-container' fluid>\n        <div className='header-left'>\n          <Logo />\n          <span className='header-logo-text'>JobTrackr</span>\n        </div>\n        <div className='header-center'></div>\n        <div className='header-right'>\n          {userInfo && <OpenFavorites />}\n          <LogoutButton />\n        </div>\n      </Container>\n    </Container>\n  );\n};\n\nexport default Header;\n","import React, { useState, useEffect, useCallback } from 'react';\nimport { Modal, Button, Form, Col, Row } from 'react-bootstrap';\nimport { useSelector, useDispatch } from 'react-redux';\nimport '../../styles/newAppModal.css';\nimport { addAppToList } from '../../actions/appActions';\nimport ColorSelect from '../ColorSelect';\nimport Message from '../Message';\nimport { POST_APP_RESET } from '../../constants/appConstants';\n\nconst listValues = [\n  'Wishlist',\n  'Applied',\n  'Phone',\n  'On Site',\n  'Offer',\n  'Rejected',\n];\n\nconst NewAppModal = ({ show, handleClose, listValue }) => {\n  const dispatch = useDispatch();\n  const postApp = useSelector((state) => state.postApp);\n  const { success, error } = postApp;\n\n  let today = new Date(Date());\n  let dd = String(today.getDate()).padStart(2, '0');\n  let mm = String(today.getMonth() + 1).padStart(2, '0');\n  let yyyy = today.getFullYear();\n\n  const [companyName, setCompanyName] = useState('');\n  const [jobTitle, setJobTitle] = useState('');\n  const [list, setList] = useState(listValue);\n  const [date, setDate] = useState(`${yyyy}-${mm}-${dd}`);\n  const [url, setUrl] = useState('');\n  const [salary, setSalary] = useState('');\n  const [location, setLocation] = useState('');\n  const [color, setColor] = useState('default');\n  const [description, setDescription] = useState('');\n  const [validationMessages, setValidationMessages] = useState([]);\n\n  const [showColorSelect, setShowColorSelect] = useState(false);\n\n  const resetForm = useCallback(() => {\n    setCompanyName('');\n    setJobTitle('');\n    setList(listValue);\n    setDate(`${yyyy}-${mm}-${dd}`);\n    setUrl('');\n    setSalary('');\n    setColor('default');\n    setDescription('');\n    dispatch({ type: POST_APP_RESET });\n    setValidationMessages([]);\n  }, [dd, dispatch, listValue, mm, yyyy]);\n\n  useEffect(() => {\n    if (success) {\n      handleClose();\n      setTimeout(resetForm, 1000);\n    }\n  }, [success, handleClose, resetForm]);\n\n  const validateForm = () => {\n    let arr = [];\n    if (companyName.length < 1) {\n      arr.push('Company name is a required field');\n    }\n    if (jobTitle.length < 1) {\n      arr.push('Job title is a required field');\n    }\n    if (arr.length < 1) {\n      setValidationMessages([]);\n      return true;\n    } else {\n      setValidationMessages(arr);\n      return false;\n    }\n  };\n\n  const submitHandler = async (e) => {\n    e.preventDefault();\n    setValidationMessages([]);\n    if (validateForm()) {\n      let application = {\n        companyName,\n        jobTitle,\n        list,\n        date,\n        url,\n        salary,\n        location,\n        color,\n        description,\n        notes: [],\n      };\n      dispatch(addAppToList(application));\n    }\n  };\n\n  const changeColorTo = (color) => {\n    setColor(color);\n  };\n\n  const openColorSelect = () => {\n    setShowColorSelect(true);\n  };\n\n  const closeColorSelect = () => {\n    setShowColorSelect(false);\n  };\n\n  const onHide = () => {\n    handleClose();\n    resetForm();\n    closeColorSelect();\n  };\n\n  return (\n    <Modal\n      show={show}\n      onHide={onHide}\n      centered\n      size='md'\n      className='newAppModal'\n      contentClassName='newAppCustomModal'\n      onClick={() => {\n        if (showColorSelect) {\n          closeColorSelect();\n        }\n      }}\n    >\n      <Modal.Header>\n        <Modal.Title>Track a new application</Modal.Title>\n        <div className='newAppModal-button-container'>\n          <Button\n            onClick={submitHandler}\n            variant='success'\n            className='modal-button'\n          >\n            Save\n          </Button>\n          <Button variant='dark' onClick={handleClose} className='modal-button'>\n            Close\n          </Button>\n        </div>\n      </Modal.Header>\n      <Modal.Body>\n        {validationMessages.length > 0 && (\n          <Message variant='danger'>\n            <ul className='validation-list'>\n              {validationMessages.map((message, i) => (\n                <li key={i}>{message}</li>\n              ))}\n            </ul>\n          </Message>\n        )}\n        {success && (\n          <Message variant='success'>\n            Your application has been saved successfully\n          </Message>\n        )}\n        {error && <Message variant='danger'>{error}</Message>}\n        <Form as={Row} autoComplete='off'>\n          <Form.Group as={Col} controlId='companyName' xs={12} sm={6}>\n            <Form.Label>Company Name *</Form.Label>\n            <Form.Control\n              autoComplete='off'\n              placeholder='Company Name'\n              value={companyName}\n              onChange={(e) => {\n                setCompanyName(e.target.value);\n              }}\n            ></Form.Control>\n          </Form.Group>\n          <Form.Group controlId='jobTitle' as={Col} xs={12} sm={6}>\n            <Form.Label>Job Title *</Form.Label>\n            <Form.Control\n              autoComplete='off'\n              placeholder='Enter Job Title'\n              value={jobTitle}\n              onChange={(e) => {\n                setJobTitle(e.target.value);\n              }}\n            ></Form.Control>\n          </Form.Group>\n\n          <Form.Group controlId='list' as={Col} xs={12} sm={6}>\n            <Form.Label>List</Form.Label>\n            <Form.Control\n              as='select'\n              value={list}\n              onChange={(e) => {\n                setList(e.target.value);\n              }}\n            >\n              {listValues.map((item, i) => (\n                <option value={i + 1} key={i + 1}>\n                  {listValues[i]}\n                </option>\n              ))}\n            </Form.Control>\n          </Form.Group>\n\n          <Form.Group controlId='dateApplied' as={Col} xs={12} sm={6}>\n            <Form.Label>Date Applied</Form.Label>\n            <Form.Control\n              type='date'\n              value={date}\n              onChange={(e) => {\n                setDate(e.target.value);\n              }}\n            ></Form.Control>\n          </Form.Group>\n\n          <Form.Group controlId='url' as={Col} xs={12} sm={6}>\n            <Form.Label>URL</Form.Label>\n            <Form.Control\n              autoComplete='off'\n              placeholder='+  Add URL'\n              value={url}\n              onChange={(e) => {\n                setUrl(e.target.value);\n              }}\n            ></Form.Control>\n          </Form.Group>\n\n          <Form.Group controlId='salary' as={Col} xs={12} sm={6}>\n            <Form.Label>Salary</Form.Label>\n            <Form.Control\n              autoComplete='off'\n              placeholder='Salary'\n              value={salary}\n              onChange={(e) => {\n                setSalary(e.target.value);\n              }}\n            ></Form.Control>\n          </Form.Group>\n\n          <Form.Group controlId='location' as={Col} xs={12} sm={6}>\n            <Form.Label>Location</Form.Label>\n            <Form.Control\n              autoComplete='off'\n              placeholder='Location'\n              value={location}\n              onChange={(e) => {\n                setLocation(e.target.value);\n              }}\n            ></Form.Control>\n          </Form.Group>\n\n          <Form.Group controlId='color' as={Col} xs={12} sm={6}>\n            <Form.Label>Color</Form.Label>\n            <ColorSelect\n              color={color}\n              setColor={changeColorTo}\n              show={showColorSelect}\n              openColorSelect={openColorSelect}\n              closeColorSelect={closeColorSelect}\n            />\n          </Form.Group>\n\n          <Form.Group controlId='description' as={Col} xs={12}>\n            <Form.Label>Description</Form.Label>\n            <Form.Control\n              autoComplete='off'\n              placeholder='Job Description'\n              value={description}\n              as='textarea'\n              onChange={(e) => {\n                setDescription(e.target.value);\n              }}\n            ></Form.Control>\n          </Form.Group>\n        </Form>\n      </Modal.Body>\n    </Modal>\n  );\n};\n\nexport default NewAppModal;\n","import React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport '../styles/appList.css';\nimport AppCard from './AppCard';\nimport { Droppable } from 'react-beautiful-dnd';\nimport NewAppModal from './modals/NewAppModal';\nimport { Col } from 'react-bootstrap';\n\nconst content = {\n  wishlist: 'For later',\n  applied: 'Applied',\n  phone: 'Phone Interview',\n  'on site': 'On Site Interview',\n  offer: 'Offer Recieved',\n  rejected: 'Rejected',\n};\n\nconst AppList = ({ name, icon, listIntFromDB }) => {\n  const [showModal, setShowModal] = useState(false);\n\n  const userApps = useSelector((state) => state.userApps);\n  const { apps } = userApps;\n\n  const handleClose = () => {\n    setShowModal(false);\n  };\n\n  const showAppModal = () => {\n    setShowModal(true);\n  };\n\n  return (\n    <>\n      <Col className='list-container' xs={6} sm={4} md={4} lg={4} xl={2}>\n        <div className='list-header'>\n          <div className='list-header-main'>\n            <div className='list-header-main-title'>\n              <span>\n                <i className={icon}></i>\n              </span>\n              {content[name]}\n            </div>\n            <div className='list-header-main-count'>\n              {apps && apps[name] && apps[name].length ? apps[name].length : 0}{' '}\n              job\n              {`${apps[name].length === 1 ? '' : 's'}`}\n            </div>\n          </div>\n        </div>\n        <div className='list-add' onClick={showAppModal}>\n          <i className='fas fa-plus' />\n        </div>\n        <Droppable droppableId={name}>\n          {(provided) => (\n            <div\n              className='list-body-main'\n              ref={provided.innerRef}\n              {...provided.droppableProps}\n            >\n              {apps &&\n                apps[name] &&\n                apps[name].map((app, index) => (\n                  <AppCard app={app} key={app.id} index={index} />\n                ))}\n              {provided.placeholder}\n            </div>\n          )}\n        </Droppable>\n      </Col>\n      <NewAppModal\n        show={showModal}\n        handleClose={handleClose}\n        listValue={listIntFromDB}\n      />\n    </>\n  );\n};\n\nexport default AppList;\n","import React from 'react';\nimport axios from 'axios';\nimport { DragDropContext } from 'react-beautiful-dnd';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { USER_APPS_SUCCESS } from '../constants/appConstants';\nimport nameValuePairs from '../data/lookUpTables/listNameValuePairs';\n\nconst DragDropContextComponent = ({ children }) => {\n  const dispatch = useDispatch();\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n  const userApps = useSelector((state) => state.userApps);\n  const { apps } = userApps;\n\n  const onDragEnd = async (result) => {\n    const { destination, source, draggableId } = result;\n    if (!destination) return;\n\n    if (\n      destination.droppableId === source.droppableId &&\n      destination.index === source.index\n    )\n      return;\n\n    let appsCopy = apps;\n\n    let config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n        'Content-Type': 'application/json',\n      },\n    };\n\n    let moveData = {\n      sourceIndex: source.index,\n      destinationIndex: destination.index,\n      sourceList: source.droppableId,\n      destinationList: destination.droppableId,\n      appId: draggableId,\n    };\n\n    if (destination.droppableId === source.droppableId) {\n      let listName = destination.droppableId;\n      let arr = appsCopy[listName];\n      let app = arr.splice(source.index, 1);\n      app = app[0];\n\n      if (source.index < destination.index) {\n        for (let i = source.index; i < destination.index; i++) {\n          arr[i].index = arr[i].index - 1;\n        }\n      } else {\n        for (let i = destination.index; i < source.index; i++) {\n          arr[i].index = arr[i].index + 1;\n        }\n      }\n      app.index = destination.index;\n      arr.splice(destination.index, 0, app);\n      appsCopy[listName] = arr;\n\n      await axios.put('/api/apps/update/index', moveData, config);\n\n      dispatch({ type: USER_APPS_SUCCESS, payload: appsCopy });\n      return;\n    }\n\n    if (destination.droppableId !== source.droppableId) {\n      let sourceArr = appsCopy[source.droppableId];\n\n      let destinationArr = appsCopy[destination.droppableId];\n      let app = sourceArr.splice(source.index, 1);\n      app = app[0];\n      app.index = destination.index;\n      app.list = nameValuePairs.indexOf(destination.droppableId);\n      for (let i = source.index; i < sourceArr.length; i++) {\n        sourceArr[i].index -= 1;\n      }\n      for (let i = destination.index; i < destinationArr.length; i++) {\n        destinationArr[i].index += 1;\n      }\n      destinationArr.splice(destination.index, 0, app);\n      appsCopy[source.droppableId] = sourceArr;\n      appsCopy[destination.droppableId] = destinationArr;\n\n      dispatch({ type: USER_APPS_SUCCESS, payload: appsCopy });\n      await axios.put('/api/apps/update/index', moveData, config);\n    }\n  };\n\n  return <DragDropContext onDragEnd={onDragEnd}>{children}</DragDropContext>;\n};\n\nexport default DragDropContextComponent;\n","import React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport AppList from '../components/AppList';\nimport DragDropContextComponent from '../components/DragDropContextComponent';\n\nconst HomeScreen = ({ history }) => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {}, [dispatch]);\n\n  return (\n    <>\n      <DragDropContextComponent>\n        <AppList name='wishlist' icon='fas fa-calendar-alt' listIntFromDB={1} />\n        <AppList name='applied' icon='far fa-paper-plane' listIntFromDB={2} />\n        <AppList\n          name='phone'\n          icon='fas fa-phone-square-alt'\n          listIntFromDB={3}\n        />\n        <AppList\n          name='on site'\n          icon='fas fa-map-marker-alt'\n          listIntFromDB={4}\n        />\n        <AppList name='offer' icon='fas fa-award' listIntFromDB={5} />\n        <AppList name='rejected' icon='far fa-thumbs-down' listIntFromDB={6} />\n      </DragDropContextComponent>\n    </>\n  );\n};\n\nexport default HomeScreen;\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nimport { userLoginReducer, userRegisterReducer } from '../reducers/userReducer';\nimport {\n  userAppsReducer,\n  postAppReducer,\n  updateAppReducer,\n} from '../reducers/appReducer';\nimport { notePostReducer } from '../reducers/noteReducer';\nconst reducer = combineReducers({\n  userApps: userAppsReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  postApp: postAppReducer,\n  updateApp: updateAppReducer,\n  notePost: notePostReducer,\n});\n\nconst userInfoFromStorage = sessionStorage.getItem('userInfo')\n  ? JSON.parse(sessionStorage.getItem('userInfo'))\n  : null;\n\nconst userAppsFromStorage = localStorage.getItem('apps')\n  ? JSON.parse(localStorage.getItem('apps'))\n  : {\n      wishlist: [],\n      applied: [],\n      phone: [],\n      'on site': [],\n      offer: [],\n      rejected: [],\n    };\n\nconst initialState = {\n  userLogin: { userInfo: userInfoFromStorage },\n  userApps: { apps: userAppsFromStorage },\n};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  reducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n","import {\n  USER_APPS_REQUEST,\n  USER_APPS_SUCCESS,\n  USER_APPS_FAIL,\n  USER_APPS_RESET,\n  POST_APP_REQUEST,\n  POST_APP_SUCCESS,\n  POST_APP_FAIL,\n  POST_APP_RESET,\n  UPDATE_APP_REQUEST,\n  UPDATE_APP_SUCCESS,\n  UPDATE_APP_FAIL,\n  UPDATE_APP_RESET,\n} from '../constants/appConstants';\n\nexport const userAppsReducer = (\n  state = {\n    apps: {\n      wishlist: [],\n      applied: [],\n      phone: [],\n      'on site': [],\n      offer: [],\n      rejected: [],\n    },\n  },\n  action\n) => {\n  switch (action.type) {\n    case USER_APPS_REQUEST:\n      return { ...state, loading: true };\n    case USER_APPS_SUCCESS:\n      return { loading: false, apps: action.payload, success: true };\n    case USER_APPS_FAIL:\n      return { ...state, loading: false, error: action.payload };\n    case USER_APPS_RESET:\n      return {\n        apps: {\n          wishlist: [],\n          applied: [],\n          phone: [],\n          'on site': [],\n          offer: [],\n          rejected: [],\n        },\n      };\n    default:\n      return { ...state };\n  }\n};\n\nexport const postAppReducer = (state = {}, action) => {\n  switch (action.type) {\n    case POST_APP_REQUEST:\n      return { loading: true };\n    case POST_APP_SUCCESS:\n      return { loading: false, success: true };\n    case POST_APP_FAIL:\n      return { loading: false, error: action.payload };\n    case POST_APP_RESET:\n      return {};\n    default:\n      return { ...state };\n  }\n};\n\nexport const updateAppReducer = (state = {}, action) => {\n  switch (action.type) {\n    case UPDATE_APP_REQUEST:\n      return { loading: true };\n    case UPDATE_APP_SUCCESS:\n      return { loading: false, success: true };\n    case UPDATE_APP_FAIL:\n      return { loading: false, error: action.payload };\n    case UPDATE_APP_RESET:\n      return {};\n    default:\n      return state;\n  }\n};\n","import {\n  USER_LOGIN_REQUEST,\n  USER_LOGIN_SUCCESS,\n  USER_LOGIN_FAIL,\n  USER_LOGOUT,\n  USER_REGISTER_REQUEST,\n  USER_REGISTER_SUCCESS,\n  USER_REGISTER_FAIL,\n  USER_REGISTER_RESET,\n} from '../constants/userConstants.js';\n\nexport const userLoginReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_LOGIN_REQUEST:\n      return { loading: true };\n    case USER_LOGIN_SUCCESS:\n      return { loading: false, userInfo: action.payload };\n    case USER_LOGIN_FAIL:\n      return { loading: false, error: action.payload };\n    case USER_LOGOUT:\n      return {};\n    default:\n      return state;\n  }\n};\n\nexport const userRegisterReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_REGISTER_REQUEST:\n      return { loading: true };\n    //after register returns success dispatch userLoginReducer with returned successfully created user object or throw error\n    case USER_REGISTER_SUCCESS:\n      return { loading: false, success: true };\n    case USER_REGISTER_FAIL:\n      return { loading: false, error: action.payload };\n    case USER_REGISTER_RESET:\n      return {};\n    default:\n      return state;\n  }\n};\n","import {\n  POST_NOTE_REQUEST,\n  POST_NOTE_SUCCESS,\n  POST_NOTE_FAIL,\n  POST_NOTE_RESET,\n} from '../constants/noteConstants';\n\nexport const notePostReducer = (state, action) => {\n  switch (action.type) {\n    case POST_NOTE_REQUEST:\n      return { loading: true };\n    case POST_NOTE_SUCCESS:\n      return { loading: false, success: true };\n    case POST_NOTE_FAIL:\n      return { loading: false, error: action.payload };\n    case POST_NOTE_RESET:\n      return {};\n    default:\n      return { ...state };\n  }\n};\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Header from './components/Header';\nimport HomeScreen from './screens/HomeScreen';\nimport store from './stores/store.js';\nimport './styles/app.css';\nimport { Row } from 'react-bootstrap';\n\nconst App = () => {\n  return (\n    <Provider store={store}>\n      <Router>\n        <Header />\n        <main className='app-main'>\n          <Row className='app-main-container'>\n            <Switch>\n              <Route component={HomeScreen} path='/' />\n            </Switch>\n          </Row>\n        </main>\n      </Router>\n    </Provider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.jsx';\nimport './bootstrap.min.css';\nimport './styles/index.css';\nimport './styles/customBootstrap.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}
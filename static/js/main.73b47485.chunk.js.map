{"version":3,"sources":["constants/appConstants.js","data/lookUpTables/listNameValuePairs.js","actions/appActions.js","components/modals/DeleteAppModal.jsx","components/ListSelect.jsx","components/FavoriteButton.jsx","components/DetailModalNav.jsx","helpers/dateHelpers.js","constants/noteConstants.js","components/Message.jsx","components/AppNote.jsx","actions/noteActions.js","components/NotesModal.jsx","styles/colorPallet.js","components/ColorSelect.jsx","components/DetailModal.jsx","components/modals/AppDetailsModal.jsx","components/AppCard.jsx","components/FavoritedDragDropContext.jsx","components/modals/FavoritedAppsModal.jsx","components/OpenFavorites.jsx","components/Logo.jsx","components/Header.jsx","components/modals/NewAppModal.jsx","components/AppList.jsx","components/DragDropContextComponent.jsx","screens/HomeScreen.jsx","constants/userConstants.js","stores/store.js","reducers/appReducer.js","reducers/userReducer.js","reducers/noteReducer.js","App.jsx","index.js"],"names":["USER_APPS_REQUEST","USER_APPS_SUCCESS","USER_APPS_FAIL","USER_APPS_RESET","POST_APP_REQUEST","POST_APP_SUCCESS","POST_APP_FAIL","POST_APP_RESET","UPDATE_APP_REQUEST","UPDATE_APP_SUCCESS","UPDATE_APP_FAIL","UPDATE_APP_RESET","nameValuePairs","addAppToList","application","dispatch","getState","a","type","apps","userApps","id","uuid","list","listNameValuePairs","appsCopy","forEach","app","index","sort","b","unshift","localStorage","setItem","JSON","stringify","payload","error","response","data","message","DeleteAppModal","show","handleClose","deleteHandler","item","Modal","onHide","centered","size","className","onClick","e","stopPropagation","Body","Button","ListSelect","close","useDispatch","userInfo","useSelector","state","userLogin","handleClick","i","sourceIndex","sourceList","sourceListName","destinationListName","destinationList","appId","config","headers","Authorization","token","moveData","destinationIndex","sourceArr","destinationArr","updatedApp","splice","length","axios","put","Row","map","Col","color","xs","FavoriteButton","demoButton","setApps","favorited","key","fav_index","arr","indexOf","favoriteAppById","title","DetailModalNav","routeName","useLocation","pathname","split","to","notes","trimDate","date","slice","POST_NOTE_REQUEST","POST_NOTE_SUCCESS","POST_NOTE_FAIL","messageStyle","width","Message","variant","children","style","Alert","AppNote","note","location","useHistory","path","noteId","useState","content","setContent","showDeleteModal","setShowDeleteModal","errorMessage","setErrorMessage","editing","setEditing","closeDeleteModal","handleUpdateClick","listName","updated_on","Date","dd","String","getDate","padStart","mm","getMonth","yyyy","getFullYear","findIndex","noteIndex","updateNoteById","useEffect","created_on","Form","Control","as","value","onChange","target","placeholder","margin","padding","height","display","alignItems","paddingTop","paddingLeft","borderRadius","marginRight","filter","deleteNoteById","NotesModal","history","showListSelect","setShowListSelect","noteContent","setNoteContent","notesModalBodyRef","useRef","url","push","closeListSelect","handleSaveClick","trim","saveNote","Header","companyName","jobTitle","ref","render","props","borderBottom","Group","current","scroll","top","behavior","exact","colorsArr","ColorSelect","setColor","openColorSelect","closeColorSelect","clr","sm","md","DetailModal","updateApp","success","company","setCompany","setJobTitle","setUrl","salary","setSalary","setLocation","description","setDescription","validationMessages","setValidationMessages","deadline","setDeadline","applicationDate","setApplicationDate","interview","interviewDate","setInterviewDate","offer","offerDate","setOfferDate","offer_acceptance","offerAcceptanceDate","setOfferAcceptanceDate","showColorSelect","setShowColorSelect","modalRef","handleUpdateButtonClick","validateForm","setTimeout","updateAppById","autoComplete","lg","Label","scrollIntoView","block","AppDetailsModal","AppCard","favslist","showDetailsModal","setShowDetailsModal","detailsModalDisabled","setDetailsModalDisabled","openDeleteModal","openDetailsModal","disableDetailsModal","enableDetailsModal","draggableId","provided","innerRef","draggableProps","dragHandleProps","onMouseOver","onMouseLeave","appsArr","deleteAppById","FavoritedDragDropContext","onDragEnd","result","destination","source","droppableId","FavoritedAppsModal","favoritedApps","droppableProps","OpenFavorites","showFavorites","setShowFavorites","Logo","Container","fluid","listValues","NewAppModal","listValue","postApp","today","setCompanyName","setList","setDate","resetForm","useCallback","submitHandler","preventDefault","contentClassName","Title","controlId","wishlist","applied","phone","rejected","AppList","name","icon","listIntFromDB","showModal","setShowModal","xl","DragDropContextComponent","HomeScreen","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_REGISTER_RESET","reducer","combineReducers","action","loading","userRegister","notePost","initialState","sessionStorage","getItem","parse","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","App","component","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.73b47485.chunk.js","sourcesContent":["export const USER_APPS_REQUEST = 'USER_APPS_REQUEST';\nexport const USER_APPS_SUCCESS = 'USER_APPS_SUCCESS';\nexport const USER_APPS_FAIL = 'USER_APPS_FAIL';\nexport const USER_APPS_RESET = 'USER_APPS_RESET';\n\nexport const POST_APP_REQUEST = 'POST_APP_REQUEST';\nexport const POST_APP_SUCCESS = 'POST_APP_SUCCESS';\nexport const POST_APP_FAIL = 'POST_APP_FAIL';\nexport const POST_APP_RESET = 'POST_APP_RESET';\n\nexport const UPDATE_APP_REQUEST = 'UPDATE_APP_REQUEST';\nexport const UPDATE_APP_SUCCESS = 'UPDATE_APP_SUCCESS';\nexport const UPDATE_APP_FAIL = 'UPDATE_APP_FAIL';\nexport const UPDATE_APP_RESET = 'UPDATE_APP_RESET';\n","let nameValuePairs = [\n  '',\n  'wishlist',\n  'applied',\n  'phone',\n  'on site',\n  'offer',\n  'rejected',\n];\n\nexport default nameValuePairs;\n","import {\n  USER_APPS_SUCCESS,\n  POST_APP_REQUEST,\n  POST_APP_SUCCESS,\n  POST_APP_FAIL,\n  UPDATE_APP_REQUEST,\n  UPDATE_APP_SUCCESS,\n  UPDATE_APP_FAIL,\n  UPDATE_APP_RESET,\n} from '../constants/appConstants';\nimport listNameValuePairs from '../data/lookUpTables/listNameValuePairs';\nimport { v4 as uuid } from 'uuid';\n\n//DONE\nexport const addAppToList = (application) => async (dispatch, getState) => {\n  dispatch({ type: POST_APP_REQUEST });\n  try {\n    const {\n      userApps: { apps },\n    } = getState();\n    application.id = uuid();\n    let list = listNameValuePairs[application.list];\n\n    let appsCopy = apps;\n\n    appsCopy[list].forEach((app) => {\n      app.index++;\n    });\n    appsCopy[list].sort((a, b) => a.index - b.index);\n    appsCopy[list].unshift(application);\n    localStorage.setItem('apps', JSON.stringify(appsCopy));\n    dispatch({ type: USER_APPS_SUCCESS, payload: appsCopy });\n    dispatch({ type: POST_APP_SUCCESS });\n  } catch (error) {\n    dispatch({\n      type: POST_APP_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\n//DONE\nexport const deleteAppById = (app) => async (dispatch, getState) => {\n  const {\n    userApps: { apps },\n  } = getState();\n  const { id, list, index, fav_index, favorited } = app;\n\n  let appsCopy = apps;\n\n  if (favorited) {\n    for (let key in appsCopy) {\n      appsCopy[key].forEach((app) => {\n        if (app.fav_index > fav_index) {\n          app.fav_index -= 1;\n        }\n      });\n    }\n  }\n\n  let listName = listNameValuePairs[list];\n  let appsArr = appsCopy[listName];\n\n  appsArr.forEach((app) => {\n    if (app.index > index) app.index -= 1;\n  });\n\n  appsArr = appsArr.filter((app) => app.id !== id);\n  appsCopy[listName] = appsArr;\n  localStorage.setItem('apps', JSON.stringify(appsCopy));\n  dispatch({ type: USER_APPS_SUCCESS, payload: appsCopy });\n};\n//DONE\nexport const updateAppById = (app) => async (dispatch, getState) => {\n  try {\n    dispatch({ type: UPDATE_APP_REQUEST });\n    let {\n      userApps: { apps },\n    } = getState();\n    let list = listNameValuePairs[app.list];\n    let appsCopy = apps;\n    let arr = apps[list];\n    arr[arr.indexOf((e) => (e.id = app.id))] = app;\n    appsCopy[list] = arr;\n    localStorage.setItem('apps', JSON.stringify(appsCopy));\n    dispatch({ type: USER_APPS_SUCCESS, payload: appsCopy });\n    dispatch({ type: UPDATE_APP_SUCCESS });\n    setTimeout(() => {\n      dispatch({ type: UPDATE_APP_RESET });\n    }, 1500);\n  } catch (error) {\n    dispatch({\n      type: UPDATE_APP_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n//DONE\nexport const favoriteAppById = (app) => async (dispatch, getState) => {\n  let {\n    userApps: { apps },\n  } = getState();\n\n  if (app.favorited) {\n    for (let key in apps) {\n      apps[key].forEach((e) => {\n        if (e.fav_index >= 0) {\n          e.fav_index += 1;\n        }\n      });\n    }\n    app.fav_index = 0;\n  } else {\n    for (let key in apps) {\n      apps[key].forEach((e) => {\n        if (e.fav_index > app.fav_index) {\n          e.fav_index -= 1;\n        }\n      });\n    }\n    app.fav_index = null;\n  }\n\n  let list = listNameValuePairs[app.list];\n  let appsCopy = apps;\n  let arr = apps[list];\n  arr[arr.indexOf((e) => (e.id = app.id))] = app;\n  appsCopy[list] = arr;\n  localStorage.setItem('apps', JSON.stringify(appsCopy));\n  dispatch({ type: USER_APPS_SUCCESS, payload: appsCopy });\n};\n","import React from 'react';\nimport { Modal, Button } from 'react-bootstrap';\nimport '../../styles/deleteModal.css';\n\nconst DeleteAppModal = ({ show, handleClose, deleteHandler, item }) => {\n  return (\n    <Modal\n      show={show}\n      onHide={handleClose}\n      centered\n      size='md'\n      className='deleteModal'\n      onClick={(e) => {\n        e.stopPropagation();\n      }}\n    >\n      <Modal.Body className='deleteModal-body'>\n        <h4>Delete {`${item}`}</h4>\n        <p>{`Are you sure you want to delete this ${item}?`}</p>\n        <div className='deleteModal-body-button-container'>\n          <Button\n            className='modal-button deleteModal-delete-button default-accent-border'\n            onClick={(e) => {\n              e.stopPropagation();\n              deleteHandler();\n            }}\n          >\n            Delete\n          </Button>\n          <Button\n            className='modal-button deleteModal-cancel-button default-accent-border'\n            onClick={(e) => {\n              e.stopPropagation();\n              handleClose();\n            }}\n          >\n            Cancel\n          </Button>\n        </div>\n      </Modal.Body>\n    </Modal>\n  );\n};\n\nexport default DeleteAppModal;\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Row, Col } from 'react-bootstrap';\nimport '../styles/listSelect.css';\nimport nameValuePairs from '../data/lookUpTables/listNameValuePairs';\nimport { USER_APPS_SUCCESS } from '../constants/appConstants';\nimport axios from 'axios';\n\nconst ListSelect = ({ close, app }) => {\n  const dispatch = useDispatch();\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n  const userApps = useSelector((state) => state.userApps);\n  const { apps } = userApps;\n\n  const handleClick = async (e, i) => {\n    e.stopPropagation();\n\n    if (i !== app.list) {\n      let sourceIndex = app.index;\n      let destinationIndex = 0;\n      let sourceList = app.list;\n      let sourceListName = nameValuePairs[sourceList];\n      let destinationList = i;\n      let destinationListName = nameValuePairs[destinationList];\n      let appId = app.id;\n\n      let config = {\n        headers: {\n          Authorization: `Bearer ${userInfo.token}`,\n          'Content-Type': 'application/json',\n        },\n      };\n\n      let moveData = {\n        sourceIndex,\n        destinationIndex,\n        sourceList: sourceListName,\n        destinationList: destinationListName,\n        appId,\n      };\n\n      let appsCopy = apps;\n      let sourceArr = appsCopy[sourceListName];\n      let destinationArr = appsCopy[destinationListName];\n      let updatedApp = sourceArr.splice(sourceIndex, 1);\n      updatedApp = updatedApp[0];\n      updatedApp.index = 0;\n      updatedApp.list = destinationList;\n      for (let i = sourceIndex; i < sourceArr.length; i++) {\n        sourceArr[i].index -= 1;\n      }\n      for (let i = destinationIndex; i < destinationArr.length; i++) {\n        destinationArr[i].index += 1;\n      }\n      destinationArr.unshift(updatedApp);\n      appsCopy[sourceListName] = sourceArr;\n      appsCopy[destinationListName] = destinationArr;\n      dispatch({ type: USER_APPS_SUCCESS, payload: appsCopy });\n      await axios.put('/api/apps/update/index', moveData, config);\n      close();\n    }\n  };\n\n  return (\n    <Row className='list-select-container'>\n      {nameValuePairs.map(\n        (list, i) =>\n          list && (\n            <Col\n              className={`list-select-item noselect ${\n                app.list === i ? 'current-active-list' : ''\n              } modal-nav-link ${app.color} ${app.color}-card-border`}\n              key={i}\n              xs={12}\n              onClick={(e) => {\n                handleClick(e, i);\n              }}\n            >\n              {list}\n            </Col>\n          )\n      )}\n    </Row>\n  );\n};\n\nexport default ListSelect;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport '../styles/favoriteButton.css';\nimport { favoriteAppById } from '../actions/appActions';\n\nconst FavoriteButton = ({ app, color, demoButton, setApps }) => {\n  const dispatch = useDispatch();\n  let { favorited } = app;\n\n  const handleClick = (e) => {\n    e.stopPropagation();\n    let updatedApp = app;\n    updatedApp.favorited = !favorited;\n    if (demoButton) {\n      setApps([app]);\n    }\n    if (!demoButton) {\n      dispatch(favoriteAppById(updatedApp));\n    }\n  };\n\n  return (\n    <i\n      className={` ${`${\n        favorited ? 'fas' : 'far'\n      } fa-bookmark`} favoriteButton ${color && color}`}\n      onClick={handleClick}\n      title='Favorite'\n    ></i>\n  );\n};\n\nexport default FavoriteButton;\n","import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { UPDATE_APP_RESET } from '../constants/appConstants';\nimport '../styles/modalNav.css';\n\nconst DetailModalNav = ({ app, color }) => {\n  const dispatch = useDispatch();\n  const location = useLocation();\n  const path = location.pathname;\n  const routeName = path.split('/')[1];\n\n  return (\n    <div className='modal-nav-container'>\n      <Link\n        to={`/app_details/${app.id}`}\n        onClick={(e) => {\n          e.stopPropagation();\n        }}\n        className={`modal-nav-link ${\n          routeName === 'app_details' ? 'modal-nav-link-active' : ''\n        } ${color ? color : 'default'} ${\n          color ? color : 'default'\n        }-accent-border`}\n      >\n        Details\n      </Link>\n      <Link\n        to={`/app_notes/${app.id}${app.notes.length === 0 ? '/create' : ''}`}\n        className={`modal-nav-link ${\n          routeName === 'app_notes' ? 'modal-nav-link-active' : ''\n        } ${color ? color : 'default'} ${\n          color ? color : 'default'\n        }-accent-border`}\n        onClick={(e) => {\n          e.stopPropagation();\n          dispatch({ type: UPDATE_APP_RESET });\n        }}\n      >\n        Notes\n      </Link>\n    </div>\n  );\n};\n\nexport default DetailModalNav;\n","export const formatDate = (date) => {\n  let month = `${date.slice(5, 7)}`;\n  let day = `${date.slice(8, 10)}`;\n  let year = date.slice(0, 4);\n  return `${month}/${day}/${year}`;\n};\n\nexport const trimDate = (date) => {\n  return date.slice(0, 10);\n};\n","export const POST_NOTE_REQUEST = 'POST_NOTE_REQUEST';\nexport const POST_NOTE_SUCCESS = 'POST_NOTE_SUCCESS';\nexport const POST_NOTE_FAIL = 'POST_NOTE_FAIL';\nexport const POST_NOTE_RESET = 'POST_NOTE_RESET';\n","import React from 'react';\nimport { Alert } from 'react-bootstrap';\n\nconst messageStyle = {\n  width: '100%',\n};\n\nconst Message = ({ variant, children, style, className }) => {\n  return (\n    <Alert\n      variant={variant}\n      style={{ ...messageStyle, ...style }}\n      className={className}\n    >\n      {children}\n    </Alert>\n  );\n};\n\nexport default Message;\n","import React, { useState, useEffect } from 'react';\nimport { Button, Form } from 'react-bootstrap';\nimport '../styles/note.css';\nimport { trimDate, formatDate } from '../helpers/dateHelpers';\nimport DeleteAppModal from './modals/DeleteAppModal';\nimport { deleteNoteById, updateNoteById } from '../actions/noteActions';\nimport { useDispatch } from 'react-redux';\nimport { useHistory, Route, useLocation } from 'react-router-dom';\nimport Message from './Message';\n\nconst AppNote = ({ note, app }) => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const location = useLocation();\n  let path = location.pathname;\n  let noteId = location.pathname.split('/')[4];\n  const [content, setContent] = useState(note ? note.content : '');\n  const [showDeleteModal, setShowDeleteModal] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [editing, setEditing] = useState(false);\n\n  const closeDeleteModal = () => {\n    setShowDeleteModal(false);\n  };\n\n  const openDeleteModal = () => {\n    setShowDeleteModal(true);\n  };\n\n  const deleteHandler = () => {\n    dispatch(deleteNoteById(app, note.id));\n    closeDeleteModal();\n  };\n\n  const handleUpdateClick = () => {\n    setErrorMessage('');\n    if (content.length !== 0 && content !== note.content) {\n      dispatch(updateNoteById(app, note, content));\n      setEditing(false);\n    } else if (note.content === content) {\n      setErrorMessage('Please change content to something new.');\n    } else {\n      setErrorMessage('Empty notes cannot be saved');\n    }\n  };\n\n  useEffect(() => {\n    setErrorMessage('');\n    return () => {\n      setErrorMessage('');\n    };\n  }, [path]);\n\n  return (\n    note && (\n      <>\n        <div\n          className='note'\n          onClick={(e) => {\n            if (noteId === note.id) {\n              e.stopPropagation();\n            }\n          }}\n        >\n          <div className='note-header'>\n            <div className='note-header-date'>\n              {note.updated_on ? note.updated_on : note.created_on}\n            </div>\n            <div className='note-header-border'></div>\n            <div className='note-header-buttons'>\n              <i\n                className={`${editing ? 'fas fa-times' : 'far fa-edit'}`}\n                title={`${noteId === note.id ? 'Close' : 'Edit'}`}\n                onClick={(e) => {\n                  e.stopPropagation();\n                  if (editing) {\n                    setEditing(false);\n                  } else {\n                    setEditing(true);\n                  }\n                }}\n              />\n              <i\n                className='far fa-trash-alt'\n                title='Delete'\n                onClick={() => {\n                  openDeleteModal();\n                }}\n              ></i>\n            </div>\n          </div>\n          <div className='note-body'>\n            {noteId !== note.id && (\n              <div className='note-body-content'>{note.content}</div>\n            )}\n            {editing && (\n              <Form>\n                <Form.Control\n                  as='textarea'\n                  className='noteupdate-textarea'\n                  value={content}\n                  onChange={(e) => {\n                    setContent(e.target.value);\n                  }}\n                  placeholder='Update note...'\n                ></Form.Control>\n                <div className='noteupdateform-update-button'>\n                  {errorMessage && (\n                    <Message\n                      variant='danger'\n                      style={{\n                        margin: '0px',\n                        padding: '0px',\n                        height: '30px',\n                        display: 'flex',\n                        alignItems: 'center',\n                        paddingTop: '3px',\n                        paddingLeft: '23px',\n                        borderRadius: '5px',\n                        width: '561px',\n                      }}\n                    >\n                      {errorMessage}\n                    </Message>\n                  )}\n                  <Button\n                    className='modal-button detail-modal-updateButton'\n                    style={{ marginRight: '5px' }}\n                    onClick={(e) => {\n                      e.stopPropagation();\n                      handleUpdateClick();\n                    }}\n                  >\n                    Update\n                  </Button>\n                </div>\n              </Form>\n            )}\n          </div>\n        </div>\n        <DeleteAppModal\n          show={showDeleteModal}\n          handleClose={closeDeleteModal}\n          deleteHandler={deleteHandler}\n          item='note'\n        />\n      </>\n    )\n  );\n};\n\nexport default AppNote;\n","import { v4 as uuid } from 'uuid';\nimport {\n  POST_NOTE_REQUEST,\n  POST_NOTE_SUCCESS,\n  POST_NOTE_FAIL,\n} from '../constants/noteConstants';\nimport { USER_APPS_SUCCESS } from '../constants/appConstants';\nimport nameValuePairs from '../data/lookUpTables/listNameValuePairs';\n//DONE\nexport const saveNote = (app, content) => async (dispatch, getState) => {\n  try {\n    dispatch({ type: POST_NOTE_REQUEST });\n    const {\n      userApps: { apps },\n    } = getState();\n    let created_on = new Date();\n    var dd = String(created_on.getDate()).padStart(2, '0');\n    var mm = String(created_on.getMonth() + 1).padStart(2, '0'); //January is 0!\n    var yyyy = created_on.getFullYear();\n    created_on = mm + '/' + dd + '/' + yyyy;\n\n    let note = {\n      content,\n      id: uuid(),\n      created_on,\n    };\n    let appsCopy = apps;\n    let listName = nameValuePairs[app.list];\n    let arr = appsCopy[listName];\n    let index = arr.findIndex((e) => e.id === app.id);\n    arr[index].notes.unshift(note);\n    appsCopy[listName] = arr;\n    localStorage.setItem('apps', JSON.stringify(appsCopy));\n    dispatch({ type: USER_APPS_SUCCESS, payload: appsCopy });\n    dispatch({ type: POST_NOTE_SUCCESS });\n  } catch (error) {\n    dispatch({ type: POST_NOTE_FAIL });\n  }\n};\n\n//DONE\nexport const deleteNoteById = (app, noteId) => async (dispatch, getState) => {\n  const {\n    userApps: { apps },\n  } = getState();\n\n  let appsCopy = apps;\n  let listName = nameValuePairs[app.list];\n  let arr = appsCopy[listName];\n  let index = arr.findIndex((e) => e.id === app.id);\n  arr[index].notes = arr[index].notes.filter((note) => note.id !== noteId);\n  appsCopy[listName] = arr;\n  localStorage.setItem('apps', JSON.stringify(appsCopy));\n  dispatch({ type: USER_APPS_SUCCESS, payload: appsCopy });\n};\n\n//DONE\nexport const updateNoteById =\n  (app, note, content) => async (dispatch, getState) => {\n    const {\n      userApps: { apps },\n    } = getState();\n    let appsCopy = apps;\n    let listName = nameValuePairs[app.list];\n    let arr = appsCopy[listName];\n    let updated_on = new Date();\n    var dd = String(updated_on.getDate()).padStart(2, '0');\n    var mm = String(updated_on.getMonth() + 1).padStart(2, '0'); //January is 0!\n    var yyyy = updated_on.getFullYear();\n    updated_on = mm + '/' + dd + '/' + yyyy;\n\n    let index = arr.findIndex((e) => e.id === app.id);\n    let noteIndex = arr[index].notes.findIndex((e) => e.id === note.id);\n    arr[index].notes[noteIndex] = {\n      ...note,\n      content,\n      updated_on,\n    };\n    appsCopy[listName] = arr;\n    localStorage.setItem('apps', JSON.stringify(appsCopy));\n    dispatch({ type: USER_APPS_SUCCESS, payload: appsCopy });\n  };\n","import React, { useState, useEffect, useRef } from 'react';\nimport { Modal, Row, Button, Form } from 'react-bootstrap';\nimport ListSelect from './ListSelect';\nimport FavoriteButton from './FavoriteButton';\nimport '../styles/notesModal.css';\nimport DetailModalNav from './DetailModalNav';\nimport { useDispatch } from 'react-redux';\nimport AppNote from './AppNote';\nimport { saveNote } from '../actions/noteActions';\nimport { useHistory } from 'react-router-dom';\nimport { Route } from 'react-router-dom';\nimport Message from './Message';\n\nconst NotesModal = ({ app, handleClose }) => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const [errorMessage, setErrorMessage] = useState('Save a new note');\n\n  const [showListSelect, setShowListSelect] = useState(false);\n  const [noteContent, setNoteContent] = useState('');\n\n  const notesModalBodyRef = useRef();\n\n  const url = `/app_notes/${app.id}`;\n\n  useEffect(() => {\n    if (app.notes.length === 0) {\n      history.push(`/app_notes/${app.id}/create`);\n    }\n  }, [app.notes.length, history, app.id, app.notes]);\n\n  const openListSelect = () => {\n    setShowListSelect(true);\n  };\n\n  const closeListSelect = () => {\n    setShowListSelect(false);\n  };\n\n  const handleCloseButtonClick = () => {\n    handleClose();\n  };\n\n  const handleSaveClick = () => {\n    if (noteContent.trim()) {\n      dispatch(saveNote(app, noteContent));\n      setNoteContent('');\n      history.push(`/app_notes/${app.id}`);\n    } else {\n      setErrorMessage('Empty notes cannot be saved');\n    }\n  };\n\n  return (\n    <>\n      <Modal.Header\n        className={`detailModal-header ${app.color ? app.color : 'default'} ${\n          app.color ? app.color : 'default'\n        }-modal-header-border`}\n        onClick={(e) => {\n          e.stopPropagation();\n          closeListSelect();\n          setErrorMessage('');\n          if (app.notes.length) {\n            history.push(url);\n          }\n        }}\n      >\n        <Row className='detailModal-header-nav'>\n          <div className='detailModal-header-nav-buttonContainer'>\n            <div className='detailModal-moveButton-container'>\n              <Button\n                className={`modal-button detail-modal-moveButton ${app.color}-accent-border`}\n                onClick={(e) => {\n                  e.stopPropagation();\n                  openListSelect();\n                }}\n              >\n                Move\n              </Button>\n              {showListSelect && (\n                <ListSelect close={closeListSelect} app={app} />\n              )}\n            </div>\n            <Button\n              className={`modal-button ${app.color}-accent-border detail-modal-closeButton`}\n              onClick={(e) => {\n                e.stopPropagation();\n                handleCloseButtonClick();\n              }}\n            >\n              Close\n            </Button>\n          </div>\n          <div className='detailModal-header-main'>\n            <div className='detailModal-header-main-text'>\n              <p className='detailModal-header-main-text-company'>\n                {app.companyName}\n              </p>\n              <p className='detailModal-header-main-text-job'>{app.jobTitle}</p>\n            </div>\n            <FavoriteButton app={app} color={app.color} />\n          </div>\n          <DetailModalNav app={app} color={app.color} />\n        </Row>\n      </Modal.Header>\n      <Modal.Body\n        className={`notesModal-body detailModal-body ${\n          app.color ? app.color : 'default'\n        }-body ${app.color}-modal-body-border`}\n        ref={notesModalBodyRef}\n        onClick={() => {\n          closeListSelect();\n          setErrorMessage('');\n          if (app.notes.length) {\n            history.push(url);\n          }\n        }}\n      >\n        <div className='notesModal-body-container'>\n          <Route\n            path={`/app_notes/${app.id}/create`}\n            render={(props) => (\n              <>\n                {' '}\n                <div\n                  className='notesModal-body-button-container'\n                  onClick={(e) => {\n                    e.stopPropagation();\n                  }}\n                >\n                  <Message\n                    style={{\n                      margin: '0px',\n                      padding: '0px',\n                      height: '30px',\n                      display: 'flex',\n                      alignItems: 'center',\n                      paddingTop: '3px',\n                      paddingLeft: '23px',\n                      borderRadius: '10px 10px 0 0',\n                      borderBottom: 'unset !important',\n                    }}\n                    className={`${app.color ? app.color : 'default'} ${\n                      app.color ? app.color : 'default'\n                    }-accent-border`}\n                  >\n                    {errorMessage}\n                  </Message>\n                  <div\n                    className='notesModal-body-create-container'\n                    onClick={(e) => {\n                      e.stopPropagation();\n                      handleSaveClick();\n                    }}\n                  >\n                    <div\n                      className={`notesModal-body-create-right ${\n                        app.color ? app.color : 'default'\n                      } ${app.color ? app.color : 'default'}-accent-border`}\n                      title='Save'\n                    >\n                      <i className='fas fa-plus notesModal-body-create-icon'></i>\n                      <span className='notesModal-body-create-text'>Save</span>\n                    </div>\n                  </div>\n                  <div\n                    className='notesModal-body-create-container'\n                    onClick={(e) => {\n                      e.stopPropagation();\n                      if (app.notes) {\n                        if (app.notes.length !== 0) {\n                          history.push(`/app_notes/${app.id}`);\n                        } else {\n                          setErrorMessage('Create your first note to display');\n                        }\n                      }\n                    }}\n                  >\n                    <div\n                      className={`notesModal-body-create-right ${\n                        app.color ? app.color : 'default'\n                      } ${app.color ? app.color : 'default'}-accent-border`}\n                      title='Close'\n                    >\n                      <i className='fas fa-times notesModal-body-close-icon'></i>\n                      <span className='notesModal-body-create-text'>Close</span>\n                    </div>\n                  </div>\n                </div>\n                <Form\n                  onClick={(e) => {\n                    e.stopPropagation();\n                  }}\n                >\n                  <Form.Group>\n                    <Form.Control\n                      as='textarea'\n                      placeholder='Save your notes here'\n                      value={noteContent}\n                      onChange={(e) => {\n                        setNoteContent(e.target.value);\n                      }}\n                    ></Form.Control>\n                  </Form.Group>\n                </Form>\n              </>\n            )}\n          />\n          {app.notes.length > 0 &&\n            app.notes.map((note, i) => (\n              <AppNote note={note} key={i} app={app} />\n            ))}\n        </div>\n      </Modal.Body>\n      <Route\n        path={`/app_notes/${app.id}`}\n        render={(props) => (\n          <div className='notesModal-open-form-button'>\n            <div\n              className={`notesModal-body-create-right square-corner  ${app.color}`}\n              title='Create a note'\n              onClick={(e) => {\n                e.stopPropagation();\n                history.push(`/app_notes/${app.id}/create`);\n                notesModalBodyRef.current.scroll({\n                  top: 0,\n                  behavior: 'smooth',\n                });\n              }}\n            >\n              <i className='fas fa-plus notesModal-body-create-icon'></i>\n              <span className='notesModal-body-create-text'>Note</span>\n            </div>\n          </div>\n        )}\n        exact\n      />\n    </>\n  );\n};\n\nexport default NotesModal;\n","let colors = {\n  white: 'white',\n  red: 'red',\n  salmon: 'salmon',\n  orange: 'orange',\n  gold: 'gold',\n  yellow: 'yellow',\n  lightGreen: 'light-green',\n  green: 'green',\n  darkGreen: 'dark-green',\n  blueGreen: 'blue-green',\n  lightBlue: 'light-blue',\n  blue: 'blue',\n  navy: 'navy',\n  purple: 'purple',\n  black: 'black',\n  gray: 'gray',\n  offPurple: 'off-purple',\n};\n\nexport let colorsArr = [\n  'default',\n  'dark-1',\n  'dark-2',\n  'light-3',\n  'light-2',\n  'light-1',\n  'row-1-1',\n  'row-1-2',\n  'row-1-3',\n  'row-1-4',\n  'row-1-5',\n  'row-1-6',\n  'row-2-1',\n  'row-2-2',\n  'row-2-3',\n  'row-2-4',\n  'row-2-5',\n  'row-2-6',\n  'row-3-1',\n  'row-3-2',\n  'row-3-3',\n  'row-3-4',\n  'row-3-5',\n  'row-3-6',\n  'row-4-1',\n  'row-4-2',\n  'row-4-3',\n  'row-4-4',\n  'row-4-5',\n  'row-4-6',\n  'row-5-1',\n  'row-5-2',\n  'row-5-3',\n  'row-5-4',\n  'row-5-5',\n  'row-5-6',\n  'row-6-1',\n  'row-6-2',\n  'row-6-3',\n  'row-6-4',\n  'row-6-5',\n  'row-6-6',\n];\nexport default colors;\n","import React from 'react';\nimport { Row, Col } from 'react-bootstrap';\nimport '../styles/colorSelect.css';\nimport { colorsArr } from '../styles/colorPallet';\n\nconst ColorSelect = ({\n  color,\n  setColor,\n  show,\n  openColorSelect,\n  closeColorSelect,\n}) => {\n  return (\n    <>\n      <div\n        className='colorSelect'\n        onClick={(e) => {\n          e.stopPropagation();\n          openColorSelect();\n        }}\n      >\n        <div className={`colorSelect-content ${color}`}></div>\n      </div>\n      {show && (\n        <Row\n          className='colorSelect-menu'\n          onClick={(e) => {\n            e.stopPropagation();\n          }}\n        >\n          {colorsArr.map((clr, i) => (\n            <Col\n              xs={1}\n              sm={2}\n              md={4}\n              key={i}\n              className={`colorSelect-menu-option-container`}\n            >\n              <div\n                className={`colorSelect-menu-option-border ${\n                  clr === color && 'colorSelect-menu-option-active'\n                }`}\n                onClick={(e) => {\n                  setColor(clr);\n                  closeColorSelect();\n                }}\n              >\n                <div className={`colorSelect-menu-option  ${clr} `}></div>\n              </div>\n            </Col>\n          ))}\n        </Row>\n      )}{' '}\n    </>\n  );\n};\n\nexport default ColorSelect;\n","import React, { useState, useRef } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Modal, Form, Row, Col, Button } from 'react-bootstrap';\nimport { trimDate } from '../helpers/dateHelpers';\nimport { UPDATE_APP_RESET } from '../constants/appConstants';\nimport { updateAppById } from '../actions/appActions';\nimport ListSelect from './ListSelect';\nimport FavoriteButton from './FavoriteButton';\nimport Message from './Message';\nimport ColorSelect from './ColorSelect';\nimport DetailModalNav from './DetailModalNav';\n\nconst DetailModal = ({ app, handleClose }) => {\n  const dispatch = useDispatch();\n\n  const updateApp = useSelector((state) => state.updateApp);\n  const { success, error } = updateApp;\n\n  const [company, setCompany] = useState(app.companyName);\n  const [jobTitle, setJobTitle] = useState(app.jobTitle);\n  const [url, setUrl] = useState(app.url);\n  const [color, setColor] = useState(app.color);\n  const [salary, setSalary] = useState(app.salary);\n  const [location, setLocation] = useState(app.location);\n  const [description, setDescription] = useState(app.description);\n  const [validationMessages, setValidationMessages] = useState([]);\n  const [showListSelect, setShowListSelect] = useState(false);\n\n  const [deadline, setDeadline] = useState(\n    app.deadline ? trimDate(app.deadline) : ''\n  );\n  const [applicationDate, setApplicationDate] = useState(\n    app.application ? trimDate(app.application) : ''\n  );\n  const [interviewDate, setInterviewDate] = useState(\n    app.interview ? trimDate(app.interview) : ''\n  );\n  const [offerDate, setOfferDate] = useState(\n    app.offer ? trimDate(app.offer) : ''\n  );\n  const [offerAcceptanceDate, setOfferAcceptanceDate] = useState(\n    app.offer_acceptance ? trimDate(app.offer_acceptance) : ''\n  );\n\n  const [showColorSelect, setShowColorSelect] = useState(false);\n\n  const modalRef = useRef();\n\n  const validateForm = () => {\n    let arr = [];\n    if (company.length < 1) {\n      arr.push('Company name is a required field');\n    }\n    if (jobTitle.length < 1) {\n      arr.push('Job title is a required field');\n    }\n    if (arr.length < 1) {\n      return true;\n    } else {\n      setValidationMessages(arr);\n      return false;\n    }\n  };\n\n  const handleUpdateButtonClick = (e) => {\n    dispatch({ type: UPDATE_APP_RESET });\n\n    if (validateForm()) {\n      let updatedApp = app;\n      updatedApp.companyName = company;\n      updatedApp.jobTitle = jobTitle;\n      updatedApp.url = url;\n      updatedApp.color = color;\n      updatedApp.salary = salary;\n      updatedApp.location = location;\n      updatedApp.description = description;\n      updatedApp.deadline = deadline;\n      updatedApp.application = applicationDate;\n      updatedApp.offer = offerDate;\n      updatedApp.offer_acceptance = offerAcceptanceDate;\n      updatedApp.interview = interviewDate;\n\n      dispatch(updateAppById(updatedApp));\n    }\n  };\n\n  const openListSelect = (e) => {\n    e.stopPropagation();\n    setShowListSelect(true);\n  };\n\n  const closeListSelect = () => {\n    setShowListSelect(false);\n  };\n\n  const handleCloseButtonClick = (e) => {\n    handleClose();\n  };\n\n  const changeColorTo = (color) => {\n    setColor(color);\n  };\n\n  const openColorSelect = () => {\n    setShowColorSelect(true);\n  };\n\n  const closeColorSelect = () => {\n    setShowColorSelect(false);\n  };\n\n  return (\n    <>\n      <Modal.Header\n        className={`detailModal-header ${color ? color : 'default'} ${\n          color ? color : 'default'\n        }-modal-header-border`}\n        onClick={(e) => {\n          closeListSelect();\n          closeColorSelect();\n        }}\n        ref={modalRef}\n      >\n        <Row className='detailModal-header-nav'>\n          <div className='detailModal-header-nav-buttonContainer'>\n            <div className='detailModal-moveButton-container'>\n              <Button\n                className={`modal-button detail-modal-moveButton ${color}-accent-border`}\n                onClick={openListSelect}\n              >\n                Move\n              </Button>\n              {showListSelect && (\n                <ListSelect close={closeListSelect} app={app} />\n              )}\n            </div>\n            <Button\n              className={`${color}-accent-border modal-button detail-modal-updateButton`}\n              onClick={handleUpdateButtonClick}\n            >\n              Update\n            </Button>\n            <Button\n              className={`${color}-accent-border modal-button detail-modal-closeButton`}\n              onClick={handleCloseButtonClick}\n            >\n              Close\n            </Button>\n          </div>\n          <div className='detailModal-header-main'>\n            <div className='detailModal-header-main-text'>\n              <p className={`detailModal-header-main-text-company`}>\n                {app.companyName}\n              </p>\n              <p className={`detailModal-header-main-text-job`}>\n                {app.jobTitle}\n              </p>\n            </div>\n            <FavoriteButton app={app} color={color} />\n          </div>\n          <DetailModalNav app={app} color={color} />\n        </Row>\n      </Modal.Header>\n      <Modal.Body\n        className={`detailModal-body ${\n          color ? color : 'default'\n        }-body  ${color}-modal-body-border`}\n        as={Row}\n        onClick={() => {\n          closeListSelect();\n          closeColorSelect();\n        }}\n      >\n        <div className='detailModal-message-container'>\n          {validationMessages.length > 0 && (\n            <Message variant='danger'>\n              <ul className='validation-list'>\n                {validationMessages.map((message, i) => (\n                  <li key={i}>{message}</li>\n                ))}\n              </ul>\n            </Message>\n          )}\n          {success && (\n            <Message variant='success'>\n              Your application has been updated successfully\n            </Message>\n          )}\n          {error && <Message variant='danger'>{error}</Message>}\n        </div>\n\n        <Col\n          xs={12}\n          sm={12}\n          md={8}\n          className='detailModal-body-left'\n          as={Row}\n          autoComplete='off'\n        >\n          <Form.Group as={Col} xs={12} sm={6} md={6} lg={6}>\n            <Form.Label>Company</Form.Label>\n            <Form.Control\n              autoComplete='off'\n              className='capitalize'\n              value={company}\n              placeholder='+ Company Name'\n              onChange={(e) => {\n                setCompany(e.target.value);\n              }}\n            ></Form.Control>\n          </Form.Group>\n          <Form.Group as={Col} xs={12} sm={6} md={6} lg={6}>\n            <Form.Label>Job Title</Form.Label>\n            <Form.Control\n              autoComplete='off'\n              className='capitalize'\n              value={jobTitle}\n              onChange={(e) => {\n                setJobTitle(e.target.value);\n              }}\n              placeholder='+ Job Title'\n            ></Form.Control>\n          </Form.Group>\n          <Form.Group as={Col} xs={12} sm={6} md={8}>\n            <Form.Label>URL</Form.Label>\n            <Form.Control\n              autoComplete='off'\n              value={url}\n              onChange={(e) => {\n                setUrl(e.target.value);\n              }}\n              placeholder='+ Enter URL'\n            ></Form.Control>\n          </Form.Group>\n          <Form.Group as={Col} xs={12} sm={6} md={4}>\n            <Form.Label>Salary</Form.Label>\n            <Form.Control\n              autoComplete='off'\n              value={salary ? salary : ''}\n              onChange={(e) => {\n                setSalary(e.target.value);\n              }}\n              placeholder='+ Salary'\n            ></Form.Control>\n          </Form.Group>\n          <Form.Group as={Col} xs={12} sm={6} md={8}>\n            <Form.Label>Location</Form.Label>\n            <Form.Control\n              autoComplete='off'\n              className='capitalize'\n              value={location}\n              onChange={(e) => {\n                setLocation(e.target.value);\n              }}\n              placeholder='+ Location'\n            ></Form.Control>\n          </Form.Group>\n          <Form.Group as={Col} xs={12} sm={6} md={4}>\n            <Form.Label>Color</Form.Label>\n            <ColorSelect\n              color={color}\n              setColor={changeColorTo}\n              show={showColorSelect}\n              openColorSelect={openColorSelect}\n              closeColorSelect={closeColorSelect}\n            />\n          </Form.Group>\n          <Form.Group as={Col} xs={12}>\n            <Form.Label>Description</Form.Label>\n            <Form.Control\n              autoComplete='off'\n              as='textarea'\n              value={description}\n              onChange={(e) => {\n                setDescription(e.target.value);\n              }}\n              placeholder='+ Description...'\n            ></Form.Control>\n          </Form.Group>\n        </Col>\n        <Col xs={12} sm={12} md={4} className='detailModal-body-right'>\n          <Row className='detailModal-body-right-content'>\n            <Form.Group as={Col}>\n              <Form.Label className='detailModal-date-container'>\n                <span className='detailModal-date-title'>\n                  Application Deadline\n                </span>\n                <span\n                  className={`clear-border detailModal-date-clear ${color}-clear-border`}\n                  onClick={(e) => {\n                    setDeadline('');\n                  }}\n                >\n                  Clear\n                </span>\n              </Form.Label>\n              <Form.Control\n                type='date'\n                value={deadline}\n                onChange={(e) => {\n                  setDeadline(e.target.value);\n                }}\n              ></Form.Control>\n            </Form.Group>\n            <Form.Group as={Col}>\n              <Form.Label className='detailModal-date-container'>\n                <span className='detailModal-date-title'>Applied on</span>\n                <span\n                  className={`clear-border detailModal-date-clear ${color}-clear-border`}\n                  onClick={(e) => {\n                    setApplicationDate('');\n                  }}\n                >\n                  Clear\n                </span>\n              </Form.Label>\n              <Form.Control\n                type='date'\n                value={applicationDate}\n                onChange={(e) => {\n                  setApplicationDate(e.target.value);\n                }}\n              ></Form.Control>\n            </Form.Group>\n            <Form.Group as={Col}>\n              <Form.Label className='detailModal-date-container'>\n                <span className='detailModal-date-title'>Interview Date</span>\n                <span\n                  className={`clear-border detailModal-date-clear ${color}-clear-border`}\n                  onClick={(e) => {\n                    setInterviewDate('');\n                  }}\n                >\n                  Clear\n                </span>\n              </Form.Label>\n              <Form.Control\n                type='date'\n                value={interviewDate}\n                onChange={(e) => {\n                  setInterviewDate(e.target.value);\n                }}\n              ></Form.Control>\n            </Form.Group>\n            <Form.Group as={Col}>\n              <Form.Label className='detailModal-date-container'>\n                <span className='detailModal-date-title'>Offer Recieved</span>\n                <span\n                  className={`clear-border detailModal-date-clear ${color}-clear-border`}\n                  onClick={(e) => {\n                    setOfferDate('');\n                  }}\n                >\n                  Clear\n                </span>\n              </Form.Label>\n              <Form.Control\n                autoComplete='off'\n                type='date'\n                value={offerDate}\n                onChange={(e) => {\n                  setOfferDate(e.target.value);\n                }}\n              ></Form.Control>\n            </Form.Group>\n            <Form.Group as={Col}>\n              <Form.Label className='detailModal-date-container'>\n                <span className='detailModal-date-title'>Accept Offer by</span>\n                <span\n                  className={`clear-border detailModal-date-clear ${color}-clear-border`}\n                  onClick={(e) => {\n                    setOfferAcceptanceDate('');\n                  }}\n                >\n                  Clear\n                </span>\n              </Form.Label>\n              <Form.Control\n                type='date'\n                value={offerAcceptanceDate}\n                onChange={(e) => {\n                  setOfferAcceptanceDate(e.target.value);\n                }}\n              ></Form.Control>\n            </Form.Group>\n          </Row>\n        </Col>\n        <Button\n          className='detail-modal-updateButton detailModal-updateButton-xs'\n          onClick={() => {\n            handleUpdateButtonClick();\n            modalRef.current.scrollIntoView({\n              behavior: 'smooth',\n              block: 'start',\n            });\n          }}\n        >\n          Update\n        </Button>\n      </Modal.Body>\n    </>\n  );\n};\n\nexport default DetailModal;\n","import { Modal } from 'react-bootstrap';\nimport { Route } from 'react-router-dom';\n\nimport NotesModal from '../NotesModal';\nimport DetailModal from '../DetailModal';\nimport '../../styles/appDetailsModal.css';\n\nconst AppDetailsModal = ({ app, show, handleClose }) => {\n  return (\n    <Modal\n      show={show}\n      onHide={handleClose}\n      centered\n      size='xl'\n      className='detailModal'\n    >\n      <Route\n        path={`/app_details/${app.id}`}\n        render={(props) => (\n          <DetailModal {...props} app={app} handleClose={handleClose} />\n        )}\n      />\n      <Route\n        path={`/app_notes/${app.id}`}\n        render={(props) => (\n          <NotesModal {...props} app={app} handleClose={handleClose} />\n        )}\n      />\n    </Modal>\n  );\n};\n\nexport default AppDetailsModal;\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Draggable } from 'react-beautiful-dnd';\nimport { deleteAppById } from '../actions/appActions';\nimport { UPDATE_APP_RESET } from '../constants/appConstants';\nimport { useHistory } from 'react-router-dom';\n\n//import FooterEvent from './FooterEvent';\nimport DeleteAppModal from './modals/DeleteAppModal';\nimport AppDetailsModal from './modals/AppDetailsModal';\nimport FavoriteButton from './FavoriteButton';\n\nimport '../styles/appCard.css';\nimport '../styles/colorPalette.css';\n\nconst AppCard = ({ app, favslist, index }) => {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const { companyName, jobTitle, id, color } = app;\n\n  const [showDeleteModal, setShowDeleteModal] = useState(false);\n  const [showDetailsModal, setShowDetailsModal] = useState(false);\n  const [detailsModalDisabled, setDetailsModalDisabled] = useState(false);\n\n  const deleteHandler = (e) => {\n    dispatch(deleteAppById(app));\n    closeDeleteModal();\n  };\n\n  const openDeleteModal = () => {\n    setShowDeleteModal(true);\n  };\n\n  const closeDeleteModal = () => {\n    setShowDeleteModal(false);\n  };\n\n  const openDetailsModal = () => {\n    if (!detailsModalDisabled) {\n      history.push(`/app_details/${app.id}`);\n      setShowDetailsModal(true);\n    }\n  };\n\n  const closeDetailsModal = () => {\n    history.push('/');\n    setShowDetailsModal(false);\n    dispatch({ type: UPDATE_APP_RESET });\n  };\n\n  const disableDetailsModal = () => {\n    setDetailsModalDisabled(true);\n  };\n\n  const enableDetailsModal = () => {\n    setDetailsModalDisabled(false);\n  };\n\n  return (\n    <>\n      <Draggable draggableId={id} index={index}>\n        {(provided) => (\n          <div\n            className={`app-card ${\n              color ? color : 'white'\n            } ${color}-card-border`}\n            ref={provided.innerRef}\n            {...provided.draggableProps}\n            {...provided.dragHandleProps}\n            onClick={openDetailsModal}\n          >\n            <div className='app-card-body'>\n              <div className='app-card-body-left'>\n                <span className='app-card-body-job'>{jobTitle}</span>\n                <span className='app-card-body-company'>{companyName}</span>\n              </div>\n              <div\n                className='app-card-body-right'\n                onMouseOver={disableDetailsModal}\n                onMouseLeave={enableDetailsModal}\n              >\n                <FavoriteButton app={app} color={app.color} />\n                <i\n                  className='far fa-trash-alt'\n                  onClick={openDeleteModal}\n                  title='Delete'\n                ></i>\n              </div>\n            </div>\n            {/*\n              <div className='app-card-footer'>\n              <div className='app-card-footer-content'>\n                <FooterEvent app={app} />\n              </div>\n            </div>\n            */}\n          </div>\n        )}\n      </Draggable>\n      <DeleteAppModal\n        show={showDeleteModal}\n        handleClose={closeDeleteModal}\n        deleteHandler={deleteHandler}\n        item={'job'}\n      />\n      <AppDetailsModal\n        app={app}\n        show={showDetailsModal}\n        handleClose={closeDetailsModal}\n      />\n    </>\n  );\n};\n\nexport default AppCard;\n","import React from 'react';\nimport axios from 'axios';\nimport { DragDropContext } from 'react-beautiful-dnd';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { USER_APPS_SUCCESS } from '../constants/appConstants';\n\nconst FavoritedDragDropContext = ({ children }) => {\n  const dispatch = useDispatch();\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n  const userApps = useSelector((state) => state.userApps);\n  const { apps } = userApps;\n\n  const onDragEnd = async (result) => {\n    const { destination, source, draggableId } = result;\n    if (!destination) {\n      return;\n    }\n    if (\n      destination.droppableId === source.droppableId &&\n      destination.index === source.index\n    ) {\n      return;\n    }\n\n    let moveData = {\n      sourceIndex: source.index,\n      destinationIndex: destination.index,\n      appId: draggableId,\n    };\n\n    let config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n        'Content-Type': 'application/json',\n      },\n    };\n\n    let appsCopy = apps;\n\n    if (source.index < destination.index) {\n      for (let key in appsCopy) {\n        appsCopy[key].forEach((e) => {\n          if (e.fav_index > source.index && e.fav_index <= destination.index) {\n            e.fav_index -= 1;\n            return;\n          }\n          if (e.fav_index === source.index) {\n            e.fav_index = destination.index;\n          }\n        });\n      }\n    } else {\n      for (let key in appsCopy) {\n        appsCopy[key].forEach((e) => {\n          if (e.fav_index < source.index && e.fav_index >= destination.index) {\n            e.fav_index += 1;\n            return;\n          }\n          if (e.fav_index === source.index) {\n            e.fav_index = destination.index;\n          }\n        });\n      }\n    }\n\n    await axios.put('/api/apps/update/fav_index', moveData, config);\n    dispatch({ type: USER_APPS_SUCCESS, payload: appsCopy });\n  };\n\n  return <DragDropContext onDragEnd={onDragEnd}>{children}</DragDropContext>;\n};\n\nexport default FavoritedDragDropContext;\n","import React from 'react';\nimport { Modal } from 'react-bootstrap';\nimport { useSelector } from 'react-redux';\nimport { Droppable } from 'react-beautiful-dnd';\nimport AppCard from '../AppCard';\nimport FavoritedDragDropContext from '../FavoritedDragDropContext.jsx';\nimport '../../styles/favoritedAppsModal.css';\n\nconst FavoritedAppsModal = ({ show, onHide }) => {\n  const userApps = useSelector((state) => state.userApps);\n  const { apps } = userApps;\n  let favoritedApps = [];\n  for (let list in apps) {\n    favoritedApps = [...favoritedApps, ...apps[list]];\n  }\n\n  return (\n    <FavoritedDragDropContext>\n      <Modal\n        show={show}\n        onHide={onHide}\n        centered\n        size='xl'\n        className='favoritesModal'\n        onClick={() => {}}\n      >\n        <Modal.Body className='favoritesModal-body'>\n          <div className='list-container'>\n            <div className='list-header'>\n              <span className='list-header-icon'>\n                <i className='far fa-bookmark' />\n              </span>\n              <div className='list-header-main'>\n                <div className='list-header-main-title'>Favorited</div>\n                <div className='list-header-main-count'>\n                  {favoritedApps.filter((app) => app.favorited === true)\n                    .length === 0\n                    ? 0\n                    : favoritedApps.filter((app) => app.favorited === true)\n                        .length}{' '}\n                  {`job${\n                    favoritedApps.filter((app) => app.favorited === true)\n                      .length === 1\n                      ? ''\n                      : 's'\n                  }`}\n                </div>\n              </div>\n            </div>\n\n            <Droppable droppableId='favorited'>\n              {(provided) => (\n                <div\n                  className='list-body-main'\n                  ref={provided.innerRef}\n                  {...provided.droppableProps}\n                >\n                  {favoritedApps &&\n                    favoritedApps\n                      .filter((app) => app.favorited === true)\n                      .sort((a, b) => a.fav_index - b.fav_index)\n                      .map((app) => (\n                        <AppCard\n                          app={app}\n                          key={app.id}\n                          favslist\n                          index={app.fav_index}\n                        />\n                      ))}\n                  {provided.placeholder}\n                </div>\n              )}\n            </Droppable>\n          </div>\n        </Modal.Body>\n      </Modal>\n    </FavoritedDragDropContext>\n  );\n};\n\nexport default FavoritedAppsModal;\n","import React, { useState } from 'react';\nimport '../styles/openFavorites.css';\nimport FavoritedAppsModal from './modals/FavoritedAppsModal';\n\nconst OpenFavorites = () => {\n  const [showFavorites, setShowFavorites] = useState(false);\n\n  const handleClose = () => {\n    setShowFavorites(false);\n  };\n\n  return (\n    <>\n      <div\n        className='openFavorites header-icon'\n        title='Show Bookmarked'\n        onClick={(e) => {\n          e.stopPropagation();\n          setShowFavorites(true);\n        }}\n      >\n        <i className='fas fa-bookmark openFavorites-icon fa-lg' />\n      </div>\n      <FavoritedAppsModal show={showFavorites} onHide={handleClose} />\n    </>\n  );\n};\n\nexport default OpenFavorites;\n","import React from 'react';\nimport '../styles/logo.css';\n\nconst Logo = () => {\n  return (\n    <div className='logo-container'>\n      <div className='logo-block orange'></div>\n      <div className='logo-block off-white'></div>\n      <div className='logo-block purple'></div>\n    </div>\n  );\n};\n\nexport default Logo;\n","import React from 'react';\nimport { Container } from 'react-bootstrap';\nimport OpenFavorites from './OpenFavorites';\nimport '../styles/header.css';\nimport Logo from './Logo';\n\nconst Header = () => {\n  return (\n    <Container fluid className='header-background'>\n      <Container className='header-container' fluid>\n        <div className='header-left'>\n          <Logo />\n          <span className='header-logo-text'>JobTrackr</span>\n        </div>\n        <div className='header-center'></div>\n        <div className='header-right'>\n          <OpenFavorites />\n        </div>\n      </Container>\n    </Container>\n  );\n};\n\nexport default Header;\n","import React, { useState, useEffect, useCallback } from 'react';\nimport { Modal, Button, Form, Col, Row } from 'react-bootstrap';\nimport { useSelector, useDispatch } from 'react-redux';\nimport '../../styles/newAppModal.css';\nimport { addAppToList } from '../../actions/appActions';\nimport ColorSelect from '../ColorSelect';\nimport Message from '../Message';\nimport { POST_APP_RESET } from '../../constants/appConstants';\n\nconst listValues = [\n  'Wishlist',\n  'Applied',\n  'Phone',\n  'On Site',\n  'Offer',\n  'Rejected',\n];\n\nconst NewAppModal = ({ show, handleClose, listValue }) => {\n  const dispatch = useDispatch();\n  const postApp = useSelector((state) => state.postApp);\n  const { success, error } = postApp;\n\n  let today = new Date(Date());\n  let dd = String(today.getDate()).padStart(2, '0');\n  let mm = String(today.getMonth() + 1).padStart(2, '0');\n  let yyyy = today.getFullYear();\n\n  const [companyName, setCompanyName] = useState('');\n  const [jobTitle, setJobTitle] = useState('');\n  const [list, setList] = useState(listValue);\n  const [date, setDate] = useState(`${yyyy}-${mm}-${dd}`);\n  const [url, setUrl] = useState('');\n  const [salary, setSalary] = useState('');\n  const [location, setLocation] = useState('');\n  const [color, setColor] = useState('default');\n  const [description, setDescription] = useState('');\n  const [validationMessages, setValidationMessages] = useState([]);\n\n  const [showColorSelect, setShowColorSelect] = useState(false);\n\n  const resetForm = useCallback(() => {\n    setCompanyName('');\n    setJobTitle('');\n    setList(listValue);\n    setDate(`${yyyy}-${mm}-${dd}`);\n    setUrl('');\n    setSalary('');\n    setColor('default');\n    setDescription('');\n    dispatch({ type: POST_APP_RESET });\n    setValidationMessages([]);\n  }, [dd, dispatch, listValue, mm, yyyy]);\n\n  useEffect(() => {\n    if (success) {\n      handleClose();\n      setTimeout(resetForm, 1000);\n    }\n  }, [success, handleClose, resetForm]);\n\n  const validateForm = () => {\n    let arr = [];\n    if (companyName.length < 1) {\n      arr.push('Company name is a required field');\n    }\n    if (jobTitle.length < 1) {\n      arr.push('Job title is a required field');\n    }\n    if (arr.length < 1) {\n      setValidationMessages([]);\n      return true;\n    } else {\n      setValidationMessages(arr);\n      return false;\n    }\n  };\n\n  const submitHandler = async (e) => {\n    e.preventDefault();\n    setValidationMessages([]);\n    if (validateForm()) {\n      let application = {\n        companyName,\n        jobTitle,\n        list,\n        date,\n        url,\n        salary,\n        location,\n        color,\n        description,\n        notes: [],\n      };\n      dispatch(addAppToList(application));\n    }\n  };\n\n  const changeColorTo = (color) => {\n    setColor(color);\n  };\n\n  const openColorSelect = () => {\n    setShowColorSelect(true);\n  };\n\n  const closeColorSelect = () => {\n    setShowColorSelect(false);\n  };\n\n  const onHide = () => {\n    handleClose();\n    resetForm();\n    closeColorSelect();\n  };\n\n  return (\n    <Modal\n      show={show}\n      onHide={onHide}\n      centered\n      size='md'\n      className='newAppModal'\n      contentClassName='newAppCustomModal'\n      onClick={() => {\n        if (showColorSelect) {\n          closeColorSelect();\n        }\n      }}\n    >\n      <Modal.Header>\n        <Modal.Title>Track a new application</Modal.Title>\n        <div className='newAppModal-button-container'>\n          <Button\n            onClick={submitHandler}\n            variant='success'\n            className='modal-button'\n          >\n            Save\n          </Button>\n          <Button variant='dark' onClick={handleClose} className='modal-button'>\n            Close\n          </Button>\n        </div>\n      </Modal.Header>\n      <Modal.Body>\n        {validationMessages.length > 0 && (\n          <Message variant='danger'>\n            <ul className='validation-list'>\n              {validationMessages.map((message, i) => (\n                <li key={i}>{message}</li>\n              ))}\n            </ul>\n          </Message>\n        )}\n        {success && (\n          <Message variant='success'>\n            Your application has been saved successfully\n          </Message>\n        )}\n        {error && <Message variant='danger'>{error}</Message>}\n        <Form as={Row} autoComplete='off'>\n          <Form.Group as={Col} controlId='companyName' xs={12} sm={6}>\n            <Form.Label>Company Name *</Form.Label>\n            <Form.Control\n              autoComplete='off'\n              placeholder='Company Name'\n              value={companyName}\n              onChange={(e) => {\n                setCompanyName(e.target.value);\n              }}\n            ></Form.Control>\n          </Form.Group>\n          <Form.Group controlId='jobTitle' as={Col} xs={12} sm={6}>\n            <Form.Label>Job Title *</Form.Label>\n            <Form.Control\n              autoComplete='off'\n              placeholder='Enter Job Title'\n              value={jobTitle}\n              onChange={(e) => {\n                setJobTitle(e.target.value);\n              }}\n            ></Form.Control>\n          </Form.Group>\n\n          <Form.Group controlId='list' as={Col} xs={12} sm={6}>\n            <Form.Label>List</Form.Label>\n            <Form.Control\n              as='select'\n              value={list}\n              onChange={(e) => {\n                setList(e.target.value);\n              }}\n            >\n              {listValues.map((item, i) => (\n                <option value={i + 1} key={i + 1}>\n                  {listValues[i]}\n                </option>\n              ))}\n            </Form.Control>\n          </Form.Group>\n\n          <Form.Group controlId='dateApplied' as={Col} xs={12} sm={6}>\n            <Form.Label>Date Applied</Form.Label>\n            <Form.Control\n              type='date'\n              value={date}\n              onChange={(e) => {\n                setDate(e.target.value);\n              }}\n            ></Form.Control>\n          </Form.Group>\n\n          <Form.Group controlId='url' as={Col} xs={12} sm={6}>\n            <Form.Label>URL</Form.Label>\n            <Form.Control\n              autoComplete='off'\n              placeholder='+  Add URL'\n              value={url}\n              onChange={(e) => {\n                setUrl(e.target.value);\n              }}\n            ></Form.Control>\n          </Form.Group>\n\n          <Form.Group controlId='salary' as={Col} xs={12} sm={6}>\n            <Form.Label>Salary</Form.Label>\n            <Form.Control\n              autoComplete='off'\n              placeholder='Salary'\n              value={salary}\n              onChange={(e) => {\n                setSalary(e.target.value);\n              }}\n            ></Form.Control>\n          </Form.Group>\n\n          <Form.Group controlId='location' as={Col} xs={12} sm={6}>\n            <Form.Label>Location</Form.Label>\n            <Form.Control\n              autoComplete='off'\n              placeholder='Location'\n              value={location}\n              onChange={(e) => {\n                setLocation(e.target.value);\n              }}\n            ></Form.Control>\n          </Form.Group>\n\n          <Form.Group controlId='color' as={Col} xs={12} sm={6}>\n            <Form.Label>Color</Form.Label>\n            <ColorSelect\n              color={color}\n              setColor={changeColorTo}\n              show={showColorSelect}\n              openColorSelect={openColorSelect}\n              closeColorSelect={closeColorSelect}\n            />\n          </Form.Group>\n\n          <Form.Group controlId='description' as={Col} xs={12}>\n            <Form.Label>Description</Form.Label>\n            <Form.Control\n              autoComplete='off'\n              placeholder='Job Description'\n              value={description}\n              as='textarea'\n              onChange={(e) => {\n                setDescription(e.target.value);\n              }}\n            ></Form.Control>\n          </Form.Group>\n        </Form>\n      </Modal.Body>\n    </Modal>\n  );\n};\n\nexport default NewAppModal;\n","import React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport '../styles/appList.css';\nimport AppCard from './AppCard';\nimport { Droppable } from 'react-beautiful-dnd';\nimport NewAppModal from './modals/NewAppModal';\nimport { Col } from 'react-bootstrap';\n\nconst content = {\n  wishlist: 'For later',\n  applied: 'Applied',\n  phone: 'Phone Interview',\n  'on site': 'On Site Interview',\n  offer: 'Offer Recieved',\n  rejected: 'Rejected',\n};\n\nconst AppList = ({ name, icon, listIntFromDB }) => {\n  const [showModal, setShowModal] = useState(false);\n\n  const userApps = useSelector((state) => state.userApps);\n  const { apps } = userApps;\n\n  const handleClose = () => {\n    setShowModal(false);\n  };\n\n  const showAppModal = () => {\n    setShowModal(true);\n  };\n\n  return (\n    <>\n      <Col className='list-container' xs={6} sm={4} md={4} lg={4} xl={2}>\n        <div className='list-header'>\n          <div className='list-header-main'>\n            <div className='list-header-main-title'>\n              <span>\n                <i className={icon}></i>\n              </span>\n              {content[name]}\n            </div>\n            <div className='list-header-main-count'>\n              {apps && apps[name] && apps[name].length ? apps[name].length : 0}{' '}\n              job\n              {`${apps[name].length === 1 ? '' : 's'}`}\n            </div>\n          </div>\n        </div>\n        <div className='list-add' onClick={showAppModal}>\n          <i className='fas fa-plus' />\n        </div>\n        <Droppable droppableId={name}>\n          {(provided) => (\n            <div\n              className='list-body-main'\n              ref={provided.innerRef}\n              {...provided.droppableProps}\n            >\n              {apps &&\n                apps[name] &&\n                apps[name].map((app, index) => (\n                  <AppCard app={app} key={app.id} index={index} />\n                ))}\n              {provided.placeholder}\n            </div>\n          )}\n        </Droppable>\n      </Col>\n      <NewAppModal\n        show={showModal}\n        handleClose={handleClose}\n        listValue={listIntFromDB}\n      />\n    </>\n  );\n};\n\nexport default AppList;\n","import React from 'react';\nimport axios from 'axios';\nimport { DragDropContext } from 'react-beautiful-dnd';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { USER_APPS_SUCCESS } from '../constants/appConstants';\nimport nameValuePairs from '../data/lookUpTables/listNameValuePairs';\n\nconst DragDropContextComponent = ({ children }) => {\n  const dispatch = useDispatch();\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n  const userApps = useSelector((state) => state.userApps);\n  const { apps } = userApps;\n\n  const onDragEnd = async (result) => {\n    const { destination, source, draggableId } = result;\n    if (!destination) return;\n\n    if (\n      destination.droppableId === source.droppableId &&\n      destination.index === source.index\n    )\n      return;\n\n    let appsCopy = apps;\n\n    let config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n        'Content-Type': 'application/json',\n      },\n    };\n\n    let moveData = {\n      sourceIndex: source.index,\n      destinationIndex: destination.index,\n      sourceList: source.droppableId,\n      destinationList: destination.droppableId,\n      appId: draggableId,\n    };\n\n    if (destination.droppableId === source.droppableId) {\n      let listName = destination.droppableId;\n      let arr = appsCopy[listName];\n      let app = arr.splice(source.index, 1);\n      app = app[0];\n\n      if (source.index < destination.index) {\n        for (let i = source.index; i < destination.index; i++) {\n          arr[i].index = arr[i].index - 1;\n        }\n      } else {\n        for (let i = destination.index; i < source.index; i++) {\n          arr[i].index = arr[i].index + 1;\n        }\n      }\n      app.index = destination.index;\n      arr.splice(destination.index, 0, app);\n      appsCopy[listName] = arr;\n\n      await axios.put('/api/apps/update/index', moveData, config);\n\n      dispatch({ type: USER_APPS_SUCCESS, payload: appsCopy });\n      return;\n    }\n\n    if (destination.droppableId !== source.droppableId) {\n      let sourceArr = appsCopy[source.droppableId];\n\n      let destinationArr = appsCopy[destination.droppableId];\n      let app = sourceArr.splice(source.index, 1);\n      app = app[0];\n      app.index = destination.index;\n      app.list = nameValuePairs.indexOf(destination.droppableId);\n      for (let i = source.index; i < sourceArr.length; i++) {\n        sourceArr[i].index -= 1;\n      }\n      for (let i = destination.index; i < destinationArr.length; i++) {\n        destinationArr[i].index += 1;\n      }\n      destinationArr.splice(destination.index, 0, app);\n      appsCopy[source.droppableId] = sourceArr;\n      appsCopy[destination.droppableId] = destinationArr;\n\n      dispatch({ type: USER_APPS_SUCCESS, payload: appsCopy });\n      await axios.put('/api/apps/update/index', moveData, config);\n    }\n  };\n\n  return <DragDropContext onDragEnd={onDragEnd}>{children}</DragDropContext>;\n};\n\nexport default DragDropContextComponent;\n","import React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport AppList from '../components/AppList';\nimport DragDropContextComponent from '../components/DragDropContextComponent';\n\nconst HomeScreen = ({ history }) => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {}, [dispatch]);\n\n  return (\n    <>\n      <DragDropContextComponent>\n        <AppList name='wishlist' icon='fas fa-calendar-alt' listIntFromDB={1} />\n        <AppList name='applied' icon='far fa-paper-plane' listIntFromDB={2} />\n        <AppList\n          name='phone'\n          icon='fas fa-phone-square-alt'\n          listIntFromDB={3}\n        />\n        <AppList\n          name='on site'\n          icon='fas fa-map-marker-alt'\n          listIntFromDB={4}\n        />\n        <AppList name='offer' icon='fas fa-award' listIntFromDB={5} />\n        <AppList name='rejected' icon='far fa-thumbs-down' listIntFromDB={6} />\n      </DragDropContextComponent>\n    </>\n  );\n};\n\nexport default HomeScreen;\n","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST';\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS';\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL';\nexport const USER_LOGOUT = 'USER_LOGOUT';\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST';\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS';\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL';\nexport const USER_REGISTER_RESET = 'USER_REGISTER_RESET';\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nimport { userLoginReducer, userRegisterReducer } from '../reducers/userReducer';\nimport {\n  userAppsReducer,\n  postAppReducer,\n  updateAppReducer,\n} from '../reducers/appReducer';\nimport { notePostReducer } from '../reducers/noteReducer';\nconst reducer = combineReducers({\n  userApps: userAppsReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  postApp: postAppReducer,\n  updateApp: updateAppReducer,\n  notePost: notePostReducer,\n});\n\nconst userInfoFromStorage = sessionStorage.getItem('userInfo')\n  ? JSON.parse(sessionStorage.getItem('userInfo'))\n  : null;\n\nconst userAppsFromStorage = localStorage.getItem('apps')\n  ? JSON.parse(localStorage.getItem('apps'))\n  : {\n      wishlist: [],\n      applied: [],\n      phone: [],\n      'on site': [],\n      offer: [],\n      rejected: [],\n    };\n\nconst initialState = {\n  userLogin: { userInfo: userInfoFromStorage },\n  userApps: { apps: userAppsFromStorage },\n};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  reducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n","import {\n  USER_APPS_REQUEST,\n  USER_APPS_SUCCESS,\n  USER_APPS_FAIL,\n  USER_APPS_RESET,\n  POST_APP_REQUEST,\n  POST_APP_SUCCESS,\n  POST_APP_FAIL,\n  POST_APP_RESET,\n  UPDATE_APP_REQUEST,\n  UPDATE_APP_SUCCESS,\n  UPDATE_APP_FAIL,\n  UPDATE_APP_RESET,\n} from '../constants/appConstants';\n\nexport const userAppsReducer = (\n  state = {\n    apps: {\n      wishlist: [],\n      applied: [],\n      phone: [],\n      'on site': [],\n      offer: [],\n      rejected: [],\n    },\n  },\n  action\n) => {\n  switch (action.type) {\n    case USER_APPS_REQUEST:\n      return { ...state, loading: true };\n    case USER_APPS_SUCCESS:\n      return { loading: false, apps: action.payload, success: true };\n    case USER_APPS_FAIL:\n      return { ...state, loading: false, error: action.payload };\n    case USER_APPS_RESET:\n      return {\n        apps: {\n          wishlist: [],\n          applied: [],\n          phone: [],\n          'on site': [],\n          offer: [],\n          rejected: [],\n        },\n      };\n    default:\n      return { ...state };\n  }\n};\n\nexport const postAppReducer = (state = {}, action) => {\n  switch (action.type) {\n    case POST_APP_REQUEST:\n      return { loading: true };\n    case POST_APP_SUCCESS:\n      return { loading: false, success: true };\n    case POST_APP_FAIL:\n      return { loading: false, error: action.payload };\n    case POST_APP_RESET:\n      return {};\n    default:\n      return { ...state };\n  }\n};\n\nexport const updateAppReducer = (state = {}, action) => {\n  switch (action.type) {\n    case UPDATE_APP_REQUEST:\n      return { loading: true };\n    case UPDATE_APP_SUCCESS:\n      return { loading: false, success: true };\n    case UPDATE_APP_FAIL:\n      return { loading: false, error: action.payload };\n    case UPDATE_APP_RESET:\n      return {};\n    default:\n      return state;\n  }\n};\n","import {\n  USER_LOGIN_REQUEST,\n  USER_LOGIN_SUCCESS,\n  USER_LOGIN_FAIL,\n  USER_LOGOUT,\n  USER_REGISTER_REQUEST,\n  USER_REGISTER_SUCCESS,\n  USER_REGISTER_FAIL,\n  USER_REGISTER_RESET,\n} from '../constants/userConstants.js';\n\nexport const userLoginReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_LOGIN_REQUEST:\n      return { loading: true };\n    case USER_LOGIN_SUCCESS:\n      return { loading: false, userInfo: action.payload };\n    case USER_LOGIN_FAIL:\n      return { loading: false, error: action.payload };\n    case USER_LOGOUT:\n      return {};\n    default:\n      return state;\n  }\n};\n\nexport const userRegisterReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_REGISTER_REQUEST:\n      return { loading: true };\n    //after register returns success dispatch userLoginReducer with returned successfully created user object or throw error\n    case USER_REGISTER_SUCCESS:\n      return { loading: false, success: true };\n    case USER_REGISTER_FAIL:\n      return { loading: false, error: action.payload };\n    case USER_REGISTER_RESET:\n      return {};\n    default:\n      return state;\n  }\n};\n","import {\n  POST_NOTE_REQUEST,\n  POST_NOTE_SUCCESS,\n  POST_NOTE_FAIL,\n  POST_NOTE_RESET,\n} from '../constants/noteConstants';\n\nexport const notePostReducer = (state, action) => {\n  switch (action.type) {\n    case POST_NOTE_REQUEST:\n      return { loading: true };\n    case POST_NOTE_SUCCESS:\n      return { loading: false, success: true };\n    case POST_NOTE_FAIL:\n      return { loading: false, error: action.payload };\n    case POST_NOTE_RESET:\n      return {};\n    default:\n      return { ...state };\n  }\n};\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Header from './components/Header';\nimport HomeScreen from './screens/HomeScreen';\nimport store from './stores/store.js';\nimport './styles/app.css';\nimport { Row } from 'react-bootstrap';\n\nconst App = () => {\n  return (\n    <Provider store={store}>\n      <Router>\n        <Header />\n        <main className='app-main'>\n          <Row className='app-main-container'>\n            <Switch>\n              <Route component={HomeScreen} path='/' />\n            </Switch>\n          </Row>\n        </main>\n      </Router>\n    </Provider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.jsx';\nimport './bootstrap.min.css';\nimport './styles/index.css';\nimport './styles/customBootstrap.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}
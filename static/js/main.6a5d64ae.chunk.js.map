{"version":3,"sources":["constants/appConstants.js","data/lookUpTables/listNameValuePairs.js","helpers/NoApps.js","actions/appActions.js","components/modals/DeleteAppModal.jsx","components/ListSelect.jsx","components/FavoriteButton.jsx","constants/noteConstants.js","actions/noteActions.js","components/DetailModalNav.jsx","components/Message.jsx","components/AppNote.jsx","components/NotesModal.jsx","helpers/dateHelpers.js","styles/colorPallet.js","components/ColorSelect.jsx","components/DetailModal.jsx","components/modals/AppDetailsModal.jsx","components/AppCard.jsx","components/FavoritedDragDropContext.jsx","components/modals/FavoritedAppsModal.jsx","components/OpenFavorites.jsx","components/Logo.jsx","components/Header.jsx","components/modals/NewAppModal.jsx","components/Tooltip.jsx","components/AppList.jsx","components/DragDropContextComponent.jsx","screens/HomeScreen.jsx","constants/userConstants.js","stores/store.js","reducers/appReducer.js","reducers/userReducer.js","reducers/noteReducer.js","App.jsx","index.js"],"names":["USER_APPS_REQUEST","USER_APPS_SUCCESS","USER_APPS_FAIL","USER_APPS_RESET","POST_APP_REQUEST","POST_APP_SUCCESS","POST_APP_FAIL","POST_APP_RESET","UPDATE_APP_REQUEST","UPDATE_APP_SUCCESS","UPDATE_APP_FAIL","UPDATE_APP_RESET","APP_TOOL_TIP_OFF","APP_TOOL_TIP_ON","nameValuePairs","noApps","apps","key","length","addAppToList","application","dispatch","getState","a","type","userApps","id","uuid","list","listNameValuePairs","appsCopy","forEach","app","index","sort","b","unshift","localStorage","setItem","JSON","stringify","payload","error","response","data","message","DeleteAppModal","show","handleClose","deleteHandler","item","Modal","onHide","centered","size","className","onClick","e","stopPropagation","Body","Button","ListSelect","close","useDispatch","userInfo","useSelector","state","userLogin","handleClick","i","sourceIndex","sourceList","sourceListName","destinationListName","destinationList","appId","config","headers","Authorization","token","moveData","destinationIndex","sourceArr","destinationArr","updatedApp","splice","axios","put","Row","map","Col","color","xs","FavoriteButton","demoButton","setApps","favorited","fav_index","arr","indexOf","favoriteAppById","title","POST_NOTE_REQUEST","POST_NOTE_SUCCESS","POST_NOTE_FAIL","closeNoteEditors","listName","findIndex","notes","n","editing","DetailModalNav","toDetails","toNotes","tab","messageStyle","width","Message","variant","children","style","Alert","AppNote","note","closeCreatingNote","clearNoteContent","useState","content","setContent","showDeleteModal","setShowDeleteModal","errorMessage","setErrorMessage","closeDeleteModal","handleUpdateClick","trim","updated_on","Date","dd","String","getDate","padStart","mm","getMonth","yyyy","getFullYear","noteIndex","updateNoteById","created_on","toggleEditingNote","Form","Control","as","value","onChange","target","placeholder","margin","padding","height","display","alignItems","paddingTop","paddingLeft","borderRadius","marginRight","noteId","filter","deleteNoteById","NotesModal","creatingNote","setCreatingNote","showListSelect","setShowListSelect","noteContent","setNoteContent","notesModalBodyRef","useRef","closeListSelect","handleSaveClick","saveNote","Header","companyName","jobTitle","ref","borderBottom","Group","current","scroll","top","behavior","trimDate","date","slice","colorsArr","ColorSelect","setColor","openColorSelect","closeColorSelect","clr","sm","md","DetailModal","updateApp","success","company","setCompany","setJobTitle","url","setUrl","salary","setSalary","location","setLocation","description","setDescription","validationMessages","setValidationMessages","deadline","setDeadline","applicationDate","setApplicationDate","interview","interviewDate","setInterviewDate","offer","offerDate","setOfferDate","offer_acceptance","offerAcceptanceDate","setOfferAcceptanceDate","showColorSelect","setShowColorSelect","modalRef","handleUpdateButtonClick","push","validateForm","setTimeout","updateAppById","autoComplete","lg","Label","scrollIntoView","block","AppDetailsModal","setTab","AppCard","favslist","showDetailsModal","setShowDetailsModal","detailsModalDisabled","setDetailsModalDisabled","openDeleteModal","openDetailsModal","disableDetailsModal","enableDetailsModal","draggableId","provided","innerRef","draggableProps","dragHandleProps","onMouseOver","onMouseLeave","appsArr","deleteAppById","FavoritedDragDropContext","onDragEnd","result","destination","source","droppableId","FavoritedAppsModal","favoritedApps","droppableProps","OpenFavorites","showFavorites","setShowFavorites","Logo","Container","fluid","listValues","NewAppModal","listValue","postApp","today","setCompanyName","setList","setDate","resetForm","useCallback","useEffect","submitHandler","preventDefault","contentClassName","Title","controlId","Tooltip","toolTip","wishlist","applied","phone","rejected","AppList","name","icon","listIntFromDB","displayToolTip","showModal","setShowModal","xl","DragDropContextComponent","HomeScreen","history","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_REGISTER_RESET","reducer","combineReducers","action","loading","userRegister","notePost","userInfoFromStorage","sessionStorage","getItem","parse","userAppsFromStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6a5d64ae.chunk.js","sourcesContent":["export const USER_APPS_REQUEST = 'USER_APPS_REQUEST';\nexport const USER_APPS_SUCCESS = 'USER_APPS_SUCCESS';\nexport const USER_APPS_FAIL = 'USER_APPS_FAIL';\nexport const USER_APPS_RESET = 'USER_APPS_RESET';\n\nexport const POST_APP_REQUEST = 'POST_APP_REQUEST';\nexport const POST_APP_SUCCESS = 'POST_APP_SUCCESS';\nexport const POST_APP_FAIL = 'POST_APP_FAIL';\nexport const POST_APP_RESET = 'POST_APP_RESET';\n\nexport const UPDATE_APP_REQUEST = 'UPDATE_APP_REQUEST';\nexport const UPDATE_APP_SUCCESS = 'UPDATE_APP_SUCCESS';\nexport const UPDATE_APP_FAIL = 'UPDATE_APP_FAIL';\nexport const UPDATE_APP_RESET = 'UPDATE_APP_RESET';\n\nexport const APP_TOOL_TIP_OFF = 'APP_TOOL_TIP_OFF';\nexport const APP_TOOL_TIP_ON = 'APP_TOOL_TIP_ON';\n","let nameValuePairs = [\n  '',\n  'wishlist',\n  'applied',\n  'phone',\n  'on site',\n  'offer',\n  'rejected',\n];\n\nexport default nameValuePairs;\n","export const noApps = (apps) => {\n  for (let key in apps) {\n    if (apps[key].length !== 0) return false;\n  }\n  return true;\n};\n","import {\n  USER_APPS_SUCCESS,\n  POST_APP_REQUEST,\n  POST_APP_SUCCESS,\n  POST_APP_FAIL,\n  UPDATE_APP_REQUEST,\n  UPDATE_APP_SUCCESS,\n  UPDATE_APP_FAIL,\n  UPDATE_APP_RESET,\n  APP_TOOL_TIP_ON,\n} from '../constants/appConstants';\nimport listNameValuePairs from '../data/lookUpTables/listNameValuePairs';\nimport { v4 as uuid } from 'uuid';\nimport { noApps } from '../helpers/NoApps';\n\nexport const addAppToList = (application) => async (dispatch, getState) => {\n  dispatch({ type: POST_APP_REQUEST });\n  try {\n    const {\n      userApps: { apps },\n    } = getState();\n    application.id = uuid();\n    let list = listNameValuePairs[application.list];\n\n    let appsCopy = apps;\n\n    appsCopy[list].forEach((app) => {\n      app.index++;\n    });\n    appsCopy[list].sort((a, b) => a.index - b.index);\n    appsCopy[list].unshift(application);\n    localStorage.setItem('apps', JSON.stringify(appsCopy));\n    dispatch({ type: USER_APPS_SUCCESS, payload: appsCopy });\n    dispatch({ type: POST_APP_SUCCESS });\n  } catch (error) {\n    dispatch({\n      type: POST_APP_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const deleteAppById = (app) => async (dispatch, getState) => {\n  const {\n    userApps: { apps },\n  } = getState();\n  const { id, list, index, fav_index, favorited } = app;\n\n  let appsCopy = apps;\n\n  if (favorited) {\n    for (let key in appsCopy) {\n      appsCopy[key].forEach((app) => {\n        if (app.fav_index > fav_index) {\n          app.fav_index -= 1;\n        }\n      });\n    }\n  }\n\n  let listName = listNameValuePairs[list];\n  let appsArr = appsCopy[listName];\n\n  appsArr.forEach((app) => {\n    if (app.index > index) app.index -= 1;\n  });\n\n  appsArr = appsArr.filter((app) => app.id !== id);\n  appsCopy[listName] = appsArr;\n  localStorage.setItem('apps', JSON.stringify(appsCopy));\n  dispatch({ type: USER_APPS_SUCCESS, payload: appsCopy });\n  if (noApps(appsCopy)) {\n    dispatch({ type: APP_TOOL_TIP_ON });\n  }\n};\nexport const updateAppById = (app) => async (dispatch, getState) => {\n  try {\n    dispatch({ type: UPDATE_APP_REQUEST });\n    let {\n      userApps: { apps },\n    } = getState();\n    let list = listNameValuePairs[app.list];\n    let appsCopy = apps;\n    let arr = apps[list];\n    arr[arr.indexOf((e) => (e.id = app.id))] = app;\n    appsCopy[list] = arr;\n    localStorage.setItem('apps', JSON.stringify(appsCopy));\n    dispatch({ type: USER_APPS_SUCCESS, payload: appsCopy });\n    dispatch({ type: UPDATE_APP_SUCCESS });\n    setTimeout(() => {\n      dispatch({ type: UPDATE_APP_RESET });\n    }, 1500);\n  } catch (error) {\n    dispatch({\n      type: UPDATE_APP_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const favoriteAppById = (app) => async (dispatch, getState) => {\n  let {\n    userApps: { apps },\n  } = getState();\n\n  if (app.favorited) {\n    for (let key in apps) {\n      apps[key].forEach((e) => {\n        if (e.fav_index >= 0) {\n          e.fav_index += 1;\n        }\n      });\n    }\n    app.fav_index = 0;\n  } else {\n    for (let key in apps) {\n      apps[key].forEach((e) => {\n        if (e.fav_index > app.fav_index) {\n          e.fav_index -= 1;\n        }\n      });\n    }\n    app.fav_index = null;\n  }\n\n  let list = listNameValuePairs[app.list];\n  let appsCopy = apps;\n  let arr = apps[list];\n  arr[arr.indexOf((e) => (e.id = app.id))] = app;\n  appsCopy[list] = arr;\n  localStorage.setItem('apps', JSON.stringify(appsCopy));\n  dispatch({ type: USER_APPS_SUCCESS, payload: appsCopy });\n};\n","import React from 'react';\nimport { Modal, Button } from 'react-bootstrap';\nimport '../../styles/deleteModal.css';\n\nconst DeleteAppModal = ({ show, handleClose, deleteHandler, item }) => {\n  return (\n    <Modal\n      show={show}\n      onHide={handleClose}\n      centered\n      size='md'\n      className='deleteModal'\n      onClick={(e) => {\n        e.stopPropagation();\n      }}\n    >\n      <Modal.Body className='deleteModal-body'>\n        <h4>Delete {`${item}`}</h4>\n        <p>{`Are you sure you want to delete this ${item}?`}</p>\n        <div className='deleteModal-body-button-container'>\n          <Button\n            className='modal-button deleteModal-delete-button default-accent-border'\n            onClick={(e) => {\n              e.stopPropagation();\n              deleteHandler();\n            }}\n          >\n            Delete\n          </Button>\n          <Button\n            className='modal-button deleteModal-cancel-button default-accent-border'\n            onClick={(e) => {\n              e.stopPropagation();\n              handleClose();\n            }}\n          >\n            Cancel\n          </Button>\n        </div>\n      </Modal.Body>\n    </Modal>\n  );\n};\n\nexport default DeleteAppModal;\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Row, Col } from 'react-bootstrap';\nimport '../styles/listSelect.css';\nimport nameValuePairs from '../data/lookUpTables/listNameValuePairs';\nimport { USER_APPS_SUCCESS } from '../constants/appConstants';\nimport axios from 'axios';\n\nconst ListSelect = ({ close, app }) => {\n  const dispatch = useDispatch();\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n  const userApps = useSelector((state) => state.userApps);\n  const { apps } = userApps;\n\n  const handleClick = async (e, i) => {\n    e.stopPropagation();\n\n    if (i !== app.list) {\n      let sourceIndex = app.index;\n      let destinationIndex = 0;\n      let sourceList = app.list;\n      let sourceListName = nameValuePairs[sourceList];\n      let destinationList = i;\n      let destinationListName = nameValuePairs[destinationList];\n      let appId = app.id;\n\n      let config = {\n        headers: {\n          Authorization: `Bearer ${userInfo.token}`,\n          'Content-Type': 'application/json',\n        },\n      };\n\n      let moveData = {\n        sourceIndex,\n        destinationIndex,\n        sourceList: sourceListName,\n        destinationList: destinationListName,\n        appId,\n      };\n\n      let appsCopy = apps;\n      let sourceArr = appsCopy[sourceListName];\n      let destinationArr = appsCopy[destinationListName];\n      let updatedApp = sourceArr.splice(sourceIndex, 1);\n      updatedApp = updatedApp[0];\n      updatedApp.index = 0;\n      updatedApp.list = destinationList;\n      for (let i = sourceIndex; i < sourceArr.length; i++) {\n        sourceArr[i].index -= 1;\n      }\n      for (let i = destinationIndex; i < destinationArr.length; i++) {\n        destinationArr[i].index += 1;\n      }\n      destinationArr.unshift(updatedApp);\n      appsCopy[sourceListName] = sourceArr;\n      appsCopy[destinationListName] = destinationArr;\n      dispatch({ type: USER_APPS_SUCCESS, payload: appsCopy });\n      await axios.put('/api/apps/update/index', moveData, config);\n      close();\n    }\n  };\n\n  return (\n    <Row className='list-select-container'>\n      {nameValuePairs.map(\n        (list, i) =>\n          list && (\n            <Col\n              className={`list-select-item noselect ${\n                app.list === i ? 'current-active-list' : ''\n              } modal-nav-link ${app.color} ${app.color}-card-border`}\n              key={i}\n              xs={12}\n              onClick={(e) => {\n                handleClick(e, i);\n              }}\n            >\n              {list}\n            </Col>\n          )\n      )}\n    </Row>\n  );\n};\n\nexport default ListSelect;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport '../styles/favoriteButton.css';\nimport { favoriteAppById } from '../actions/appActions';\n\nconst FavoriteButton = ({ app, color, demoButton, setApps }) => {\n  const dispatch = useDispatch();\n  let { favorited } = app;\n\n  const handleClick = (e) => {\n    e.stopPropagation();\n    let updatedApp = app;\n    updatedApp.favorited = !favorited;\n    if (demoButton) {\n      setApps([app]);\n    }\n    if (!demoButton) {\n      dispatch(favoriteAppById(updatedApp));\n    }\n  };\n\n  return (\n    <i\n      className={` ${`${\n        favorited ? 'fas' : 'far'\n      } fa-bookmark`} favoriteButton ${color && color}`}\n      onClick={handleClick}\n      title='Favorite'\n    ></i>\n  );\n};\n\nexport default FavoriteButton;\n","export const POST_NOTE_REQUEST = 'POST_NOTE_REQUEST';\nexport const POST_NOTE_SUCCESS = 'POST_NOTE_SUCCESS';\nexport const POST_NOTE_FAIL = 'POST_NOTE_FAIL';\nexport const POST_NOTE_RESET = 'POST_NOTE_RESET';\n","import { v4 as uuid } from 'uuid';\nimport {\n  POST_NOTE_REQUEST,\n  POST_NOTE_SUCCESS,\n  POST_NOTE_FAIL,\n} from '../constants/noteConstants';\nimport { USER_APPS_SUCCESS } from '../constants/appConstants';\nimport nameValuePairs from '../data/lookUpTables/listNameValuePairs';\n//DONE\nexport const saveNote = (app, content) => async (dispatch, getState) => {\n  try {\n    dispatch({ type: POST_NOTE_REQUEST });\n    const {\n      userApps: { apps },\n    } = getState();\n    let created_on = new Date();\n    var dd = String(created_on.getDate()).padStart(2, '0');\n    var mm = String(created_on.getMonth() + 1).padStart(2, '0'); //January is 0!\n    var yyyy = created_on.getFullYear();\n    created_on = mm + '/' + dd + '/' + yyyy;\n\n    let note = {\n      content,\n      id: uuid(),\n      created_on,\n      editing: false,\n    };\n    let appsCopy = apps;\n    let listName = nameValuePairs[app.list];\n    let arr = appsCopy[listName];\n    let index = arr.findIndex((e) => e.id === app.id);\n    arr[index].notes.unshift(note);\n    appsCopy[listName] = arr;\n    localStorage.setItem('apps', JSON.stringify(appsCopy));\n    dispatch({ type: USER_APPS_SUCCESS, payload: appsCopy });\n    dispatch({ type: POST_NOTE_SUCCESS });\n  } catch (error) {\n    dispatch({ type: POST_NOTE_FAIL });\n  }\n};\n\n//DONE\nexport const deleteNoteById = (app, noteId) => async (dispatch, getState) => {\n  const {\n    userApps: { apps },\n  } = getState();\n\n  let appsCopy = apps;\n  let listName = nameValuePairs[app.list];\n  let arr = appsCopy[listName];\n  let index = arr.findIndex((e) => e.id === app.id);\n  arr[index].notes = arr[index].notes.filter((note) => note.id !== noteId);\n  appsCopy[listName] = arr;\n  localStorage.setItem('apps', JSON.stringify(appsCopy));\n  dispatch({ type: USER_APPS_SUCCESS, payload: appsCopy });\n};\n\n//DONE\nexport const updateNoteById =\n  (app, note, content) => async (dispatch, getState) => {\n    const {\n      userApps: { apps },\n    } = getState();\n    let appsCopy = apps;\n    let listName = nameValuePairs[app.list];\n    let arr = appsCopy[listName];\n    let updated_on = new Date();\n    var dd = String(updated_on.getDate()).padStart(2, '0');\n    var mm = String(updated_on.getMonth() + 1).padStart(2, '0'); //January is 0!\n    var yyyy = updated_on.getFullYear();\n    updated_on = mm + '/' + dd + '/' + yyyy;\n\n    let index = arr.findIndex((e) => e.id === app.id);\n    let noteIndex = arr[index].notes.findIndex((e) => e.id === note.id);\n    arr[index].notes[noteIndex] = {\n      ...note,\n      content,\n      updated_on,\n      editing: false,\n    };\n    appsCopy[listName] = arr;\n    localStorage.setItem('apps', JSON.stringify(appsCopy));\n    dispatch({ type: USER_APPS_SUCCESS, payload: appsCopy });\n  };\n\nexport const toggleEditingNote = (app, note) => (dispatch, getState) => {\n  const {\n    userApps: { apps },\n  } = getState();\n  let appsCopy = apps;\n  let listName = nameValuePairs[app.list];\n  let arr = appsCopy[listName];\n  let index = arr.findIndex((e) => e.id === app.id);\n  let noteIndex = arr[index].notes.findIndex((e) => e.id === note.id);\n  arr[index].notes[noteIndex] = {\n    ...note,\n    editing: !note.editing,\n  };\n  appsCopy[listName] = arr;\n  localStorage.setItem('apps', JSON.stringify(appsCopy));\n  dispatch({ type: USER_APPS_SUCCESS, payload: appsCopy });\n};\n\nexport const closeNoteEditors = (app) => (dispatch, getState) => {\n  const {\n    userApps: { apps },\n  } = getState();\n  let appsCopy = apps;\n  let listName = nameValuePairs[app.list];\n  let arr = apps[listName];\n  let index = arr.findIndex((e) => e.id === app.id);\n  appsCopy[listName][index].notes.forEach((n) => (n.editing = false));\n  localStorage.setItem('apps', JSON.stringify(appsCopy));\n  dispatch({ type: USER_APPS_SUCCESS, payload: appsCopy });\n};\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { UPDATE_APP_RESET } from '../constants/appConstants';\nimport { closeNoteEditors } from '../actions/noteActions';\nimport '../styles/modalNav.css';\n\nconst DetailModalNav = ({ app, color, toDetails, toNotes, tab }) => {\n  const dispatch = useDispatch();\n\n  return (\n    <div className='modal-nav-container'>\n      <div\n        onClick={(e) => {\n          e.stopPropagation();\n          dispatch(closeNoteEditors(app));\n          toDetails();\n        }}\n        className={`modal-nav-link ${\n          tab === 'details' ? 'modal-nav-link-active' : ''\n        } ${color ? color : 'default'} ${\n          color ? color : 'default'\n        }-accent-border`}\n      >\n        Details\n      </div>\n      <div\n        className={`modal-nav-link ${\n          tab === 'notes' ? 'modal-nav-link-active' : ''\n        } ${color ? color : 'default'} ${\n          color ? color : 'default'\n        }-accent-border`}\n        onClick={(e) => {\n          e.stopPropagation();\n          dispatch({ type: UPDATE_APP_RESET });\n          toNotes();\n        }}\n      >\n        Notes\n      </div>\n    </div>\n  );\n};\n\nexport default DetailModalNav;\n","import React from 'react';\nimport { Alert } from 'react-bootstrap';\n\nconst messageStyle = {\n  width: '100%',\n};\n\nconst Message = ({ variant, children, style, className }) => {\n  return (\n    <Alert\n      variant={variant}\n      style={{ ...messageStyle, ...style }}\n      className={className}\n    >\n      {children}\n    </Alert>\n  );\n};\n\nexport default Message;\n","import React, { useState } from 'react';\nimport { Button, Form } from 'react-bootstrap';\nimport '../styles/note.css';\nimport DeleteAppModal from './modals/DeleteAppModal';\nimport {\n  deleteNoteById,\n  updateNoteById,\n  toggleEditingNote,\n  closeNoteEditors,\n} from '../actions/noteActions';\nimport { useDispatch } from 'react-redux';\nimport Message from './Message';\n\nconst AppNote = ({ note, app, closeCreatingNote, clearNoteContent }) => {\n  const dispatch = useDispatch();\n  const [content, setContent] = useState(note ? note.content : '');\n  const [showDeleteModal, setShowDeleteModal] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n\n  const closeDeleteModal = () => {\n    setShowDeleteModal(false);\n  };\n\n  const openDeleteModal = () => {\n    setShowDeleteModal(true);\n  };\n\n  const deleteHandler = () => {\n    dispatch(deleteNoteById(app, note.id));\n    closeDeleteModal();\n  };\n\n  const handleUpdateClick = () => {\n    setErrorMessage('');\n    if (content.trim().length !== 0 && content !== note.content) {\n      dispatch(updateNoteById(app, note, content));\n    } else if (note.content === content) {\n      setErrorMessage('Please change content to something new.');\n    } else {\n      setErrorMessage('Empty notes cannot be saved');\n    }\n  };\n\n  return (\n    note && (\n      <>\n        <div className='note'>\n          <div className='note-header'>\n            <div className='note-header-date'>\n              {note.updated_on ? note.updated_on : note.created_on}\n            </div>\n            <div className='note-header-border'></div>\n            <div className='note-header-buttons'>\n              <i\n                className={`${note.editing ? 'fas fa-times' : 'far fa-edit'}`}\n                title={`${!note.editing ? 'Edit' : 'Close'}`}\n                onClick={(e) => {\n                  e.stopPropagation();\n                  clearNoteContent();\n                  closeCreatingNote();\n                  if (!note.editing) {\n                    dispatch(closeNoteEditors(app));\n                  }\n                  dispatch(toggleEditingNote(app, note));\n                  setContent(note.content);\n                }}\n              />\n              <i\n                className='far fa-trash-alt'\n                title='Delete'\n                onClick={() => {\n                  openDeleteModal();\n                }}\n              ></i>\n            </div>\n          </div>\n          <div className='note-body'>\n            {note.editing ? (\n              <Form>\n                <Form.Control\n                  as='textarea'\n                  className='noteupdate-textarea'\n                  value={content}\n                  onChange={(e) => {\n                    setContent(e.target.value);\n                  }}\n                  placeholder='Update note...'\n                ></Form.Control>\n                <div className='noteupdateform-update-button'>\n                  {errorMessage && (\n                    <Message\n                      variant='danger'\n                      style={{\n                        margin: '0px',\n                        padding: '0px',\n                        height: '30px',\n                        display: 'flex',\n                        alignItems: 'center',\n                        paddingTop: '3px',\n                        paddingLeft: '23px',\n                        borderRadius: '5px',\n                        width: '561px',\n                      }}\n                    >\n                      {errorMessage}\n                    </Message>\n                  )}\n                  <Button\n                    className='modal-button detail-modal-updateButton'\n                    style={{ marginRight: '5px' }}\n                    onClick={(e) => {\n                      e.stopPropagation();\n                      handleUpdateClick();\n                    }}\n                  >\n                    Update\n                  </Button>\n                </div>\n              </Form>\n            ) : (\n              <div className='note-body-content'>{note.content}</div>\n            )}\n          </div>\n        </div>\n        <DeleteAppModal\n          show={showDeleteModal}\n          handleClose={closeDeleteModal}\n          deleteHandler={deleteHandler}\n          item='note'\n        />\n      </>\n    )\n  );\n};\n\nexport default AppNote;\n","import React, { useState, useRef } from 'react';\nimport { Modal, Row, Button, Form } from 'react-bootstrap';\nimport ListSelect from './ListSelect';\nimport FavoriteButton from './FavoriteButton';\nimport '../styles/notesModal.css';\nimport DetailModalNav from './DetailModalNav';\nimport { useDispatch } from 'react-redux';\nimport AppNote from './AppNote';\nimport { saveNote, closeNoteEditors } from '../actions/noteActions';\nimport Message from './Message';\n\nconst NotesModal = ({ app, handleClose, tab, toDetails, toNotes }) => {\n  const dispatch = useDispatch();\n  const [errorMessage, setErrorMessage] = useState('Save a new note');\n  const [creatingNote, setCreatingNote] = useState(app.notes.length === 0);\n  const [showListSelect, setShowListSelect] = useState(false);\n  const [noteContent, setNoteContent] = useState('');\n\n  const notesModalBodyRef = useRef();\n\n  const openListSelect = () => {\n    setShowListSelect(true);\n  };\n\n  const closeListSelect = () => {\n    setShowListSelect(false);\n  };\n\n  const closeCreatingNote = () => {\n    setCreatingNote(false);\n  };\n\n  const handleCloseButtonClick = () => {\n    setNoteContent('');\n    handleClose();\n  };\n\n  const clearNoteContent = () => {\n    setNoteContent('');\n  };\n\n  const handleSaveClick = () => {\n    if (noteContent.trim()) {\n      dispatch(saveNote(app, noteContent));\n      setCreatingNote(false);\n      setNoteContent('');\n    } else {\n      setErrorMessage('Empty notes cannot be saved');\n    }\n  };\n\n  return (\n    <>\n      <Modal.Header\n        className={`detailModal-header ${app.color ? app.color : 'default'} ${\n          app.color ? app.color : 'default'\n        }-modal-header-border`}\n        onClick={(e) => {\n          e.stopPropagation();\n          closeListSelect();\n          setErrorMessage('');\n        }}\n      >\n        <Row className='detailModal-header-nav'>\n          <div className='detailModal-header-nav-buttonContainer'>\n            <div className='detailModal-moveButton-container'>\n              <Button\n                className={`modal-button detail-modal-moveButton ${app.color}-accent-border`}\n                onClick={(e) => {\n                  e.stopPropagation();\n                  openListSelect();\n                }}\n              >\n                Move\n              </Button>\n              {showListSelect && (\n                <ListSelect close={closeListSelect} app={app} />\n              )}\n            </div>\n            <Button\n              className={`modal-button ${app.color}-accent-border detail-modal-closeButton`}\n              onClick={(e) => {\n                e.stopPropagation();\n                setNoteContent('');\n                handleCloseButtonClick();\n              }}\n            >\n              Close\n            </Button>\n          </div>\n          <div className='detailModal-header-main'>\n            <div className='detailModal-header-main-text'>\n              <p className='detailModal-header-main-text-company'>\n                {app.companyName}\n              </p>\n              <p className='detailModal-header-main-text-job'>{app.jobTitle}</p>\n            </div>\n            <FavoriteButton app={app} color={app.color} />\n          </div>\n          <DetailModalNav\n            app={app}\n            color={app.color}\n            toDetails={toDetails}\n            toNotes={toNotes}\n            tab={tab}\n          />\n        </Row>\n      </Modal.Header>\n      <Modal.Body\n        className={`notesModal-body detailModal-body ${\n          app.color ? app.color : 'default'\n        }-body ${app.color}-modal-body-border`}\n        ref={notesModalBodyRef}\n        onClick={() => {\n          closeListSelect();\n          setErrorMessage('');\n        }}\n      >\n        <div className='notesModal-body-container'>\n          {(app.notes.length === 0 || creatingNote) && (\n            <>\n              <div\n                className='notesModal-body-button-container'\n                onClick={(e) => {\n                  e.stopPropagation();\n                }}\n              >\n                <Message\n                  style={{\n                    margin: '0px',\n                    padding: '0px',\n                    height: '30px',\n                    display: 'flex',\n                    alignItems: 'center',\n                    paddingTop: '3px',\n                    paddingLeft: '23px',\n                    borderRadius: '10px 10px 0 0',\n                    borderBottom: 'unset !important',\n                  }}\n                  className={`${app.color ? app.color : 'default'} ${\n                    app.color ? app.color : 'default'\n                  }-accent-border`}\n                >\n                  {errorMessage}\n                </Message>\n                <div\n                  className='notesModal-body-create-container'\n                  onClick={(e) => {\n                    e.stopPropagation();\n                    handleSaveClick();\n                  }}\n                >\n                  <div\n                    className={`notesModal-body-create-right ${\n                      app.color ? app.color : 'default'\n                    } ${app.color ? app.color : 'default'}-accent-border`}\n                    title='Save'\n                  >\n                    <i className='fas fa-plus notesModal-body-create-icon'></i>\n                    <span className='notesModal-body-create-text'>Save</span>\n                  </div>\n                </div>\n                <div\n                  className='notesModal-body-create-container'\n                  onClick={(e) => {\n                    e.stopPropagation();\n                    if (app.notes) {\n                      if (app.notes.length !== 0) {\n                        setCreatingNote(false);\n                      } else {\n                        setErrorMessage('Create your first note to display');\n                      }\n                    }\n                  }}\n                >\n                  <div\n                    className={`notesModal-body-create-right ${\n                      app.color ? app.color : 'default'\n                    } ${app.color ? app.color : 'default'}-accent-border`}\n                    title='Close'\n                  >\n                    <i className='fas fa-times notesModal-body-close-icon'></i>\n                    <span className='notesModal-body-create-text'>Close</span>\n                  </div>\n                </div>\n              </div>\n              <Form\n                onClick={(e) => {\n                  e.stopPropagation();\n                }}\n              >\n                <Form.Group>\n                  <Form.Control\n                    as='textarea'\n                    placeholder='Save your notes here'\n                    value={noteContent}\n                    onChange={(e) => {\n                      setNoteContent(e.target.value);\n                    }}\n                  ></Form.Control>\n                </Form.Group>\n              </Form>\n            </>\n          )}\n          {app.notes.length > 0 &&\n            app.notes.map((note, i) => (\n              <AppNote\n                note={note}\n                key={i}\n                app={app}\n                clearNoteContent={clearNoteContent}\n                closeCreatingNote={closeCreatingNote}\n              />\n            ))}\n        </div>\n      </Modal.Body>\n      {!creatingNote && app.notes.length !== 0 && (\n        <div className='notesModal-open-form-button'>\n          <div\n            className={`notesModal-body-create-right square-corner  ${app.color}`}\n            title='Create a note'\n            onClick={(e) => {\n              e.stopPropagation();\n              dispatch(closeNoteEditors(app));\n              setCreatingNote(true);\n              notesModalBodyRef.current.scroll({\n                top: 0,\n                behavior: 'smooth',\n              });\n            }}\n          >\n            <i className='fas fa-plus notesModal-body-create-icon'></i>\n            <span className='notesModal-body-create-text'>Note</span>\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default NotesModal;\n","export const formatDate = (date) => {\n  let month = `${date.slice(5, 7)}`;\n  let day = `${date.slice(8, 10)}`;\n  let year = date.slice(0, 4);\n  return `${month}/${day}/${year}`;\n};\n\nexport const trimDate = (date) => {\n  return date.slice(0, 10);\n};\n","let colors = {\n  white: 'white',\n  red: 'red',\n  salmon: 'salmon',\n  orange: 'orange',\n  gold: 'gold',\n  yellow: 'yellow',\n  lightGreen: 'light-green',\n  green: 'green',\n  darkGreen: 'dark-green',\n  blueGreen: 'blue-green',\n  lightBlue: 'light-blue',\n  blue: 'blue',\n  navy: 'navy',\n  purple: 'purple',\n  black: 'black',\n  gray: 'gray',\n  offPurple: 'off-purple',\n};\n\nexport let colorsArr = [\n  'default',\n  'dark-1',\n  'dark-2',\n  'light-3',\n  'light-2',\n  'light-1',\n  'row-1-1',\n  'row-1-2',\n  'row-1-3',\n  'row-1-4',\n  'row-1-5',\n  'row-1-6',\n  'row-2-1',\n  'row-2-2',\n  'row-2-3',\n  'row-2-4',\n  'row-2-5',\n  'row-2-6',\n  'row-3-1',\n  'row-3-2',\n  'row-3-3',\n  'row-3-4',\n  'row-3-5',\n  'row-3-6',\n  'row-4-1',\n  'row-4-2',\n  'row-4-3',\n  'row-4-4',\n  'row-4-5',\n  'row-4-6',\n  'row-5-1',\n  'row-5-2',\n  'row-5-3',\n  'row-5-4',\n  'row-5-5',\n  'row-5-6',\n  'row-6-1',\n  'row-6-2',\n  'row-6-3',\n  'row-6-4',\n  'row-6-5',\n  'row-6-6',\n];\nexport default colors;\n","import React from 'react';\nimport { Row, Col } from 'react-bootstrap';\nimport '../styles/colorSelect.css';\nimport { colorsArr } from '../styles/colorPallet';\n\nconst ColorSelect = ({\n  color,\n  setColor,\n  show,\n  openColorSelect,\n  closeColorSelect,\n}) => {\n  return (\n    <>\n      <div\n        className='colorSelect'\n        onClick={(e) => {\n          e.stopPropagation();\n          openColorSelect();\n        }}\n      >\n        <div className={`colorSelect-content ${color}`}></div>\n      </div>\n      {show && (\n        <Row\n          className='colorSelect-menu'\n          onClick={(e) => {\n            e.stopPropagation();\n          }}\n        >\n          {colorsArr.map((clr, i) => (\n            <Col\n              xs={1}\n              sm={2}\n              md={4}\n              key={i}\n              className={`colorSelect-menu-option-container`}\n            >\n              <div\n                className={`colorSelect-menu-option-border ${\n                  clr === color && 'colorSelect-menu-option-active'\n                }`}\n                onClick={(e) => {\n                  setColor(clr);\n                  closeColorSelect();\n                }}\n              >\n                <div className={`colorSelect-menu-option  ${clr} `}></div>\n              </div>\n            </Col>\n          ))}\n        </Row>\n      )}{' '}\n    </>\n  );\n};\n\nexport default ColorSelect;\n","import React, { useState, useRef } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Modal, Form, Row, Col, Button } from 'react-bootstrap';\nimport { trimDate } from '../helpers/dateHelpers';\nimport { UPDATE_APP_RESET } from '../constants/appConstants';\nimport { updateAppById } from '../actions/appActions';\nimport ListSelect from './ListSelect';\nimport FavoriteButton from './FavoriteButton';\nimport Message from './Message';\nimport ColorSelect from './ColorSelect';\nimport DetailModalNav from './DetailModalNav';\n\nconst DetailModal = ({ app, handleClose, tab, toDetails, toNotes }) => {\n  const dispatch = useDispatch();\n\n  const updateApp = useSelector((state) => state.updateApp);\n  const { success, error } = updateApp;\n\n  const [company, setCompany] = useState(app.companyName);\n  const [jobTitle, setJobTitle] = useState(app.jobTitle);\n  const [url, setUrl] = useState(app.url);\n  const [color, setColor] = useState(app.color);\n  const [salary, setSalary] = useState(app.salary);\n  const [location, setLocation] = useState(app.location);\n  const [description, setDescription] = useState(app.description);\n  const [validationMessages, setValidationMessages] = useState([]);\n  const [showListSelect, setShowListSelect] = useState(false);\n\n  const [deadline, setDeadline] = useState(\n    app.deadline ? trimDate(app.deadline) : ''\n  );\n  const [applicationDate, setApplicationDate] = useState(\n    app.application ? trimDate(app.application) : ''\n  );\n  const [interviewDate, setInterviewDate] = useState(\n    app.interview ? trimDate(app.interview) : ''\n  );\n  const [offerDate, setOfferDate] = useState(\n    app.offer ? trimDate(app.offer) : ''\n  );\n  const [offerAcceptanceDate, setOfferAcceptanceDate] = useState(\n    app.offer_acceptance ? trimDate(app.offer_acceptance) : ''\n  );\n\n  const [showColorSelect, setShowColorSelect] = useState(false);\n\n  const modalRef = useRef();\n\n  const validateForm = () => {\n    let arr = [];\n    if (company.length < 1) {\n      arr.push('Company name is a required field');\n    }\n    if (jobTitle.length < 1) {\n      arr.push('Job title is a required field');\n    }\n    if (arr.length < 1) {\n      return true;\n    } else {\n      setValidationMessages(arr);\n      return false;\n    }\n  };\n\n  const handleUpdateButtonClick = (e) => {\n    dispatch({ type: UPDATE_APP_RESET });\n\n    if (validateForm()) {\n      let updatedApp = app;\n      updatedApp.companyName = company;\n      updatedApp.jobTitle = jobTitle;\n      updatedApp.url = url;\n      updatedApp.color = color;\n      updatedApp.salary = salary;\n      updatedApp.location = location;\n      updatedApp.description = description;\n      updatedApp.deadline = deadline;\n      updatedApp.application = applicationDate;\n      updatedApp.offer = offerDate;\n      updatedApp.offer_acceptance = offerAcceptanceDate;\n      updatedApp.interview = interviewDate;\n\n      dispatch(updateAppById(updatedApp));\n    }\n  };\n\n  const openListSelect = (e) => {\n    e.stopPropagation();\n    setShowListSelect(true);\n  };\n\n  const closeListSelect = () => {\n    setShowListSelect(false);\n  };\n\n  const handleCloseButtonClick = (e) => {\n    handleClose();\n  };\n\n  const changeColorTo = (color) => {\n    setColor(color);\n  };\n\n  const openColorSelect = () => {\n    setShowColorSelect(true);\n  };\n\n  const closeColorSelect = () => {\n    setShowColorSelect(false);\n  };\n\n  return (\n    <>\n      <Modal.Header\n        className={`detailModal-header ${color ? color : 'default'} ${\n          color ? color : 'default'\n        }-modal-header-border`}\n        onClick={(e) => {\n          closeListSelect();\n          closeColorSelect();\n        }}\n        ref={modalRef}\n      >\n        <Row className='detailModal-header-nav'>\n          <div className='detailModal-header-nav-buttonContainer'>\n            <div className='detailModal-moveButton-container'>\n              <Button\n                className={`modal-button detail-modal-moveButton ${color}-accent-border`}\n                onClick={openListSelect}\n              >\n                Move\n              </Button>\n              {showListSelect && (\n                <ListSelect close={closeListSelect} app={app} />\n              )}\n            </div>\n            <Button\n              className={`${color}-accent-border modal-button detail-modal-updateButton`}\n              onClick={handleUpdateButtonClick}\n            >\n              Update\n            </Button>\n            <Button\n              className={`${color}-accent-border modal-button detail-modal-closeButton`}\n              onClick={handleCloseButtonClick}\n            >\n              Close\n            </Button>\n          </div>\n          <div className='detailModal-header-main'>\n            <div className='detailModal-header-main-text'>\n              <p className={`detailModal-header-main-text-company`}>\n                {app.companyName}\n              </p>\n              <p className={`detailModal-header-main-text-job`}>\n                {app.jobTitle}\n              </p>\n            </div>\n            <FavoriteButton app={app} color={color} />\n          </div>\n          <DetailModalNav\n            app={app}\n            color={color}\n            tab={tab}\n            toDetails={toDetails}\n            toNotes={toNotes}\n          />\n        </Row>\n      </Modal.Header>\n      <Modal.Body\n        className={`detailModal-body ${\n          color ? color : 'default'\n        }-body  ${color}-modal-body-border`}\n        as={Row}\n        onClick={() => {\n          closeListSelect();\n          closeColorSelect();\n        }}\n      >\n        <div className='detailModal-message-container'>\n          {validationMessages.length > 0 && (\n            <Message variant='danger'>\n              <ul className='validation-list'>\n                {validationMessages.map((message, i) => (\n                  <li key={i}>{message}</li>\n                ))}\n              </ul>\n            </Message>\n          )}\n          {success && (\n            <Message variant='success'>\n              Your application has been updated successfully\n            </Message>\n          )}\n          {error && <Message variant='danger'>{error}</Message>}\n        </div>\n\n        <Col\n          xs={12}\n          sm={12}\n          md={8}\n          className='detailModal-body-left'\n          as={Row}\n          autoComplete='off'\n        >\n          <Form.Group as={Col} xs={12} sm={6} md={6} lg={6}>\n            <Form.Label>Company</Form.Label>\n            <Form.Control\n              autoComplete='off'\n              className='capitalize'\n              value={company}\n              placeholder='+ Company Name'\n              onChange={(e) => {\n                setCompany(e.target.value);\n              }}\n            ></Form.Control>\n          </Form.Group>\n          <Form.Group as={Col} xs={12} sm={6} md={6} lg={6}>\n            <Form.Label>Job Title</Form.Label>\n            <Form.Control\n              autoComplete='off'\n              className='capitalize'\n              value={jobTitle}\n              onChange={(e) => {\n                setJobTitle(e.target.value);\n              }}\n              placeholder='+ Job Title'\n            ></Form.Control>\n          </Form.Group>\n          <Form.Group as={Col} xs={12} sm={6} md={8}>\n            <Form.Label>URL</Form.Label>\n            <Form.Control\n              autoComplete='off'\n              value={url}\n              onChange={(e) => {\n                setUrl(e.target.value);\n              }}\n              placeholder='+ Enter URL'\n            ></Form.Control>\n          </Form.Group>\n          <Form.Group as={Col} xs={12} sm={6} md={4}>\n            <Form.Label>Salary</Form.Label>\n            <Form.Control\n              autoComplete='off'\n              value={salary ? salary : ''}\n              onChange={(e) => {\n                setSalary(e.target.value);\n              }}\n              placeholder='+ Salary'\n            ></Form.Control>\n          </Form.Group>\n          <Form.Group as={Col} xs={12} sm={6} md={8}>\n            <Form.Label>Location</Form.Label>\n            <Form.Control\n              autoComplete='off'\n              className='capitalize'\n              value={location}\n              onChange={(e) => {\n                setLocation(e.target.value);\n              }}\n              placeholder='+ Location'\n            ></Form.Control>\n          </Form.Group>\n          <Form.Group as={Col} xs={12} sm={6} md={4}>\n            <Form.Label>Color</Form.Label>\n            <ColorSelect\n              color={color}\n              setColor={changeColorTo}\n              show={showColorSelect}\n              openColorSelect={openColorSelect}\n              closeColorSelect={closeColorSelect}\n            />\n          </Form.Group>\n          <Form.Group as={Col} xs={12}>\n            <Form.Label>Description</Form.Label>\n            <Form.Control\n              autoComplete='off'\n              as='textarea'\n              value={description}\n              onChange={(e) => {\n                setDescription(e.target.value);\n              }}\n              placeholder='+ Description...'\n            ></Form.Control>\n          </Form.Group>\n        </Col>\n        <Col xs={12} sm={12} md={4} className='detailModal-body-right'>\n          <Row className='detailModal-body-right-content'>\n            <Form.Group as={Col}>\n              <Form.Label className='detailModal-date-container'>\n                <span className='detailModal-date-title'>\n                  Application Deadline\n                </span>\n                <span\n                  className={`clear-border detailModal-date-clear ${color}-clear-border`}\n                  onClick={(e) => {\n                    setDeadline('');\n                  }}\n                >\n                  Clear\n                </span>\n              </Form.Label>\n              <Form.Control\n                type='date'\n                value={deadline}\n                onChange={(e) => {\n                  setDeadline(e.target.value);\n                }}\n              ></Form.Control>\n            </Form.Group>\n            <Form.Group as={Col}>\n              <Form.Label className='detailModal-date-container'>\n                <span className='detailModal-date-title'>Applied on</span>\n                <span\n                  className={`clear-border detailModal-date-clear ${color}-clear-border`}\n                  onClick={(e) => {\n                    setApplicationDate('');\n                  }}\n                >\n                  Clear\n                </span>\n              </Form.Label>\n              <Form.Control\n                type='date'\n                value={applicationDate}\n                onChange={(e) => {\n                  setApplicationDate(e.target.value);\n                }}\n              ></Form.Control>\n            </Form.Group>\n            <Form.Group as={Col}>\n              <Form.Label className='detailModal-date-container'>\n                <span className='detailModal-date-title'>Interview Date</span>\n                <span\n                  className={`clear-border detailModal-date-clear ${color}-clear-border`}\n                  onClick={(e) => {\n                    setInterviewDate('');\n                  }}\n                >\n                  Clear\n                </span>\n              </Form.Label>\n              <Form.Control\n                type='date'\n                value={interviewDate}\n                onChange={(e) => {\n                  setInterviewDate(e.target.value);\n                }}\n              ></Form.Control>\n            </Form.Group>\n            <Form.Group as={Col}>\n              <Form.Label className='detailModal-date-container'>\n                <span className='detailModal-date-title'>Offer Recieved</span>\n                <span\n                  className={`clear-border detailModal-date-clear ${color}-clear-border`}\n                  onClick={(e) => {\n                    setOfferDate('');\n                  }}\n                >\n                  Clear\n                </span>\n              </Form.Label>\n              <Form.Control\n                autoComplete='off'\n                type='date'\n                value={offerDate}\n                onChange={(e) => {\n                  setOfferDate(e.target.value);\n                }}\n              ></Form.Control>\n            </Form.Group>\n            <Form.Group as={Col}>\n              <Form.Label className='detailModal-date-container'>\n                <span className='detailModal-date-title'>Accept Offer by</span>\n                <span\n                  className={`clear-border detailModal-date-clear ${color}-clear-border`}\n                  onClick={(e) => {\n                    setOfferAcceptanceDate('');\n                  }}\n                >\n                  Clear\n                </span>\n              </Form.Label>\n              <Form.Control\n                type='date'\n                value={offerAcceptanceDate}\n                onChange={(e) => {\n                  setOfferAcceptanceDate(e.target.value);\n                }}\n              ></Form.Control>\n            </Form.Group>\n          </Row>\n        </Col>\n        <Button\n          className='detail-modal-updateButton detailModal-updateButton-xs'\n          onClick={() => {\n            handleUpdateButtonClick();\n            modalRef.current.scrollIntoView({\n              behavior: 'smooth',\n              block: 'start',\n            });\n          }}\n        >\n          Update\n        </Button>\n      </Modal.Body>\n    </>\n  );\n};\n\nexport default DetailModal;\n","import { useState } from 'react';\nimport { Modal } from 'react-bootstrap';\nimport { useDispatch } from 'react-redux';\nimport NotesModal from '../NotesModal';\nimport DetailModal from '../DetailModal';\nimport '../../styles/appDetailsModal.css';\nimport { closeNoteEditors } from '../../actions/noteActions';\n\nconst AppDetailsModal = ({ app, show, handleClose }) => {\n  const dispatch = useDispatch();\n  const [tab, setTab] = useState('details');\n\n  const toNotes = () => {\n    setTab('notes');\n  };\n  const toDetails = () => {\n    setTab('details');\n  };\n\n  return (\n    <Modal\n      show={show}\n      onHide={() => {\n        handleClose();\n        dispatch(closeNoteEditors(app));\n        setTimeout(() => {\n          toDetails();\n        }, 500);\n      }}\n      centered\n      size='xl'\n      className='detailModal'\n    >\n      {tab === 'details' && (\n        <DetailModal\n          app={app}\n          handleClose={handleClose}\n          tab={tab}\n          toDetails={toDetails}\n          toNotes={toNotes}\n        />\n      )}\n      {tab === 'notes' && (\n        <NotesModal\n          app={app}\n          handleClose={handleClose}\n          tab={tab}\n          toDetails={toDetails}\n          toNotes={toNotes}\n        />\n      )}\n    </Modal>\n  );\n};\n\nexport default AppDetailsModal;\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Draggable } from 'react-beautiful-dnd';\nimport { deleteAppById } from '../actions/appActions';\nimport { UPDATE_APP_RESET } from '../constants/appConstants';\n\n//import FooterEvent from './FooterEvent';\nimport DeleteAppModal from './modals/DeleteAppModal';\nimport AppDetailsModal from './modals/AppDetailsModal';\nimport FavoriteButton from './FavoriteButton';\n\nimport '../styles/appCard.css';\nimport '../styles/colorPalette.css';\n\nconst AppCard = ({ app, favslist, index }) => {\n  const dispatch = useDispatch();\n  const { companyName, jobTitle, id, color } = app;\n\n  const [showDeleteModal, setShowDeleteModal] = useState(false);\n  const [showDetailsModal, setShowDetailsModal] = useState(false);\n  const [detailsModalDisabled, setDetailsModalDisabled] = useState(false);\n\n  const deleteHandler = (e) => {\n    dispatch(deleteAppById(app));\n    closeDeleteModal();\n  };\n\n  const openDeleteModal = () => {\n    setShowDeleteModal(true);\n  };\n\n  const closeDeleteModal = () => {\n    setShowDeleteModal(false);\n  };\n\n  const openDetailsModal = () => {\n    if (!detailsModalDisabled) {\n      setShowDetailsModal(true);\n    }\n  };\n\n  const closeDetailsModal = () => {\n    setShowDetailsModal(false);\n    dispatch({ type: UPDATE_APP_RESET });\n  };\n\n  const disableDetailsModal = () => {\n    setDetailsModalDisabled(true);\n  };\n\n  const enableDetailsModal = () => {\n    setDetailsModalDisabled(false);\n  };\n\n  return (\n    <>\n      <Draggable draggableId={id} index={index}>\n        {(provided) => (\n          <div\n            className={`app-card ${\n              color ? color : 'white'\n            } ${color}-card-border`}\n            ref={provided.innerRef}\n            {...provided.draggableProps}\n            {...provided.dragHandleProps}\n            onClick={openDetailsModal}\n          >\n            <div className='app-card-body'>\n              <div className='app-card-body-left'>\n                <span className='app-card-body-job'>{jobTitle}</span>\n                <span className='app-card-body-company'>{companyName}</span>\n              </div>\n              <div\n                className='app-card-body-right'\n                onMouseOver={disableDetailsModal}\n                onMouseLeave={enableDetailsModal}\n              >\n                <FavoriteButton app={app} color={app.color} />\n                <i\n                  className='far fa-trash-alt'\n                  onClick={openDeleteModal}\n                  title='Delete'\n                ></i>\n              </div>\n            </div>\n            {/*\n              <div className='app-card-footer'>\n              <div className='app-card-footer-content'>\n                <FooterEvent app={app} />\n              </div>\n            </div>\n            */}\n          </div>\n        )}\n      </Draggable>\n      <DeleteAppModal\n        show={showDeleteModal}\n        handleClose={closeDeleteModal}\n        deleteHandler={deleteHandler}\n        item={'job'}\n      />\n      <AppDetailsModal\n        app={app}\n        show={showDetailsModal}\n        handleClose={closeDetailsModal}\n      />\n    </>\n  );\n};\n\nexport default AppCard;\n","import React from 'react';\nimport { DragDropContext } from 'react-beautiful-dnd';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { USER_APPS_SUCCESS } from '../constants/appConstants';\n\nconst FavoritedDragDropContext = ({ children }) => {\n  const dispatch = useDispatch();\n  const userApps = useSelector((state) => state.userApps);\n  const { apps } = userApps;\n\n  const onDragEnd = async (result) => {\n    const { destination, source } = result;\n    if (!destination) {\n      return;\n    }\n    if (\n      destination.droppableId === source.droppableId &&\n      destination.index === source.index\n    ) {\n      return;\n    }\n\n    let appsCopy = apps;\n\n    if (source.index < destination.index) {\n      for (let key in appsCopy) {\n        appsCopy[key].forEach((e) => {\n          if (e.fav_index > source.index && e.fav_index <= destination.index) {\n            e.fav_index -= 1;\n            return;\n          }\n          if (e.fav_index === source.index) {\n            e.fav_index = destination.index;\n          }\n        });\n      }\n    } else {\n      for (let key in appsCopy) {\n        appsCopy[key].forEach((e) => {\n          if (e.fav_index < source.index && e.fav_index >= destination.index) {\n            e.fav_index += 1;\n            return;\n          }\n          if (e.fav_index === source.index) {\n            e.fav_index = destination.index;\n          }\n        });\n      }\n    }\n\n    localStorage.setItem('apps', JSON.stringify(appsCopy));\n    dispatch({ type: USER_APPS_SUCCESS, payload: appsCopy });\n  };\n\n  return <DragDropContext onDragEnd={onDragEnd}>{children}</DragDropContext>;\n};\n\nexport default FavoritedDragDropContext;\n","import React from 'react';\nimport { Modal } from 'react-bootstrap';\nimport { useSelector } from 'react-redux';\nimport { Droppable } from 'react-beautiful-dnd';\nimport AppCard from '../AppCard';\nimport FavoritedDragDropContext from '../FavoritedDragDropContext.jsx';\nimport '../../styles/favoritedAppsModal.css';\n\nconst FavoritedAppsModal = ({ show, onHide }) => {\n  const userApps = useSelector((state) => state.userApps);\n  const { apps } = userApps;\n  let favoritedApps = [];\n  for (let list in apps) {\n    favoritedApps = [...favoritedApps, ...apps[list]];\n  }\n\n  return (\n    <FavoritedDragDropContext>\n      <Modal\n        show={show}\n        onHide={onHide}\n        centered\n        size='xl'\n        className='favoritesModal'\n        onClick={() => {}}\n      >\n        <Modal.Body className='favoritesModal-body'>\n          <div className='list-container'>\n            <div className='list-header'>\n              <span className='list-header-icon'>\n                <i className='far fa-bookmark' />\n              </span>\n              <div className='list-header-main'>\n                <div className='list-header-main-title'>Favorited</div>\n                <div className='list-header-main-count'>\n                  {favoritedApps.filter((app) => app.favorited === true)\n                    .length === 0\n                    ? 0\n                    : favoritedApps.filter((app) => app.favorited === true)\n                        .length}{' '}\n                  {`job${\n                    favoritedApps.filter((app) => app.favorited === true)\n                      .length === 1\n                      ? ''\n                      : 's'\n                  }`}\n                </div>\n              </div>\n            </div>\n\n            <Droppable droppableId='favorited'>\n              {(provided) => (\n                <div\n                  className='list-body-main'\n                  ref={provided.innerRef}\n                  {...provided.droppableProps}\n                >\n                  {favoritedApps &&\n                    favoritedApps\n                      .filter((app) => app.favorited === true)\n                      .sort((a, b) => a.fav_index - b.fav_index)\n                      .map((app) => (\n                        <AppCard\n                          app={app}\n                          key={app.id}\n                          favslist\n                          index={app.fav_index}\n                        />\n                      ))}\n                  {provided.placeholder}\n                </div>\n              )}\n            </Droppable>\n          </div>\n        </Modal.Body>\n      </Modal>\n    </FavoritedDragDropContext>\n  );\n};\n\nexport default FavoritedAppsModal;\n","import React, { useState } from 'react';\nimport '../styles/openFavorites.css';\nimport FavoritedAppsModal from './modals/FavoritedAppsModal';\n\nconst OpenFavorites = () => {\n  const [showFavorites, setShowFavorites] = useState(false);\n\n  const handleClose = () => {\n    setShowFavorites(false);\n  };\n\n  return (\n    <>\n      <div\n        className='openFavorites header-icon'\n        title='Show Bookmarked'\n        onClick={(e) => {\n          e.stopPropagation();\n          setShowFavorites(true);\n        }}\n      >\n        <i className='fas fa-bookmark openFavorites-icon fa-lg' />\n      </div>\n      <FavoritedAppsModal show={showFavorites} onHide={handleClose} />\n    </>\n  );\n};\n\nexport default OpenFavorites;\n","import React from 'react';\nimport '../styles/logo.css';\n\nconst Logo = () => {\n  return (\n    <div className='logo-container'>\n      <div className='logo-block orange'></div>\n      <div className='logo-block off-white'></div>\n      <div className='logo-block purple'></div>\n    </div>\n  );\n};\n\nexport default Logo;\n","import React from 'react';\nimport { Container } from 'react-bootstrap';\nimport OpenFavorites from './OpenFavorites';\nimport '../styles/header.css';\nimport Logo from './Logo';\n\nconst Header = () => {\n  return (\n    <Container fluid className='header-background'>\n      <Container className='header-container' fluid>\n        <div className='header-left'>\n          <Logo />\n          <span className='header-logo-text'>JobTrackr</span>\n        </div>\n        <div className='header-center'></div>\n        <div className='header-right'>\n          <OpenFavorites />\n        </div>\n      </Container>\n    </Container>\n  );\n};\n\nexport default Header;\n","import React, { useState, useEffect, useCallback } from 'react';\nimport { Modal, Button, Form, Col, Row } from 'react-bootstrap';\nimport { useSelector, useDispatch } from 'react-redux';\nimport '../../styles/newAppModal.css';\nimport { addAppToList } from '../../actions/appActions';\nimport ColorSelect from '../ColorSelect';\nimport Message from '../Message';\nimport { APP_TOOL_TIP_ON, POST_APP_RESET } from '../../constants/appConstants';\nimport { noApps } from '../../helpers/NoApps';\n\nconst listValues = [\n  'Wishlist',\n  'Applied',\n  'Phone',\n  'On Site',\n  'Offer',\n  'Rejected',\n];\n\nconst NewAppModal = ({ show, handleClose, listValue }) => {\n  const dispatch = useDispatch();\n  const postApp = useSelector((state) => state.postApp);\n  const { success, error } = postApp;\n  const userApps = useSelector((state) => state.userApps);\n  const { apps } = userApps;\n\n  let today = new Date(Date());\n  let dd = String(today.getDate()).padStart(2, '0');\n  let mm = String(today.getMonth() + 1).padStart(2, '0');\n  let yyyy = today.getFullYear();\n\n  const [companyName, setCompanyName] = useState('');\n  const [jobTitle, setJobTitle] = useState('');\n  const [list, setList] = useState(listValue);\n  const [date, setDate] = useState(`${yyyy}-${mm}-${dd}`);\n  const [url, setUrl] = useState('');\n  const [salary, setSalary] = useState('');\n  const [location, setLocation] = useState('');\n  const [color, setColor] = useState('default');\n  const [description, setDescription] = useState('');\n  const [validationMessages, setValidationMessages] = useState([]);\n\n  const [showColorSelect, setShowColorSelect] = useState(false);\n\n  const resetForm = useCallback(() => {\n    setCompanyName('');\n    setJobTitle('');\n    setList(listValue);\n    setDate(`${yyyy}-${mm}-${dd}`);\n    setUrl('');\n    setSalary('');\n    setColor('default');\n    setDescription('');\n    dispatch({ type: POST_APP_RESET });\n    setValidationMessages([]);\n  }, [dd, dispatch, listValue, mm, yyyy]);\n\n  useEffect(() => {\n    if (success) {\n      handleClose();\n      setTimeout(resetForm, 1000);\n    }\n  }, [success, handleClose, resetForm]);\n\n  const validateForm = () => {\n    let arr = [];\n    if (companyName.length < 1) {\n      arr.push('Company name is a required field');\n    }\n    if (jobTitle.length < 1) {\n      arr.push('Job title is a required field');\n    }\n    if (arr.length < 1) {\n      setValidationMessages([]);\n      return true;\n    } else {\n      setValidationMessages(arr);\n      return false;\n    }\n  };\n\n  const submitHandler = async (e) => {\n    e.preventDefault();\n    setValidationMessages([]);\n    if (validateForm()) {\n      let application = {\n        companyName,\n        jobTitle,\n        list,\n        date,\n        url,\n        salary,\n        location,\n        color,\n        description,\n        notes: [],\n      };\n      dispatch(addAppToList(application));\n    }\n  };\n\n  const changeColorTo = (color) => {\n    setColor(color);\n  };\n\n  const openColorSelect = () => {\n    setShowColorSelect(true);\n  };\n\n  const closeColorSelect = () => {\n    setShowColorSelect(false);\n  };\n\n  const onHide = () => {\n    handleClose();\n    resetForm();\n    closeColorSelect();\n    if (noApps(apps)) {\n      dispatch({ type: APP_TOOL_TIP_ON });\n    }\n  };\n\n  return (\n    <Modal\n      show={show}\n      onHide={onHide}\n      centered\n      size='md'\n      className='newAppModal'\n      contentClassName='newAppCustomModal'\n      onClick={() => {\n        if (showColorSelect) {\n          closeColorSelect();\n        }\n      }}\n    >\n      <Modal.Header>\n        <Modal.Title>Track a new application</Modal.Title>\n        <div className='newAppModal-button-container'>\n          <Button\n            onClick={submitHandler}\n            variant='success'\n            className='modal-button'\n          >\n            Save\n          </Button>\n          <Button variant='dark' onClick={onHide} className='modal-button'>\n            Close\n          </Button>\n        </div>\n      </Modal.Header>\n      <Modal.Body>\n        {validationMessages.length > 0 && (\n          <Message variant='danger'>\n            <ul className='validation-list'>\n              {validationMessages.map((message, i) => (\n                <li key={i}>{message}</li>\n              ))}\n            </ul>\n          </Message>\n        )}\n        {success && (\n          <Message variant='success'>\n            Your application has been saved successfully\n          </Message>\n        )}\n        {error && <Message variant='danger'>{error}</Message>}\n        <Form as={Row} autoComplete='off'>\n          <Form.Group as={Col} controlId='companyName' xs={12} sm={6}>\n            <Form.Label>Company Name *</Form.Label>\n            <Form.Control\n              autoComplete='off'\n              placeholder='Company Name'\n              value={companyName}\n              onChange={(e) => {\n                setCompanyName(e.target.value);\n              }}\n            ></Form.Control>\n          </Form.Group>\n          <Form.Group controlId='jobTitle' as={Col} xs={12} sm={6}>\n            <Form.Label>Job Title *</Form.Label>\n            <Form.Control\n              autoComplete='off'\n              placeholder='Enter Job Title'\n              value={jobTitle}\n              onChange={(e) => {\n                setJobTitle(e.target.value);\n              }}\n            ></Form.Control>\n          </Form.Group>\n\n          <Form.Group controlId='list' as={Col} xs={12} sm={6}>\n            <Form.Label>List</Form.Label>\n            <Form.Control\n              as='select'\n              value={list}\n              onChange={(e) => {\n                setList(e.target.value);\n              }}\n            >\n              {listValues.map((item, i) => (\n                <option value={i + 1} key={i + 1}>\n                  {listValues[i]}\n                </option>\n              ))}\n            </Form.Control>\n          </Form.Group>\n\n          <Form.Group controlId='dateApplied' as={Col} xs={12} sm={6}>\n            <Form.Label>Date Applied</Form.Label>\n            <Form.Control\n              type='date'\n              value={date}\n              onChange={(e) => {\n                setDate(e.target.value);\n              }}\n            ></Form.Control>\n          </Form.Group>\n\n          <Form.Group controlId='url' as={Col} xs={12} sm={6}>\n            <Form.Label>URL</Form.Label>\n            <Form.Control\n              autoComplete='off'\n              placeholder='+  Add URL'\n              value={url}\n              onChange={(e) => {\n                setUrl(e.target.value);\n              }}\n            ></Form.Control>\n          </Form.Group>\n\n          <Form.Group controlId='salary' as={Col} xs={12} sm={6}>\n            <Form.Label>Salary</Form.Label>\n            <Form.Control\n              autoComplete='off'\n              placeholder='Salary'\n              value={salary}\n              onChange={(e) => {\n                setSalary(e.target.value);\n              }}\n            ></Form.Control>\n          </Form.Group>\n\n          <Form.Group controlId='location' as={Col} xs={12} sm={6}>\n            <Form.Label>Location</Form.Label>\n            <Form.Control\n              autoComplete='off'\n              placeholder='Location'\n              value={location}\n              onChange={(e) => {\n                setLocation(e.target.value);\n              }}\n            ></Form.Control>\n          </Form.Group>\n\n          <Form.Group controlId='color' as={Col} xs={12} sm={6}>\n            <Form.Label>Color</Form.Label>\n            <ColorSelect\n              color={color}\n              setColor={changeColorTo}\n              show={showColorSelect}\n              openColorSelect={openColorSelect}\n              closeColorSelect={closeColorSelect}\n            />\n          </Form.Group>\n\n          <Form.Group controlId='description' as={Col} xs={12}>\n            <Form.Label>Description</Form.Label>\n            <Form.Control\n              autoComplete='off'\n              placeholder='Job Description'\n              value={description}\n              as='textarea'\n              onChange={(e) => {\n                setDescription(e.target.value);\n              }}\n            ></Form.Control>\n          </Form.Group>\n        </Form>\n      </Modal.Body>\n    </Modal>\n  );\n};\n\nexport default NewAppModal;\n","import { useSelector } from 'react-redux';\nimport '../styles/tooltip.css';\n\nconst Tooltip = () => {\n  const toolTip = useSelector((state) => state.toolTip);\n\n  return toolTip && <div className={`tip`}>Start Here</div>;\n};\n\nexport default Tooltip;\n","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport '../styles/appList.css';\nimport AppCard from './AppCard';\nimport { Droppable } from 'react-beautiful-dnd';\nimport NewAppModal from './modals/NewAppModal';\nimport { Col } from 'react-bootstrap';\nimport Tooltip from '../components/Tooltip';\nimport { APP_TOOL_TIP_OFF } from '../constants/appConstants';\n\nconst content = {\n  wishlist: 'For later',\n  applied: 'Applied',\n  phone: 'Phone Interview',\n  'on site': 'On Site Interview',\n  offer: 'Offer Recieved',\n  rejected: 'Rejected',\n};\n\nconst AppList = ({ name, icon, listIntFromDB, displayToolTip }) => {\n  const [showModal, setShowModal] = useState(false);\n  const dispatch = useDispatch();\n  const userApps = useSelector((state) => state.userApps);\n  const { apps } = userApps;\n\n  const handleClose = () => {\n    setShowModal(false);\n  };\n\n  const showAppModal = () => {\n    dispatch({ type: APP_TOOL_TIP_OFF });\n    setShowModal(true);\n  };\n\n  return (\n    <>\n      <Col className='list-container' xs={6} sm={4} md={4} lg={4} xl={2}>\n        <div className='list-header'>\n          <div className='list-header-main'>\n            <div className='list-header-main-title'>\n              <span>\n                <i className={icon}></i>\n              </span>\n              {content[name]}\n            </div>\n            <div className='list-header-main-count'>\n              {apps && apps[name] && apps[name].length ? apps[name].length : 0}{' '}\n              job\n              {`${apps[name].length === 1 ? '' : 's'}`}\n            </div>\n          </div>\n        </div>\n        <div className='list-add' onClick={showAppModal}>\n          {displayToolTip && <Tooltip />}\n          <i className='fas fa-plus' />\n        </div>\n        <Droppable droppableId={name}>\n          {(provided) => (\n            <div\n              className='list-body-main'\n              ref={provided.innerRef}\n              {...provided.droppableProps}\n            >\n              {apps &&\n                apps[name] &&\n                apps[name].map((app, index) => (\n                  <AppCard app={app} key={app.id} index={index} />\n                ))}\n              {provided.placeholder}\n            </div>\n          )}\n        </Droppable>\n      </Col>\n      <NewAppModal\n        show={showModal}\n        handleClose={handleClose}\n        listValue={listIntFromDB}\n      />\n    </>\n  );\n};\n\nexport default AppList;\n","import React from 'react';\nimport { DragDropContext } from 'react-beautiful-dnd';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { USER_APPS_SUCCESS } from '../constants/appConstants';\nimport nameValuePairs from '../data/lookUpTables/listNameValuePairs';\n\nconst DragDropContextComponent = ({ children }) => {\n  const dispatch = useDispatch();\n\n  const userApps = useSelector((state) => state.userApps);\n  const { apps } = userApps;\n\n  const onDragEnd = async (result) => {\n    const { destination, source } = result;\n    if (!destination) return;\n\n    if (\n      destination.droppableId === source.droppableId &&\n      destination.index === source.index\n    )\n      return;\n\n    let appsCopy = apps;\n\n    if (destination.droppableId === source.droppableId) {\n      let listName = destination.droppableId;\n      let arr = appsCopy[listName];\n      let app = arr.splice(source.index, 1);\n      app = app[0];\n\n      if (source.index < destination.index) {\n        for (let i = source.index; i < destination.index; i++) {\n          arr[i].index = arr[i].index - 1;\n        }\n      } else {\n        for (let i = destination.index; i < source.index; i++) {\n          arr[i].index = arr[i].index + 1;\n        }\n      }\n      app.index = destination.index;\n      arr.splice(destination.index, 0, app);\n      appsCopy[listName] = arr;\n\n      localStorage.setItem('apps', JSON.stringify(appsCopy));\n      dispatch({ type: USER_APPS_SUCCESS, payload: appsCopy });\n      return;\n    }\n\n    if (destination.droppableId !== source.droppableId) {\n      let sourceArr = appsCopy[source.droppableId];\n      let destinationArr = appsCopy[destination.droppableId];\n      let app = sourceArr.splice(source.index, 1);\n      app = app[0];\n      app.index = destination.index;\n      app.list = nameValuePairs.indexOf(destination.droppableId);\n      for (let i = source.index; i < sourceArr.length; i++) {\n        sourceArr[i].index -= 1;\n      }\n      for (let i = destination.index; i < destinationArr.length; i++) {\n        destinationArr[i].index += 1;\n      }\n      destinationArr.splice(destination.index, 0, app);\n      appsCopy[source.droppableId] = sourceArr;\n      appsCopy[destination.droppableId] = destinationArr;\n      localStorage.setItem('apps', JSON.stringify(appsCopy));\n      dispatch({ type: USER_APPS_SUCCESS, payload: appsCopy });\n    }\n  };\n\n  return <DragDropContext onDragEnd={onDragEnd}>{children}</DragDropContext>;\n};\n\nexport default DragDropContextComponent;\n","import React from 'react';\nimport AppList from '../components/AppList';\nimport DragDropContextComponent from '../components/DragDropContextComponent';\n\nconst HomeScreen = ({ history }) => {\n  return (\n    <>\n      <DragDropContextComponent>\n        <AppList\n          name='wishlist'\n          icon='fas fa-calendar-alt'\n          listIntFromDB={1}\n          displayToolTip={true}\n        />\n        <AppList name='applied' icon='far fa-paper-plane' listIntFromDB={2} />\n        <AppList\n          name='phone'\n          icon='fas fa-phone-square-alt'\n          listIntFromDB={3}\n          displayToolTip={false}\n        />\n        <AppList\n          name='on site'\n          icon='fas fa-map-marker-alt'\n          listIntFromDB={4}\n          displayToolTip={false}\n        />\n        <AppList\n          name='offer'\n          icon='fas fa-award'\n          listIntFromDB={5}\n          displayToolTip={false}\n        />\n        <AppList\n          name='rejected'\n          icon='far fa-thumbs-down'\n          listIntFromDB={6}\n          displayToolTip={false}\n        />\n      </DragDropContextComponent>\n    </>\n  );\n};\n\nexport default HomeScreen;\n","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST';\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS';\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL';\nexport const USER_LOGOUT = 'USER_LOGOUT';\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST';\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS';\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL';\nexport const USER_REGISTER_RESET = 'USER_REGISTER_RESET';\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nimport { userLoginReducer, userRegisterReducer } from '../reducers/userReducer';\nimport {\n  userAppsReducer,\n  postAppReducer,\n  updateAppReducer,\n  toolTipReducer,\n} from '../reducers/appReducer';\nimport { notePostReducer } from '../reducers/noteReducer';\nimport { noApps } from '../helpers/NoApps.js';\n\nconst reducer = combineReducers({\n  userApps: userAppsReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  postApp: postAppReducer,\n  updateApp: updateAppReducer,\n  notePost: notePostReducer,\n  toolTip: toolTipReducer,\n});\n\nconst userInfoFromStorage = sessionStorage.getItem('userInfo')\n  ? JSON.parse(sessionStorage.getItem('userInfo'))\n  : null;\n\nconst userAppsFromStorage = localStorage.getItem('apps')\n  ? JSON.parse(localStorage.getItem('apps'))\n  : {\n      wishlist: [],\n      applied: [],\n      phone: [],\n      'on site': [],\n      offer: [],\n      rejected: [],\n    };\n\nconst initialState = {\n  userLogin: { userInfo: userInfoFromStorage },\n  userApps: {\n    apps: userAppsFromStorage,\n    displayToolTip: noApps(userAppsFromStorage),\n  },\n  toolTip: noApps(userAppsFromStorage),\n};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  reducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n","import {\n  USER_APPS_REQUEST,\n  USER_APPS_SUCCESS,\n  USER_APPS_FAIL,\n  USER_APPS_RESET,\n  POST_APP_REQUEST,\n  POST_APP_SUCCESS,\n  POST_APP_FAIL,\n  POST_APP_RESET,\n  UPDATE_APP_REQUEST,\n  UPDATE_APP_SUCCESS,\n  UPDATE_APP_FAIL,\n  UPDATE_APP_RESET,\n  APP_TOOL_TIP_ON,\n  APP_TOOL_TIP_OFF,\n} from '../constants/appConstants';\n\nexport const userAppsReducer = (\n  state = {\n    apps: {\n      wishlist: [],\n      applied: [],\n      phone: [],\n      'on site': [],\n      offer: [],\n      rejected: [],\n    },\n  },\n  action\n) => {\n  switch (action.type) {\n    case USER_APPS_REQUEST:\n      return { ...state, loading: true };\n    case USER_APPS_SUCCESS:\n      return { loading: false, apps: action.payload, success: true };\n    case USER_APPS_FAIL:\n      return { ...state, loading: false, error: action.payload };\n    case USER_APPS_RESET:\n      return {\n        apps: {\n          wishlist: [],\n          applied: [],\n          phone: [],\n          'on site': [],\n          offer: [],\n          rejected: [],\n        },\n      };\n    default:\n      return { ...state };\n  }\n};\n\nexport const postAppReducer = (state = {}, action) => {\n  switch (action.type) {\n    case POST_APP_REQUEST:\n      return { loading: true };\n    case POST_APP_SUCCESS:\n      return { loading: false, success: true };\n    case POST_APP_FAIL:\n      return { loading: false, error: action.payload };\n    case POST_APP_RESET:\n      return {};\n    default:\n      return { ...state };\n  }\n};\n\nexport const updateAppReducer = (state = {}, action) => {\n  switch (action.type) {\n    case UPDATE_APP_REQUEST:\n      return { loading: true };\n    case UPDATE_APP_SUCCESS:\n      return { loading: false, success: true };\n    case UPDATE_APP_FAIL:\n      return { loading: false, error: action.payload };\n    case UPDATE_APP_RESET:\n      return {};\n    default:\n      return state;\n  }\n};\n\nexport const toolTipReducer = (state = {}, action) => {\n  switch (action.type) {\n    case APP_TOOL_TIP_OFF:\n      return false;\n    case APP_TOOL_TIP_ON:\n      return true;\n    default:\n      return state;\n  }\n};\n","import {\n  USER_LOGIN_REQUEST,\n  USER_LOGIN_SUCCESS,\n  USER_LOGIN_FAIL,\n  USER_LOGOUT,\n  USER_REGISTER_REQUEST,\n  USER_REGISTER_SUCCESS,\n  USER_REGISTER_FAIL,\n  USER_REGISTER_RESET,\n} from '../constants/userConstants.js';\n\nexport const userLoginReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_LOGIN_REQUEST:\n      return { loading: true };\n    case USER_LOGIN_SUCCESS:\n      return { loading: false, userInfo: action.payload };\n    case USER_LOGIN_FAIL:\n      return { loading: false, error: action.payload };\n    case USER_LOGOUT:\n      return {};\n    default:\n      return state;\n  }\n};\n\nexport const userRegisterReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_REGISTER_REQUEST:\n      return { loading: true };\n    //after register returns success dispatch userLoginReducer with returned successfully created user object or throw error\n    case USER_REGISTER_SUCCESS:\n      return { loading: false, success: true };\n    case USER_REGISTER_FAIL:\n      return { loading: false, error: action.payload };\n    case USER_REGISTER_RESET:\n      return {};\n    default:\n      return state;\n  }\n};\n","import {\n  POST_NOTE_REQUEST,\n  POST_NOTE_SUCCESS,\n  POST_NOTE_FAIL,\n  POST_NOTE_RESET,\n} from '../constants/noteConstants';\n\nexport const notePostReducer = (state, action) => {\n  switch (action.type) {\n    case POST_NOTE_REQUEST:\n      return { loading: true };\n    case POST_NOTE_SUCCESS:\n      return { loading: false, success: true };\n    case POST_NOTE_FAIL:\n      return { loading: false, error: action.payload };\n    case POST_NOTE_RESET:\n      return {};\n    default:\n      return { ...state };\n  }\n};\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport Header from './components/Header';\nimport HomeScreen from './screens/HomeScreen';\nimport store from './stores/store.js';\nimport './styles/app.css';\nimport { Row } from 'react-bootstrap';\n\nconst App = () => {\n  return (\n    <Provider store={store}>\n      <Header />\n      <main className='app-main'>\n        <Row className='app-main-container'>\n          <HomeScreen />\n        </Row>\n      </main>\n    </Provider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.jsx';\nimport './bootstrap.min.css';\nimport './styles/index.css';\nimport './styles/customBootstrap.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}
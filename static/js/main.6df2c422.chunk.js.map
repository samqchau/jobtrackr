{"version":3,"sources":["constants/appConstants.js","data/lookUpTables/listNameValuePairs.js","helpers/NoApps.js","actions/appActions.js","components/modals/DeleteAppModal.jsx","components/ListSelect.jsx","components/FavoriteButton.jsx","constants/noteConstants.js","actions/noteActions.js","components/DetailModalNav.jsx","components/Message.jsx","components/AppNote.jsx","components/NotesModal.jsx","helpers/dateHelpers.js","styles/colorPallet.js","components/ColorSelect.jsx","components/DetailModal.jsx","components/modals/AppDetailsModal.jsx","components/AppCard.jsx","components/FavoritedDragDropContext.jsx","components/modals/FavoritedAppsModal.jsx","components/OpenFavorites.jsx","components/Logo.jsx","components/Header.jsx","components/modals/NewAppModal.jsx","components/Tooltip.jsx","components/AppList.jsx","components/DragDropContextComponent.jsx","screens/HomeScreen.jsx","constants/userConstants.js","stores/store.js","reducers/appReducer.js","reducers/userReducer.js","reducers/noteReducer.js","App.jsx","index.js"],"names":["USER_APPS_REQUEST","USER_APPS_SUCCESS","USER_APPS_FAIL","USER_APPS_RESET","POST_APP_REQUEST","POST_APP_SUCCESS","POST_APP_FAIL","POST_APP_RESET","UPDATE_APP_REQUEST","UPDATE_APP_SUCCESS","UPDATE_APP_FAIL","UPDATE_APP_RESET","APP_TOOL_TIP_OFF","APP_TOOL_TIP_ON","nameValuePairs","noApps","apps","key","length","addAppToList","application","dispatch","getState","a","type","userApps","id","uuid","list","listNameValuePairs","appsCopy","forEach","app","index","sort","b","unshift","localStorage","setItem","JSON","stringify","payload","error","response","data","message","DeleteAppModal","show","handleClose","deleteHandler","item","Modal","onHide","centered","size","className","onClick","e","stopPropagation","Body","Button","ListSelect","close","useDispatch","useSelector","state","handleClick","i","sourceIndex","sourceList","sourceListName","destinationListName","destinationList","sourceArr","destinationArr","updatedApp","splice","Row","map","Col","color","xs","FavoriteButton","demoButton","setApps","favorited","fav_index","arr","indexOf","favoriteAppById","title","POST_NOTE_REQUEST","POST_NOTE_SUCCESS","POST_NOTE_FAIL","closeNoteEditors","listName","findIndex","notes","n","editing","DetailModalNav","toDetails","toNotes","tab","messageStyle","width","Message","variant","children","style","Alert","AppNote","note","closeCreatingNote","clearNoteContent","useState","content","setContent","showDeleteModal","setShowDeleteModal","errorMessage","setErrorMessage","closeDeleteModal","handleUpdateClick","trim","updated_on","Date","dd","String","getDate","padStart","mm","getMonth","yyyy","getFullYear","noteIndex","updateNoteById","created_on","toggleEditingNote","Form","Control","as","value","onChange","target","placeholder","margin","padding","height","display","alignItems","paddingTop","paddingLeft","borderRadius","marginRight","noteId","filter","deleteNoteById","NotesModal","creatingNote","setCreatingNote","showListSelect","setShowListSelect","noteContent","setNoteContent","notesModalBodyRef","useRef","closeListSelect","handleSaveClick","saveNote","Header","companyName","jobTitle","ref","borderBottom","Group","current","scroll","top","behavior","trimDate","date","slice","colorsArr","ColorSelect","setColor","openColorSelect","closeColorSelect","clr","sm","md","DetailModal","updateApp","success","company","setCompany","setJobTitle","url","setUrl","salary","setSalary","location","setLocation","description","setDescription","validationMessages","setValidationMessages","deadline","setDeadline","applicationDate","setApplicationDate","interview","interviewDate","setInterviewDate","offer","offerDate","setOfferDate","offer_acceptance","offerAcceptanceDate","setOfferAcceptanceDate","showColorSelect","setShowColorSelect","modalRef","handleUpdateButtonClick","push","validateForm","setTimeout","updateAppById","autoComplete","lg","Label","htmlFor","scrollIntoView","block","AppDetailsModal","setTab","AppCard","favslist","showDetailsModal","setShowDetailsModal","detailsModalDisabled","setDetailsModalDisabled","openDeleteModal","openDetailsModal","disableDetailsModal","enableDetailsModal","draggableId","provided","innerRef","draggableProps","dragHandleProps","onMouseOver","onMouseLeave","appsArr","deleteAppById","FavoritedDragDropContext","onDragEnd","result","destination","source","droppableId","FavoritedAppsModal","favoritedApps","droppableProps","OpenFavorites","showFavorites","setShowFavorites","Logo","Container","fluid","href","rel","listValues","NewAppModal","listValue","postApp","today","setCompanyName","setList","setDate","resetForm","useCallback","useEffect","submitHandler","preventDefault","contentClassName","Title","controlId","Tooltip","toolTip","wishlist","applied","phone","rejected","AppList","name","icon","listIntFromDB","displayToolTip","showModal","setShowModal","xl","DragDropContextComponent","HomeScreen","history","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_REGISTER_RESET","reducer","combineReducers","action","loading","userLogin","userInfo","userRegister","notePost","userInfoFromStorage","sessionStorage","getItem","parse","userAppsFromStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6df2c422.chunk.js","sourcesContent":["export const USER_APPS_REQUEST = 'USER_APPS_REQUEST';\nexport const USER_APPS_SUCCESS = 'USER_APPS_SUCCESS';\nexport const USER_APPS_FAIL = 'USER_APPS_FAIL';\nexport const USER_APPS_RESET = 'USER_APPS_RESET';\n\nexport const POST_APP_REQUEST = 'POST_APP_REQUEST';\nexport const POST_APP_SUCCESS = 'POST_APP_SUCCESS';\nexport const POST_APP_FAIL = 'POST_APP_FAIL';\nexport const POST_APP_RESET = 'POST_APP_RESET';\n\nexport const UPDATE_APP_REQUEST = 'UPDATE_APP_REQUEST';\nexport const UPDATE_APP_SUCCESS = 'UPDATE_APP_SUCCESS';\nexport const UPDATE_APP_FAIL = 'UPDATE_APP_FAIL';\nexport const UPDATE_APP_RESET = 'UPDATE_APP_RESET';\n\nexport const APP_TOOL_TIP_OFF = 'APP_TOOL_TIP_OFF';\nexport const APP_TOOL_TIP_ON = 'APP_TOOL_TIP_ON';\n","let nameValuePairs = [\n  '',\n  'wishlist',\n  'applied',\n  'phone',\n  'on site',\n  'offer',\n  'rejected',\n];\n\nexport default nameValuePairs;\n","export const noApps = (apps) => {\n  for (let key in apps) {\n    if (apps[key].length !== 0) return false;\n  }\n  return true;\n};\n","import {\n  USER_APPS_SUCCESS,\n  POST_APP_REQUEST,\n  POST_APP_SUCCESS,\n  POST_APP_FAIL,\n  UPDATE_APP_REQUEST,\n  UPDATE_APP_SUCCESS,\n  UPDATE_APP_FAIL,\n  UPDATE_APP_RESET,\n  APP_TOOL_TIP_ON,\n} from '../constants/appConstants';\nimport listNameValuePairs from '../data/lookUpTables/listNameValuePairs';\nimport { v4 as uuid } from 'uuid';\nimport { noApps } from '../helpers/NoApps';\n\nexport const addAppToList = (application) => async (dispatch, getState) => {\n  dispatch({ type: POST_APP_REQUEST });\n  try {\n    const {\n      userApps: { apps },\n    } = getState();\n    application.id = uuid();\n    let list = listNameValuePairs[application.list];\n\n    let appsCopy = apps;\n\n    appsCopy[list].forEach((app) => {\n      app.index++;\n    });\n    appsCopy[list].sort((a, b) => a.index - b.index);\n    appsCopy[list].unshift(application);\n    localStorage.setItem('apps', JSON.stringify(appsCopy));\n    dispatch({ type: USER_APPS_SUCCESS, payload: appsCopy });\n    dispatch({ type: POST_APP_SUCCESS });\n  } catch (error) {\n    dispatch({\n      type: POST_APP_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const deleteAppById = (app) => async (dispatch, getState) => {\n  const {\n    userApps: { apps },\n  } = getState();\n  const { id, list, index, fav_index, favorited } = app;\n\n  let appsCopy = apps;\n\n  if (favorited) {\n    for (let key in appsCopy) {\n      appsCopy[key].forEach((app) => {\n        if (app.fav_index > fav_index) {\n          app.fav_index -= 1;\n        }\n      });\n    }\n  }\n\n  let listName = listNameValuePairs[list];\n  let appsArr = appsCopy[listName];\n\n  appsArr.forEach((app) => {\n    if (app.index > index) app.index -= 1;\n  });\n\n  appsArr = appsArr.filter((app) => app.id !== id);\n  appsCopy[listName] = appsArr;\n  localStorage.setItem('apps', JSON.stringify(appsCopy));\n  dispatch({ type: USER_APPS_SUCCESS, payload: appsCopy });\n  if (noApps(appsCopy)) {\n    dispatch({ type: APP_TOOL_TIP_ON });\n  }\n};\nexport const updateAppById = (app) => async (dispatch, getState) => {\n  try {\n    dispatch({ type: UPDATE_APP_REQUEST });\n    let {\n      userApps: { apps },\n    } = getState();\n    let list = listNameValuePairs[app.list];\n    let appsCopy = apps;\n    let arr = apps[list];\n    arr[arr.indexOf((e) => (e.id = app.id))] = app;\n    appsCopy[list] = arr;\n    localStorage.setItem('apps', JSON.stringify(appsCopy));\n    dispatch({ type: USER_APPS_SUCCESS, payload: appsCopy });\n    dispatch({ type: UPDATE_APP_SUCCESS });\n    setTimeout(() => {\n      dispatch({ type: UPDATE_APP_RESET });\n    }, 1500);\n  } catch (error) {\n    dispatch({\n      type: UPDATE_APP_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const favoriteAppById = (app) => async (dispatch, getState) => {\n  let {\n    userApps: { apps },\n  } = getState();\n\n  if (app.favorited) {\n    for (let key in apps) {\n      apps[key].forEach((e) => {\n        if (e.fav_index >= 0) {\n          e.fav_index += 1;\n        }\n      });\n    }\n    app.fav_index = 0;\n  } else {\n    for (let key in apps) {\n      apps[key].forEach((e) => {\n        if (e.fav_index > app.fav_index) {\n          e.fav_index -= 1;\n        }\n      });\n    }\n    app.fav_index = null;\n  }\n\n  let list = listNameValuePairs[app.list];\n  let appsCopy = apps;\n  let arr = apps[list];\n  arr[arr.indexOf((e) => (e.id = app.id))] = app;\n  appsCopy[list] = arr;\n  localStorage.setItem('apps', JSON.stringify(appsCopy));\n  dispatch({ type: USER_APPS_SUCCESS, payload: appsCopy });\n};\n","import React from 'react';\nimport { Modal, Button } from 'react-bootstrap';\nimport '../../styles/deleteModal.css';\n\nconst DeleteAppModal = ({ show, handleClose, deleteHandler, item }) => {\n  return (\n    <Modal\n      show={show}\n      onHide={handleClose}\n      centered\n      size='md'\n      className='deleteModal'\n      onClick={(e) => {\n        e.stopPropagation();\n      }}\n    >\n      <Modal.Body className='deleteModal-body'>\n        <h4>Delete {`${item}`}</h4>\n        <p>{`Are you sure you want to delete this ${item}?`}</p>\n        <div className='deleteModal-body-button-container'>\n          <Button\n            className='modal-button deleteModal-delete-button default-accent-border'\n            onClick={(e) => {\n              e.stopPropagation();\n              deleteHandler();\n            }}\n          >\n            Delete\n          </Button>\n          <Button\n            className='modal-button deleteModal-cancel-button default-accent-border'\n            onClick={(e) => {\n              e.stopPropagation();\n              handleClose();\n            }}\n          >\n            Cancel\n          </Button>\n        </div>\n      </Modal.Body>\n    </Modal>\n  );\n};\n\nexport default DeleteAppModal;\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Row, Col } from 'react-bootstrap';\nimport '../styles/listSelect.css';\nimport nameValuePairs from '../data/lookUpTables/listNameValuePairs';\nimport { USER_APPS_SUCCESS } from '../constants/appConstants';\n\nconst ListSelect = ({ close, app }) => {\n  const dispatch = useDispatch();\n  const userApps = useSelector((state) => state.userApps);\n  const { apps } = userApps;\n\n  const handleClick = async (e, i) => {\n    e.stopPropagation();\n\n    if (i !== app.list) {\n      let sourceIndex = app.index;\n      let destinationIndex = 0;\n      let sourceList = app.list;\n      let sourceListName = nameValuePairs[sourceList];\n      let destinationList = i;\n      let destinationListName = nameValuePairs[destinationList];\n\n      let appsCopy = apps;\n      let sourceArr = appsCopy[sourceListName];\n      let destinationArr = appsCopy[destinationListName];\n      let updatedApp = sourceArr.splice(sourceIndex, 1);\n      updatedApp = updatedApp[0];\n      updatedApp.index = 0;\n      updatedApp.list = destinationList;\n      for (let i = sourceIndex; i < sourceArr.length; i++) {\n        sourceArr[i].index -= 1;\n      }\n      for (let i = destinationIndex; i < destinationArr.length; i++) {\n        destinationArr[i].index += 1;\n      }\n      destinationArr.unshift(updatedApp);\n      appsCopy[sourceListName] = sourceArr;\n      appsCopy[destinationListName] = destinationArr;\n      localStorage.setItem('apps', JSON.stringify(appsCopy));\n      dispatch({ type: USER_APPS_SUCCESS, payload: appsCopy });\n      close();\n    }\n  };\n\n  return (\n    <Row className='list-select-container'>\n      {nameValuePairs.map(\n        (list, i) =>\n          list && (\n            <Col\n              className={`list-select-item noselect ${\n                app.list === i ? 'current-active-list' : ''\n              } modal-nav-link ${app.color} ${app.color}-card-border`}\n              key={i}\n              xs={12}\n              onClick={(e) => {\n                handleClick(e, i);\n              }}\n            >\n              {list}\n            </Col>\n          )\n      )}\n    </Row>\n  );\n};\n\nexport default ListSelect;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport '../styles/favoriteButton.css';\nimport { favoriteAppById } from '../actions/appActions';\n\nconst FavoriteButton = ({ app, color, demoButton, setApps }) => {\n  const dispatch = useDispatch();\n  let { favorited } = app;\n\n  const handleClick = (e) => {\n    e.stopPropagation();\n    let updatedApp = app;\n    updatedApp.favorited = !favorited;\n    if (demoButton) {\n      setApps([app]);\n    }\n    if (!demoButton) {\n      dispatch(favoriteAppById(updatedApp));\n    }\n  };\n\n  return (\n    <i\n      className={` ${`${\n        favorited ? 'fas' : 'far'\n      } fa-bookmark`} favoriteButton ${color && color}`}\n      onClick={handleClick}\n      title='Favorite'\n    ></i>\n  );\n};\n\nexport default FavoriteButton;\n","export const POST_NOTE_REQUEST = 'POST_NOTE_REQUEST';\nexport const POST_NOTE_SUCCESS = 'POST_NOTE_SUCCESS';\nexport const POST_NOTE_FAIL = 'POST_NOTE_FAIL';\nexport const POST_NOTE_RESET = 'POST_NOTE_RESET';\n","import { v4 as uuid } from 'uuid';\nimport {\n  POST_NOTE_REQUEST,\n  POST_NOTE_SUCCESS,\n  POST_NOTE_FAIL,\n} from '../constants/noteConstants';\nimport { USER_APPS_SUCCESS } from '../constants/appConstants';\nimport nameValuePairs from '../data/lookUpTables/listNameValuePairs';\n//DONE\nexport const saveNote = (app, content) => async (dispatch, getState) => {\n  try {\n    dispatch({ type: POST_NOTE_REQUEST });\n    const {\n      userApps: { apps },\n    } = getState();\n    let created_on = new Date();\n    var dd = String(created_on.getDate()).padStart(2, '0');\n    var mm = String(created_on.getMonth() + 1).padStart(2, '0'); //January is 0!\n    var yyyy = created_on.getFullYear();\n    created_on = mm + '/' + dd + '/' + yyyy;\n\n    let note = {\n      content,\n      id: uuid(),\n      created_on,\n      editing: false,\n    };\n    let appsCopy = apps;\n    let listName = nameValuePairs[app.list];\n    let arr = appsCopy[listName];\n    let index = arr.findIndex((e) => e.id === app.id);\n    arr[index].notes.unshift(note);\n    appsCopy[listName] = arr;\n    localStorage.setItem('apps', JSON.stringify(appsCopy));\n    dispatch({ type: USER_APPS_SUCCESS, payload: appsCopy });\n    dispatch({ type: POST_NOTE_SUCCESS });\n  } catch (error) {\n    dispatch({ type: POST_NOTE_FAIL });\n  }\n};\n\n//DONE\nexport const deleteNoteById = (app, noteId) => async (dispatch, getState) => {\n  const {\n    userApps: { apps },\n  } = getState();\n\n  let appsCopy = apps;\n  let listName = nameValuePairs[app.list];\n  let arr = appsCopy[listName];\n  let index = arr.findIndex((e) => e.id === app.id);\n  arr[index].notes = arr[index].notes.filter((note) => note.id !== noteId);\n  appsCopy[listName] = arr;\n  localStorage.setItem('apps', JSON.stringify(appsCopy));\n  dispatch({ type: USER_APPS_SUCCESS, payload: appsCopy });\n};\n\n//DONE\nexport const updateNoteById =\n  (app, note, content) => async (dispatch, getState) => {\n    const {\n      userApps: { apps },\n    } = getState();\n    let appsCopy = apps;\n    let listName = nameValuePairs[app.list];\n    let arr = appsCopy[listName];\n    let updated_on = new Date();\n    var dd = String(updated_on.getDate()).padStart(2, '0');\n    var mm = String(updated_on.getMonth() + 1).padStart(2, '0'); //January is 0!\n    var yyyy = updated_on.getFullYear();\n    updated_on = mm + '/' + dd + '/' + yyyy;\n\n    let index = arr.findIndex((e) => e.id === app.id);\n    let noteIndex = arr[index].notes.findIndex((e) => e.id === note.id);\n    arr[index].notes[noteIndex] = {\n      ...note,\n      content,\n      updated_on,\n      editing: false,\n    };\n    appsCopy[listName] = arr;\n    localStorage.setItem('apps', JSON.stringify(appsCopy));\n    dispatch({ type: USER_APPS_SUCCESS, payload: appsCopy });\n  };\n\nexport const toggleEditingNote = (app, note) => (dispatch, getState) => {\n  const {\n    userApps: { apps },\n  } = getState();\n  let appsCopy = apps;\n  let listName = nameValuePairs[app.list];\n  let arr = appsCopy[listName];\n  let index = arr.findIndex((e) => e.id === app.id);\n  let noteIndex = arr[index].notes.findIndex((e) => e.id === note.id);\n  arr[index].notes[noteIndex] = {\n    ...note,\n    editing: !note.editing,\n  };\n  appsCopy[listName] = arr;\n  localStorage.setItem('apps', JSON.stringify(appsCopy));\n  dispatch({ type: USER_APPS_SUCCESS, payload: appsCopy });\n};\n\nexport const closeNoteEditors = (app) => (dispatch, getState) => {\n  const {\n    userApps: { apps },\n  } = getState();\n  let appsCopy = apps;\n  let listName = nameValuePairs[app.list];\n  let arr = apps[listName];\n  let index = arr.findIndex((e) => e.id === app.id);\n  appsCopy[listName][index].notes.forEach((n) => (n.editing = false));\n  localStorage.setItem('apps', JSON.stringify(appsCopy));\n  dispatch({ type: USER_APPS_SUCCESS, payload: appsCopy });\n};\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { UPDATE_APP_RESET } from '../constants/appConstants';\nimport { closeNoteEditors } from '../actions/noteActions';\nimport '../styles/modalNav.css';\n\nconst DetailModalNav = ({ app, color, toDetails, toNotes, tab }) => {\n  const dispatch = useDispatch();\n\n  return (\n    <div className='modal-nav-container'>\n      <div\n        onClick={(e) => {\n          e.stopPropagation();\n          dispatch(closeNoteEditors(app));\n          toDetails();\n        }}\n        className={`modal-nav-link ${\n          tab === 'details' ? 'modal-nav-link-active' : ''\n        } ${color ? color : 'default'} ${\n          color ? color : 'default'\n        }-accent-border`}\n      >\n        Details\n      </div>\n      <div\n        className={`modal-nav-link ${\n          tab === 'notes' ? 'modal-nav-link-active' : ''\n        } ${color ? color : 'default'} ${\n          color ? color : 'default'\n        }-accent-border`}\n        onClick={(e) => {\n          e.stopPropagation();\n          dispatch({ type: UPDATE_APP_RESET });\n          toNotes();\n        }}\n      >\n        Notes\n      </div>\n    </div>\n  );\n};\n\nexport default DetailModalNav;\n","import React from 'react';\nimport { Alert } from 'react-bootstrap';\n\nconst messageStyle = {\n  width: '100%',\n};\n\nconst Message = ({ variant, children, style, className }) => {\n  return (\n    <Alert\n      variant={variant}\n      style={{ ...messageStyle, ...style }}\n      className={className}\n    >\n      {children}\n    </Alert>\n  );\n};\n\nexport default Message;\n","import React, { useState } from 'react';\nimport { Button, Form } from 'react-bootstrap';\nimport '../styles/note.css';\nimport DeleteAppModal from './modals/DeleteAppModal';\nimport {\n  deleteNoteById,\n  updateNoteById,\n  toggleEditingNote,\n  closeNoteEditors,\n} from '../actions/noteActions';\nimport { useDispatch } from 'react-redux';\nimport Message from './Message';\n\nconst AppNote = ({ note, app, closeCreatingNote, clearNoteContent }) => {\n  const dispatch = useDispatch();\n  const [content, setContent] = useState(note ? note.content : '');\n  const [showDeleteModal, setShowDeleteModal] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n\n  const closeDeleteModal = () => {\n    setShowDeleteModal(false);\n  };\n\n  const openDeleteModal = () => {\n    setShowDeleteModal(true);\n  };\n\n  const deleteHandler = () => {\n    dispatch(deleteNoteById(app, note.id));\n    closeDeleteModal();\n  };\n\n  const handleUpdateClick = () => {\n    setErrorMessage('');\n    if (content.trim().length !== 0 && content !== note.content) {\n      dispatch(updateNoteById(app, note, content));\n    } else if (note.content === content) {\n      setErrorMessage('Please change content to something new.');\n    } else {\n      setErrorMessage('Empty notes cannot be saved');\n    }\n  };\n\n  return (\n    note && (\n      <>\n        <div className='note'>\n          <div className='note-header'>\n            <div className='note-header-date'>\n              {note.updated_on ? note.updated_on : note.created_on}\n            </div>\n            <div className='note-header-border'></div>\n            <div className='note-header-buttons'>\n              <i\n                className={`${note.editing ? 'fas fa-times' : 'far fa-edit'}`}\n                title={`${!note.editing ? 'Edit' : 'Close'}`}\n                onClick={(e) => {\n                  e.stopPropagation();\n                  clearNoteContent();\n                  closeCreatingNote();\n                  if (!note.editing) {\n                    dispatch(closeNoteEditors(app));\n                  }\n                  dispatch(toggleEditingNote(app, note));\n                  setContent(note.content);\n                }}\n              />\n              <i\n                className='far fa-trash-alt'\n                title='Delete'\n                onClick={() => {\n                  openDeleteModal();\n                }}\n              ></i>\n            </div>\n          </div>\n          <div className='note-body'>\n            {note.editing ? (\n              <Form>\n                <Form.Control\n                  as='textarea'\n                  className='noteupdate-textarea'\n                  value={content}\n                  onChange={(e) => {\n                    setContent(e.target.value);\n                  }}\n                  placeholder='Update note...'\n                ></Form.Control>\n                <div className='noteupdateform-update-button'>\n                  {errorMessage && (\n                    <Message\n                      variant='danger'\n                      style={{\n                        margin: '0px',\n                        padding: '0px',\n                        height: '30px',\n                        display: 'flex',\n                        alignItems: 'center',\n                        paddingTop: '3px',\n                        paddingLeft: '23px',\n                        borderRadius: '5px',\n                        width: '561px',\n                      }}\n                    >\n                      {errorMessage}\n                    </Message>\n                  )}\n                  <Button\n                    className='modal-button detail-modal-updateButton'\n                    style={{ marginRight: '5px' }}\n                    onClick={(e) => {\n                      e.stopPropagation();\n                      handleUpdateClick();\n                    }}\n                  >\n                    Update\n                  </Button>\n                </div>\n              </Form>\n            ) : (\n              <div className='note-body-content'>{note.content}</div>\n            )}\n          </div>\n        </div>\n        <DeleteAppModal\n          show={showDeleteModal}\n          handleClose={closeDeleteModal}\n          deleteHandler={deleteHandler}\n          item='note'\n        />\n      </>\n    )\n  );\n};\n\nexport default AppNote;\n","import React, { useState, useRef } from 'react';\nimport { Modal, Row, Button, Form } from 'react-bootstrap';\nimport ListSelect from './ListSelect';\nimport FavoriteButton from './FavoriteButton';\nimport '../styles/notesModal.css';\nimport DetailModalNav from './DetailModalNav';\nimport { useDispatch } from 'react-redux';\nimport AppNote from './AppNote';\nimport { saveNote, closeNoteEditors } from '../actions/noteActions';\nimport Message from './Message';\n\nconst NotesModal = ({ app, handleClose, tab, toDetails, toNotes }) => {\n  const dispatch = useDispatch();\n  const [errorMessage, setErrorMessage] = useState('Save a new note');\n  const [creatingNote, setCreatingNote] = useState(app.notes.length === 0);\n  const [showListSelect, setShowListSelect] = useState(false);\n  const [noteContent, setNoteContent] = useState('');\n\n  const notesModalBodyRef = useRef();\n\n  const openListSelect = () => {\n    setShowListSelect(true);\n  };\n\n  const closeListSelect = () => {\n    setShowListSelect(false);\n  };\n\n  const closeCreatingNote = () => {\n    setCreatingNote(false);\n  };\n\n  const handleCloseButtonClick = () => {\n    setNoteContent('');\n    handleClose();\n  };\n\n  const clearNoteContent = () => {\n    setNoteContent('');\n  };\n\n  const handleSaveClick = () => {\n    if (noteContent.trim()) {\n      dispatch(saveNote(app, noteContent));\n      setCreatingNote(false);\n      setNoteContent('');\n    } else {\n      setErrorMessage('Empty notes cannot be saved');\n    }\n  };\n\n  return (\n    <>\n      <Modal.Header\n        className={`detailModal-header ${app.color ? app.color : 'default'} ${\n          app.color ? app.color : 'default'\n        }-modal-header-border`}\n        onClick={(e) => {\n          e.stopPropagation();\n          closeListSelect();\n          setErrorMessage('');\n        }}\n      >\n        <Row className='detailModal-header-nav'>\n          <div className='detailModal-header-nav-buttonContainer'>\n            <div className='detailModal-moveButton-container'>\n              <Button\n                className={`modal-button detail-modal-moveButton ${app.color}-accent-border`}\n                onClick={(e) => {\n                  e.stopPropagation();\n                  openListSelect();\n                }}\n              >\n                Move\n              </Button>\n              {showListSelect && (\n                <ListSelect close={closeListSelect} app={app} />\n              )}\n            </div>\n            <Button\n              className={`modal-button ${app.color}-accent-border detail-modal-closeButton`}\n              onClick={(e) => {\n                e.stopPropagation();\n                setNoteContent('');\n                handleCloseButtonClick();\n              }}\n            >\n              Close\n            </Button>\n          </div>\n          <div className='detailModal-header-main'>\n            <div className='detailModal-header-main-text'>\n              <p className='detailModal-header-main-text-company'>\n                {app.companyName}\n              </p>\n              <p className='detailModal-header-main-text-job'>{app.jobTitle}</p>\n            </div>\n            <FavoriteButton app={app} color={app.color} />\n          </div>\n          <DetailModalNav\n            app={app}\n            color={app.color}\n            toDetails={toDetails}\n            toNotes={toNotes}\n            tab={tab}\n          />\n        </Row>\n      </Modal.Header>\n      <Modal.Body\n        className={`notesModal-body detailModal-body ${\n          app.color ? app.color : 'default'\n        }-body ${app.color}-modal-body-border`}\n        ref={notesModalBodyRef}\n        onClick={() => {\n          closeListSelect();\n          setErrorMessage('');\n        }}\n      >\n        <div className='notesModal-body-container'>\n          {(app.notes.length === 0 || creatingNote) && (\n            <>\n              <div\n                className='notesModal-body-button-container'\n                onClick={(e) => {\n                  e.stopPropagation();\n                }}\n              >\n                <Message\n                  style={{\n                    margin: '0px',\n                    padding: '0px',\n                    height: '30px',\n                    display: 'flex',\n                    alignItems: 'center',\n                    paddingTop: '3px',\n                    paddingLeft: '23px',\n                    borderRadius: '10px 10px 0 0',\n                    borderBottom: 'unset !important',\n                  }}\n                  className={`${app.color ? app.color : 'default'} ${\n                    app.color ? app.color : 'default'\n                  }-accent-border`}\n                >\n                  {errorMessage}\n                </Message>\n                <div\n                  className='notesModal-body-create-container'\n                  onClick={(e) => {\n                    e.stopPropagation();\n                    handleSaveClick();\n                  }}\n                >\n                  <div\n                    className={`notesModal-body-create-right ${\n                      app.color ? app.color : 'default'\n                    } ${app.color ? app.color : 'default'}-accent-border`}\n                    title='Save'\n                  >\n                    <i className='fas fa-plus notesModal-body-create-icon'></i>\n                    <span className='notesModal-body-create-text'>Save</span>\n                  </div>\n                </div>\n                <div\n                  className='notesModal-body-create-container'\n                  onClick={(e) => {\n                    e.stopPropagation();\n                    if (app.notes) {\n                      if (app.notes.length !== 0) {\n                        setCreatingNote(false);\n                      } else {\n                        setErrorMessage('Create your first note to display');\n                      }\n                    }\n                  }}\n                >\n                  <div\n                    className={`notesModal-body-create-right ${\n                      app.color ? app.color : 'default'\n                    } ${app.color ? app.color : 'default'}-accent-border`}\n                    title='Close'\n                  >\n                    <i className='fas fa-times notesModal-body-close-icon'></i>\n                    <span className='notesModal-body-create-text'>Close</span>\n                  </div>\n                </div>\n              </div>\n              <Form\n                onClick={(e) => {\n                  e.stopPropagation();\n                }}\n              >\n                <Form.Group>\n                  <Form.Control\n                    as='textarea'\n                    placeholder='Save your notes here'\n                    value={noteContent}\n                    onChange={(e) => {\n                      setNoteContent(e.target.value);\n                    }}\n                  ></Form.Control>\n                </Form.Group>\n              </Form>\n            </>\n          )}\n          {app.notes.length > 0 &&\n            app.notes.map((note, i) => (\n              <AppNote\n                note={note}\n                key={i}\n                app={app}\n                clearNoteContent={clearNoteContent}\n                closeCreatingNote={closeCreatingNote}\n              />\n            ))}\n        </div>\n      </Modal.Body>\n      {!creatingNote && app.notes.length !== 0 && (\n        <div className='notesModal-open-form-button'>\n          <div\n            className={`notesModal-body-create-right square-corner  ${app.color}`}\n            title='Create a note'\n            onClick={(e) => {\n              e.stopPropagation();\n              dispatch(closeNoteEditors(app));\n              setCreatingNote(true);\n              notesModalBodyRef.current.scroll({\n                top: 0,\n                behavior: 'smooth',\n              });\n            }}\n          >\n            <i className='fas fa-plus notesModal-body-create-icon'></i>\n            <span className='notesModal-body-create-text'>Note</span>\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default NotesModal;\n","export const formatDate = (date) => {\n  let month = `${date.slice(5, 7)}`;\n  let day = `${date.slice(8, 10)}`;\n  let year = date.slice(0, 4);\n  return `${month}/${day}/${year}`;\n};\n\nexport const trimDate = (date) => {\n  return date.slice(0, 10);\n};\n","let colors = {\n  white: 'white',\n  red: 'red',\n  salmon: 'salmon',\n  orange: 'orange',\n  gold: 'gold',\n  yellow: 'yellow',\n  lightGreen: 'light-green',\n  green: 'green',\n  darkGreen: 'dark-green',\n  blueGreen: 'blue-green',\n  lightBlue: 'light-blue',\n  blue: 'blue',\n  navy: 'navy',\n  purple: 'purple',\n  black: 'black',\n  gray: 'gray',\n  offPurple: 'off-purple',\n};\n\nexport let colorsArr = [\n  'default',\n  'dark-1',\n  'dark-2',\n  'light-3',\n  'light-2',\n  'light-1',\n  'row-1-1',\n  'row-1-2',\n  'row-1-3',\n  'row-1-4',\n  'row-1-5',\n  'row-1-6',\n  'row-2-1',\n  'row-2-2',\n  'row-2-3',\n  'row-2-4',\n  'row-2-5',\n  'row-2-6',\n  'row-3-1',\n  'row-3-2',\n  'row-3-3',\n  'row-3-4',\n  'row-3-5',\n  'row-3-6',\n  'row-4-1',\n  'row-4-2',\n  'row-4-3',\n  'row-4-4',\n  'row-4-5',\n  'row-4-6',\n  'row-5-1',\n  'row-5-2',\n  'row-5-3',\n  'row-5-4',\n  'row-5-5',\n  'row-5-6',\n  'row-6-1',\n  'row-6-2',\n  'row-6-3',\n  'row-6-4',\n  'row-6-5',\n  'row-6-6',\n];\nexport default colors;\n","import React from 'react';\nimport { Row, Col } from 'react-bootstrap';\nimport '../styles/colorSelect.css';\nimport { colorsArr } from '../styles/colorPallet';\n\nconst ColorSelect = ({\n  color,\n  setColor,\n  show,\n  openColorSelect,\n  closeColorSelect,\n}) => {\n  return (\n    <>\n      <div\n        className='colorSelect'\n        onClick={(e) => {\n          e.stopPropagation();\n          openColorSelect();\n        }}\n      >\n        <div className={`colorSelect-content ${color}`}></div>\n      </div>\n      {show && (\n        <Row\n          className='colorSelect-menu'\n          onClick={(e) => {\n            e.stopPropagation();\n          }}\n        >\n          {colorsArr.map((clr, i) => (\n            <Col\n              xs={1}\n              sm={2}\n              md={4}\n              key={i}\n              className={`colorSelect-menu-option-container`}\n            >\n              <div\n                className={`colorSelect-menu-option-border ${\n                  clr === color && 'colorSelect-menu-option-active'\n                }`}\n                onClick={(e) => {\n                  setColor(clr);\n                  closeColorSelect();\n                }}\n              >\n                <div className={`colorSelect-menu-option  ${clr} `}></div>\n              </div>\n            </Col>\n          ))}\n        </Row>\n      )}{' '}\n    </>\n  );\n};\n\nexport default ColorSelect;\n","import React, { useState, useRef } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Modal, Form, Row, Col, Button } from 'react-bootstrap';\nimport { trimDate } from '../helpers/dateHelpers';\nimport { UPDATE_APP_RESET } from '../constants/appConstants';\nimport { updateAppById } from '../actions/appActions';\nimport ListSelect from './ListSelect';\nimport FavoriteButton from './FavoriteButton';\nimport Message from './Message';\nimport ColorSelect from './ColorSelect';\nimport DetailModalNav from './DetailModalNav';\n\nconst DetailModal = ({ app, handleClose, tab, toDetails, toNotes }) => {\n  const dispatch = useDispatch();\n\n  const updateApp = useSelector((state) => state.updateApp);\n  const { success, error } = updateApp;\n\n  const [company, setCompany] = useState(app.companyName);\n  const [jobTitle, setJobTitle] = useState(app.jobTitle);\n  const [url, setUrl] = useState(app.url);\n  const [color, setColor] = useState(app.color);\n  const [salary, setSalary] = useState(app.salary);\n  const [location, setLocation] = useState(app.location);\n  const [description, setDescription] = useState(app.description);\n  const [validationMessages, setValidationMessages] = useState([]);\n  const [showListSelect, setShowListSelect] = useState(false);\n\n  const [deadline, setDeadline] = useState(\n    app.deadline ? trimDate(app.deadline) : ''\n  );\n  const [applicationDate, setApplicationDate] = useState(\n    app.application ? trimDate(app.application) : ''\n  );\n  const [interviewDate, setInterviewDate] = useState(\n    app.interview ? trimDate(app.interview) : ''\n  );\n  const [offerDate, setOfferDate] = useState(\n    app.offer ? trimDate(app.offer) : ''\n  );\n  const [offerAcceptanceDate, setOfferAcceptanceDate] = useState(\n    app.offer_acceptance ? trimDate(app.offer_acceptance) : ''\n  );\n\n  const [showColorSelect, setShowColorSelect] = useState(false);\n\n  const modalRef = useRef();\n\n  const validateForm = () => {\n    let arr = [];\n    if (company.length < 1) {\n      arr.push('Company name is a required field');\n    }\n    if (jobTitle.length < 1) {\n      arr.push('Job title is a required field');\n    }\n    if (arr.length < 1) {\n      return true;\n    } else {\n      setValidationMessages(arr);\n      return false;\n    }\n  };\n\n  const handleUpdateButtonClick = (e) => {\n    dispatch({ type: UPDATE_APP_RESET });\n\n    if (validateForm()) {\n      let updatedApp = app;\n      updatedApp.companyName = company;\n      updatedApp.jobTitle = jobTitle;\n      updatedApp.url = url;\n      updatedApp.color = color;\n      updatedApp.salary = salary;\n      updatedApp.location = location;\n      updatedApp.description = description;\n      updatedApp.deadline = deadline;\n      updatedApp.application = applicationDate;\n      updatedApp.offer = offerDate;\n      updatedApp.offer_acceptance = offerAcceptanceDate;\n      updatedApp.interview = interviewDate;\n\n      dispatch(updateAppById(updatedApp));\n    }\n  };\n\n  const openListSelect = (e) => {\n    e.stopPropagation();\n    setShowListSelect(true);\n  };\n\n  const closeListSelect = () => {\n    setShowListSelect(false);\n  };\n\n  const handleCloseButtonClick = (e) => {\n    handleClose();\n  };\n\n  const changeColorTo = (color) => {\n    setColor(color);\n  };\n\n  const openColorSelect = () => {\n    setShowColorSelect(true);\n  };\n\n  const closeColorSelect = () => {\n    setShowColorSelect(false);\n  };\n\n  return (\n    <>\n      <Modal.Header\n        className={`detailModal-header ${color ? color : 'default'} ${\n          color ? color : 'default'\n        }-modal-header-border`}\n        onClick={(e) => {\n          closeListSelect();\n          closeColorSelect();\n        }}\n        ref={modalRef}\n      >\n        <Row className='detailModal-header-nav'>\n          <div className='detailModal-header-nav-buttonContainer'>\n            <div className='detailModal-moveButton-container'>\n              <Button\n                className={`modal-button detail-modal-moveButton ${color}-accent-border`}\n                onClick={openListSelect}\n              >\n                Move\n              </Button>\n              {showListSelect && (\n                <ListSelect close={closeListSelect} app={app} />\n              )}\n            </div>\n            <Button\n              className={`${color}-accent-border modal-button detail-modal-updateButton`}\n              onClick={handleUpdateButtonClick}\n            >\n              Update\n            </Button>\n            <Button\n              className={`${color}-accent-border modal-button detail-modal-closeButton`}\n              onClick={handleCloseButtonClick}\n            >\n              Close\n            </Button>\n          </div>\n          <div className='detailModal-header-main'>\n            <div className='detailModal-header-main-text'>\n              <p className={`detailModal-header-main-text-company`}>\n                {app.companyName}\n              </p>\n              <p className={`detailModal-header-main-text-job`}>\n                {app.jobTitle}\n              </p>\n            </div>\n            <FavoriteButton app={app} color={color} />\n          </div>\n          <DetailModalNav\n            app={app}\n            color={color}\n            tab={tab}\n            toDetails={toDetails}\n            toNotes={toNotes}\n          />\n        </Row>\n      </Modal.Header>\n      <Modal.Body\n        className={`detailModal-body ${\n          color ? color : 'default'\n        }-body  ${color}-modal-body-border`}\n        as={Row}\n        onClick={() => {\n          closeListSelect();\n          closeColorSelect();\n        }}\n      >\n        <div className='detailModal-message-container'>\n          {validationMessages.length > 0 && (\n            <Message variant='danger'>\n              <ul className='validation-list'>\n                {validationMessages.map((message, i) => (\n                  <li key={i}>{message}</li>\n                ))}\n              </ul>\n            </Message>\n          )}\n          {success && (\n            <Message variant='success'>\n              Your application has been updated successfully\n            </Message>\n          )}\n          {error && <Message variant='danger'>{error}</Message>}\n        </div>\n\n        <Col\n          xs={12}\n          sm={12}\n          md={8}\n          className='detailModal-body-left'\n          as={Row}\n          autoComplete='off'\n        >\n          <Form.Group as={Col} xs={12} sm={6} md={6} lg={6}>\n            <Form.Label htmlFor='company'>Company</Form.Label>\n            <Form.Control\n              autoComplete='off'\n              className='capitalize'\n              value={company}\n              placeholder='+ Company Name'\n              id='company'\n              onChange={(e) => {\n                setCompany(e.target.value);\n              }}\n            ></Form.Control>\n          </Form.Group>\n          <Form.Group as={Col} xs={12} sm={6} md={6} lg={6}>\n            <Form.Label htmlFor='job'>Job Title</Form.Label>\n            <Form.Control\n              id='job'\n              autoComplete='off'\n              className='capitalize'\n              value={jobTitle}\n              onChange={(e) => {\n                setJobTitle(e.target.value);\n              }}\n              placeholder='+ Job Title'\n            ></Form.Control>\n          </Form.Group>\n          <Form.Group as={Col} xs={12} sm={6} md={8}>\n            <Form.Label>URL</Form.Label>\n            <Form.Control\n              autoComplete='off'\n              value={url}\n              onChange={(e) => {\n                setUrl(e.target.value);\n              }}\n              placeholder='+ Enter URL'\n            ></Form.Control>\n          </Form.Group>\n          <Form.Group as={Col} xs={12} sm={6} md={4}>\n            <Form.Label>Salary</Form.Label>\n            <Form.Control\n              autoComplete='off'\n              value={salary ? salary : ''}\n              onChange={(e) => {\n                setSalary(e.target.value);\n              }}\n              placeholder='+ Salary'\n            ></Form.Control>\n          </Form.Group>\n          <Form.Group as={Col} xs={12} sm={6} md={8}>\n            <Form.Label>Location</Form.Label>\n            <Form.Control\n              autoComplete='off'\n              className='capitalize'\n              value={location}\n              onChange={(e) => {\n                setLocation(e.target.value);\n              }}\n              placeholder='+ Location'\n            ></Form.Control>\n          </Form.Group>\n          <Form.Group as={Col} xs={12} sm={6} md={4}>\n            <Form.Label>Color</Form.Label>\n            <ColorSelect\n              color={color}\n              setColor={changeColorTo}\n              show={showColorSelect}\n              openColorSelect={openColorSelect}\n              closeColorSelect={closeColorSelect}\n            />\n          </Form.Group>\n          <Form.Group as={Col} xs={12}>\n            <Form.Label>Description</Form.Label>\n            <Form.Control\n              autoComplete='off'\n              as='textarea'\n              value={description}\n              onChange={(e) => {\n                setDescription(e.target.value);\n              }}\n              placeholder='+ Description...'\n            ></Form.Control>\n          </Form.Group>\n        </Col>\n        <Col xs={12} sm={12} md={4} className='detailModal-body-right'>\n          <Row className='detailModal-body-right-content'>\n            <Form.Group as={Col}>\n              <Form.Label className='detailModal-date-container'>\n                <span className='detailModal-date-title'>\n                  Application Deadline\n                </span>\n                <span\n                  className={`clear-border detailModal-date-clear ${color}-clear-border`}\n                  onClick={(e) => {\n                    setDeadline('');\n                  }}\n                >\n                  Clear\n                </span>\n              </Form.Label>\n              <Form.Control\n                type='date'\n                value={deadline}\n                onChange={(e) => {\n                  setDeadline(e.target.value);\n                }}\n              ></Form.Control>\n            </Form.Group>\n            <Form.Group as={Col}>\n              <Form.Label className='detailModal-date-container'>\n                <span className='detailModal-date-title'>Applied on</span>\n                <span\n                  className={`clear-border detailModal-date-clear ${color}-clear-border`}\n                  onClick={(e) => {\n                    setApplicationDate('');\n                  }}\n                >\n                  Clear\n                </span>\n              </Form.Label>\n              <Form.Control\n                type='date'\n                value={applicationDate}\n                onChange={(e) => {\n                  setApplicationDate(e.target.value);\n                }}\n              ></Form.Control>\n            </Form.Group>\n            <Form.Group as={Col}>\n              <Form.Label className='detailModal-date-container'>\n                <span className='detailModal-date-title'>Interview Date</span>\n                <span\n                  className={`clear-border detailModal-date-clear ${color}-clear-border`}\n                  onClick={(e) => {\n                    setInterviewDate('');\n                  }}\n                >\n                  Clear\n                </span>\n              </Form.Label>\n              <Form.Control\n                type='date'\n                value={interviewDate}\n                onChange={(e) => {\n                  setInterviewDate(e.target.value);\n                }}\n              ></Form.Control>\n            </Form.Group>\n            <Form.Group as={Col}>\n              <Form.Label className='detailModal-date-container'>\n                <span className='detailModal-date-title'>Offer Recieved</span>\n                <span\n                  className={`clear-border detailModal-date-clear ${color}-clear-border`}\n                  onClick={(e) => {\n                    setOfferDate('');\n                  }}\n                >\n                  Clear\n                </span>\n              </Form.Label>\n              <Form.Control\n                autoComplete='off'\n                type='date'\n                value={offerDate}\n                onChange={(e) => {\n                  setOfferDate(e.target.value);\n                }}\n              ></Form.Control>\n            </Form.Group>\n            <Form.Group as={Col}>\n              <Form.Label className='detailModal-date-container'>\n                <span className='detailModal-date-title'>Accept Offer by</span>\n                <span\n                  className={`clear-border detailModal-date-clear ${color}-clear-border`}\n                  onClick={(e) => {\n                    setOfferAcceptanceDate('');\n                  }}\n                >\n                  Clear\n                </span>\n              </Form.Label>\n              <Form.Control\n                type='date'\n                value={offerAcceptanceDate}\n                onChange={(e) => {\n                  setOfferAcceptanceDate(e.target.value);\n                }}\n              ></Form.Control>\n            </Form.Group>\n          </Row>\n        </Col>\n        <Button\n          className='detail-modal-updateButton detailModal-updateButton-xs'\n          data-testid='primary-update-button'\n          onClick={() => {\n            handleUpdateButtonClick();\n            modalRef.current.scrollIntoView({\n              behavior: 'smooth',\n              block: 'start',\n            });\n          }}\n        >\n          Update\n        </Button>\n      </Modal.Body>\n    </>\n  );\n};\n\nexport default DetailModal;\n","import { useState } from 'react';\nimport { Modal } from 'react-bootstrap';\nimport { useDispatch } from 'react-redux';\nimport NotesModal from '../NotesModal';\nimport DetailModal from '../DetailModal';\nimport '../../styles/appDetailsModal.css';\nimport { closeNoteEditors } from '../../actions/noteActions';\n\nconst AppDetailsModal = ({ app, show, handleClose }) => {\n  const dispatch = useDispatch();\n  const [tab, setTab] = useState('details');\n\n  const toNotes = () => {\n    setTab('notes');\n  };\n  const toDetails = () => {\n    setTab('details');\n  };\n\n  return (\n    <Modal\n      show={show}\n      onHide={() => {\n        handleClose();\n        dispatch(closeNoteEditors(app));\n        setTimeout(() => {\n          toDetails();\n        }, 500);\n      }}\n      centered\n      size='xl'\n      className='detailModal'\n    >\n      {tab === 'details' && (\n        <DetailModal\n          app={app}\n          handleClose={handleClose}\n          tab={tab}\n          toDetails={toDetails}\n          toNotes={toNotes}\n        />\n      )}\n      {tab === 'notes' && (\n        <NotesModal\n          app={app}\n          handleClose={handleClose}\n          tab={tab}\n          toDetails={toDetails}\n          toNotes={toNotes}\n        />\n      )}\n    </Modal>\n  );\n};\n\nexport default AppDetailsModal;\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Draggable } from 'react-beautiful-dnd';\nimport { deleteAppById } from '../actions/appActions';\nimport { UPDATE_APP_RESET } from '../constants/appConstants';\n\n//import FooterEvent from './FooterEvent';\nimport DeleteAppModal from './modals/DeleteAppModal';\nimport AppDetailsModal from './modals/AppDetailsModal';\nimport FavoriteButton from './FavoriteButton';\n\nimport '../styles/appCard.css';\nimport '../styles/colorPalette.css';\n\nconst AppCard = ({ app, favslist, index }) => {\n  const dispatch = useDispatch();\n  const { companyName, jobTitle, id, color } = app;\n\n  const [showDeleteModal, setShowDeleteModal] = useState(false);\n  const [showDetailsModal, setShowDetailsModal] = useState(false);\n  const [detailsModalDisabled, setDetailsModalDisabled] = useState(false);\n\n  const deleteHandler = (e) => {\n    dispatch(deleteAppById(app));\n    closeDeleteModal();\n  };\n\n  const openDeleteModal = () => {\n    setShowDeleteModal(true);\n  };\n\n  const closeDeleteModal = () => {\n    setShowDeleteModal(false);\n  };\n\n  const openDetailsModal = () => {\n    if (!detailsModalDisabled) {\n      setShowDetailsModal(true);\n    }\n  };\n\n  const closeDetailsModal = () => {\n    setShowDetailsModal(false);\n    dispatch({ type: UPDATE_APP_RESET });\n  };\n\n  const disableDetailsModal = () => {\n    setDetailsModalDisabled(true);\n  };\n\n  const enableDetailsModal = () => {\n    setDetailsModalDisabled(false);\n  };\n\n  return (\n    <>\n      <Draggable draggableId={id} index={index}>\n        {(provided) => (\n          <div\n            className={`app-card ${\n              color ? color : 'white'\n            } ${color}-card-border`}\n            ref={provided.innerRef}\n            {...provided.draggableProps}\n            {...provided.dragHandleProps}\n            onClick={openDetailsModal}\n          >\n            <div className='app-card-body'>\n              <div className='app-card-body-left'>\n                <span className='app-card-body-job'>{jobTitle}</span>\n                <span className='app-card-body-company'>{companyName}</span>\n              </div>\n              <div\n                className='app-card-body-right'\n                onMouseOver={disableDetailsModal}\n                onMouseLeave={enableDetailsModal}\n              >\n                <FavoriteButton app={app} color={app.color} />\n                <i\n                  className='far fa-trash-alt'\n                  onClick={openDeleteModal}\n                  title='Delete'\n                ></i>\n              </div>\n            </div>\n            {/*\n              <div className='app-card-footer'>\n              <div className='app-card-footer-content'>\n                <FooterEvent app={app} />\n              </div>\n            </div>\n            */}\n          </div>\n        )}\n      </Draggable>\n      <DeleteAppModal\n        show={showDeleteModal}\n        handleClose={closeDeleteModal}\n        deleteHandler={deleteHandler}\n        item={'job'}\n      />\n      <AppDetailsModal\n        app={app}\n        show={showDetailsModal}\n        handleClose={closeDetailsModal}\n      />\n    </>\n  );\n};\n\nexport default AppCard;\n","import React from 'react';\nimport { DragDropContext } from 'react-beautiful-dnd';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { USER_APPS_SUCCESS } from '../constants/appConstants';\n\nconst FavoritedDragDropContext = ({ children }) => {\n  const dispatch = useDispatch();\n  const userApps = useSelector((state) => state.userApps);\n  const { apps } = userApps;\n\n  const onDragEnd = async (result) => {\n    const { destination, source } = result;\n    if (!destination) {\n      return;\n    }\n    if (\n      destination.droppableId === source.droppableId &&\n      destination.index === source.index\n    ) {\n      return;\n    }\n\n    let appsCopy = apps;\n\n    if (source.index < destination.index) {\n      for (let key in appsCopy) {\n        appsCopy[key].forEach((e) => {\n          if (e.fav_index > source.index && e.fav_index <= destination.index) {\n            e.fav_index -= 1;\n            return;\n          }\n          if (e.fav_index === source.index) {\n            e.fav_index = destination.index;\n          }\n        });\n      }\n    } else {\n      for (let key in appsCopy) {\n        appsCopy[key].forEach((e) => {\n          if (e.fav_index < source.index && e.fav_index >= destination.index) {\n            e.fav_index += 1;\n            return;\n          }\n          if (e.fav_index === source.index) {\n            e.fav_index = destination.index;\n          }\n        });\n      }\n    }\n\n    localStorage.setItem('apps', JSON.stringify(appsCopy));\n    dispatch({ type: USER_APPS_SUCCESS, payload: appsCopy });\n  };\n\n  return <DragDropContext onDragEnd={onDragEnd}>{children}</DragDropContext>;\n};\n\nexport default FavoritedDragDropContext;\n","import React from 'react';\nimport { Modal } from 'react-bootstrap';\nimport { useSelector } from 'react-redux';\nimport { Droppable } from 'react-beautiful-dnd';\nimport AppCard from '../AppCard';\nimport FavoritedDragDropContext from '../FavoritedDragDropContext.jsx';\nimport '../../styles/favoritedAppsModal.css';\n\nconst FavoritedAppsModal = ({ show, onHide }) => {\n  const userApps = useSelector((state) => state.userApps);\n  const { apps } = userApps;\n  let favoritedApps = [];\n  for (let list in apps) {\n    favoritedApps = [...favoritedApps, ...apps[list]];\n  }\n\n  return (\n    <FavoritedDragDropContext>\n      <Modal\n        show={show}\n        onHide={onHide}\n        centered\n        size='xl'\n        className='favoritesModal'\n        onClick={() => {}}\n      >\n        <Modal.Body className='favoritesModal-body'>\n          <div className='list-container'>\n            <div className='list-header'>\n              <span className='list-header-icon'>\n                <i className='far fa-bookmark' />\n              </span>\n              <div className='list-header-main'>\n                <div className='list-header-main-title'>Favorited</div>\n                <div className='list-header-main-count'>\n                  {favoritedApps.filter((app) => app.favorited === true)\n                    .length === 0\n                    ? 0\n                    : favoritedApps.filter((app) => app.favorited === true)\n                        .length}{' '}\n                  {`job${\n                    favoritedApps.filter((app) => app.favorited === true)\n                      .length === 1\n                      ? ''\n                      : 's'\n                  }`}\n                </div>\n              </div>\n            </div>\n\n            <Droppable droppableId='favorited'>\n              {(provided) => (\n                <div\n                  className='list-body-main'\n                  ref={provided.innerRef}\n                  {...provided.droppableProps}\n                >\n                  {favoritedApps &&\n                    favoritedApps\n                      .filter((app) => app.favorited === true)\n                      .sort((a, b) => a.fav_index - b.fav_index)\n                      .map((app) => (\n                        <AppCard\n                          app={app}\n                          key={app.id}\n                          favslist\n                          index={app.fav_index}\n                        />\n                      ))}\n                  {provided.placeholder}\n                </div>\n              )}\n            </Droppable>\n          </div>\n        </Modal.Body>\n      </Modal>\n    </FavoritedDragDropContext>\n  );\n};\n\nexport default FavoritedAppsModal;\n","import React, { useState } from 'react';\nimport '../styles/openFavorites.css';\nimport FavoritedAppsModal from './modals/FavoritedAppsModal';\n\nconst OpenFavorites = () => {\n  const [showFavorites, setShowFavorites] = useState(false);\n\n  const handleClose = () => {\n    setShowFavorites(false);\n  };\n\n  return (\n    <>\n      <div\n        className='openFavorites header-icon'\n        title='Show Bookmarked'\n        onClick={(e) => {\n          e.stopPropagation();\n          setShowFavorites(true);\n        }}\n      >\n        <i className='fas fa-bookmark openFavorites-icon fa-lg' />\n      </div>\n      <FavoritedAppsModal show={showFavorites} onHide={handleClose} />\n    </>\n  );\n};\n\nexport default OpenFavorites;\n","import React from 'react';\nimport '../styles/logo.css';\n\nconst Logo = () => {\n  return (\n    <div className='logo-container'>\n      <div className='logo-block orange'></div>\n      <div className='logo-block off-white'></div>\n      <div className='logo-block purple'></div>\n    </div>\n  );\n};\n\nexport default Logo;\n","import React from 'react';\nimport { Container } from 'react-bootstrap';\nimport OpenFavorites from './OpenFavorites';\nimport '../styles/header.css';\nimport Logo from './Logo';\n\nconst Header = () => {\n  return (\n    <Container fluid className='header-background'>\n      <Container className='header-container' fluid>\n        <a\n          className='header-left'\n          href='https://samqchau.github.io/portfolio-v1.0.0/'\n          target='_blank'\n          rel='noreferrer'\n          title=\"Sam Chau's portfolio\"\n        >\n          <Logo />\n          <span className='header-logo-text'>JobTrackr</span>\n        </a>\n        <div className='header-center'></div>\n        <div className='header-right'>\n          <OpenFavorites />\n        </div>\n      </Container>\n    </Container>\n  );\n};\n\nexport default Header;\n","import React, { useState, useEffect, useCallback } from 'react';\nimport { Modal, Button, Form, Col, Row } from 'react-bootstrap';\nimport { useSelector, useDispatch } from 'react-redux';\nimport '../../styles/newAppModal.css';\nimport { addAppToList } from '../../actions/appActions';\nimport ColorSelect from '../ColorSelect';\nimport Message from '../Message';\nimport { APP_TOOL_TIP_ON, POST_APP_RESET } from '../../constants/appConstants';\nimport { noApps } from '../../helpers/NoApps';\n\nconst listValues = [\n  'Wishlist',\n  'Applied',\n  'Phone',\n  'On Site',\n  'Offer',\n  'Rejected',\n];\n\nconst NewAppModal = ({ show, handleClose, listValue }) => {\n  const dispatch = useDispatch();\n  const postApp = useSelector((state) => state.postApp);\n  const { success, error } = postApp;\n  const userApps = useSelector((state) => state.userApps);\n  const { apps } = userApps;\n\n  let today = new Date(Date());\n  let dd = String(today.getDate()).padStart(2, '0');\n  let mm = String(today.getMonth() + 1).padStart(2, '0');\n  let yyyy = today.getFullYear();\n\n  const [companyName, setCompanyName] = useState('');\n  const [jobTitle, setJobTitle] = useState('');\n  const [list, setList] = useState(listValue);\n  const [date, setDate] = useState(`${yyyy}-${mm}-${dd}`);\n  const [url, setUrl] = useState('');\n  const [salary, setSalary] = useState('');\n  const [location, setLocation] = useState('');\n  const [color, setColor] = useState('default');\n  const [description, setDescription] = useState('');\n  const [validationMessages, setValidationMessages] = useState([]);\n\n  const [showColorSelect, setShowColorSelect] = useState(false);\n\n  const resetForm = useCallback(() => {\n    setCompanyName('');\n    setJobTitle('');\n    setList(listValue);\n    setDate(`${yyyy}-${mm}-${dd}`);\n    setUrl('');\n    setSalary('');\n    setColor('default');\n    setDescription('');\n    dispatch({ type: POST_APP_RESET });\n    setValidationMessages([]);\n  }, [dd, dispatch, listValue, mm, yyyy]);\n\n  useEffect(() => {\n    if (success) {\n      handleClose();\n      setTimeout(resetForm, 1000);\n    }\n  }, [success, handleClose, resetForm]);\n\n  const validateForm = () => {\n    let arr = [];\n    if (companyName.length < 1) {\n      arr.push('Company name is a required field');\n    }\n    if (jobTitle.length < 1) {\n      arr.push('Job title is a required field');\n    }\n    if (arr.length < 1) {\n      setValidationMessages([]);\n      return true;\n    } else {\n      setValidationMessages(arr);\n      return false;\n    }\n  };\n\n  const submitHandler = async (e) => {\n    e.preventDefault();\n    setValidationMessages([]);\n    if (validateForm()) {\n      let application = {\n        companyName,\n        jobTitle,\n        list,\n        date,\n        url,\n        salary,\n        location,\n        color,\n        description,\n        notes: [],\n      };\n      dispatch(addAppToList(application));\n    }\n  };\n\n  const changeColorTo = (color) => {\n    setColor(color);\n  };\n\n  const openColorSelect = () => {\n    setShowColorSelect(true);\n  };\n\n  const closeColorSelect = () => {\n    setShowColorSelect(false);\n  };\n\n  const onHide = () => {\n    handleClose();\n    resetForm();\n    closeColorSelect();\n    if (noApps(apps)) {\n      dispatch({ type: APP_TOOL_TIP_ON });\n    }\n  };\n\n  return (\n    <Modal\n      show={show}\n      onHide={onHide}\n      centered\n      size='md'\n      className='newAppModal'\n      contentClassName='newAppCustomModal'\n      onClick={() => {\n        if (showColorSelect) {\n          closeColorSelect();\n        }\n      }}\n    >\n      <Modal.Header>\n        <Modal.Title>Track a new application</Modal.Title>\n        <div className='newAppModal-button-container'>\n          <Button\n            onClick={submitHandler}\n            variant='success'\n            className='modal-button'\n          >\n            Save\n          </Button>\n          <Button variant='dark' onClick={onHide} className='modal-button'>\n            Close\n          </Button>\n        </div>\n      </Modal.Header>\n      <Modal.Body>\n        {validationMessages.length > 0 && (\n          <Message variant='danger'>\n            <ul className='validation-list'>\n              {validationMessages.map((message, i) => (\n                <li key={i}>{message}</li>\n              ))}\n            </ul>\n          </Message>\n        )}\n        {success && (\n          <Message variant='success'>\n            Your application has been saved successfully\n          </Message>\n        )}\n        {error && <Message variant='danger'>{error}</Message>}\n        <Form as={Row} autoComplete='off'>\n          <Form.Group as={Col} controlId='companyName' xs={12} sm={6}>\n            <Form.Label>Company Name *</Form.Label>\n            <Form.Control\n              autoComplete='off'\n              placeholder='Company Name'\n              value={companyName}\n              onChange={(e) => {\n                setCompanyName(e.target.value);\n              }}\n            ></Form.Control>\n          </Form.Group>\n          <Form.Group controlId='jobTitle' as={Col} xs={12} sm={6}>\n            <Form.Label>Job Title *</Form.Label>\n            <Form.Control\n              autoComplete='off'\n              placeholder='Enter Job Title'\n              value={jobTitle}\n              onChange={(e) => {\n                setJobTitle(e.target.value);\n              }}\n            ></Form.Control>\n          </Form.Group>\n\n          <Form.Group controlId='list' as={Col} xs={12} sm={6}>\n            <Form.Label>List</Form.Label>\n            <Form.Control\n              as='select'\n              value={list}\n              onChange={(e) => {\n                setList(e.target.value);\n              }}\n            >\n              {listValues.map((item, i) => (\n                <option value={i + 1} key={i + 1}>\n                  {listValues[i]}\n                </option>\n              ))}\n            </Form.Control>\n          </Form.Group>\n\n          <Form.Group controlId='dateApplied' as={Col} xs={12} sm={6}>\n            <Form.Label>Date Applied</Form.Label>\n            <Form.Control\n              type='date'\n              value={date}\n              onChange={(e) => {\n                setDate(e.target.value);\n              }}\n            ></Form.Control>\n          </Form.Group>\n\n          <Form.Group controlId='url' as={Col} xs={12} sm={6}>\n            <Form.Label>URL</Form.Label>\n            <Form.Control\n              autoComplete='off'\n              placeholder='+  Add URL'\n              value={url}\n              onChange={(e) => {\n                setUrl(e.target.value);\n              }}\n            ></Form.Control>\n          </Form.Group>\n\n          <Form.Group controlId='salary' as={Col} xs={12} sm={6}>\n            <Form.Label>Salary</Form.Label>\n            <Form.Control\n              autoComplete='off'\n              placeholder='Salary'\n              value={salary}\n              onChange={(e) => {\n                setSalary(e.target.value);\n              }}\n            ></Form.Control>\n          </Form.Group>\n\n          <Form.Group controlId='location' as={Col} xs={12} sm={6}>\n            <Form.Label>Location</Form.Label>\n            <Form.Control\n              autoComplete='off'\n              placeholder='Location'\n              value={location}\n              onChange={(e) => {\n                setLocation(e.target.value);\n              }}\n            ></Form.Control>\n          </Form.Group>\n\n          <Form.Group controlId='color' as={Col} xs={12} sm={6}>\n            <Form.Label>Color</Form.Label>\n            <ColorSelect\n              color={color}\n              setColor={changeColorTo}\n              show={showColorSelect}\n              openColorSelect={openColorSelect}\n              closeColorSelect={closeColorSelect}\n            />\n          </Form.Group>\n\n          <Form.Group controlId='description' as={Col} xs={12}>\n            <Form.Label>Description</Form.Label>\n            <Form.Control\n              autoComplete='off'\n              placeholder='Job Description'\n              value={description}\n              as='textarea'\n              onChange={(e) => {\n                setDescription(e.target.value);\n              }}\n            ></Form.Control>\n          </Form.Group>\n        </Form>\n      </Modal.Body>\n    </Modal>\n  );\n};\n\nexport default NewAppModal;\n","import { useSelector } from 'react-redux';\nimport '../styles/tooltip.css';\n\nconst Tooltip = () => {\n  const toolTip = useSelector((state) => state.toolTip);\n\n  return toolTip && <div className={`tip`}>Start Here</div>;\n};\n\nexport default Tooltip;\n","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport '../styles/appList.css';\nimport AppCard from './AppCard';\nimport { Droppable } from 'react-beautiful-dnd';\nimport NewAppModal from './modals/NewAppModal';\nimport { Col } from 'react-bootstrap';\nimport Tooltip from '../components/Tooltip';\nimport { APP_TOOL_TIP_OFF } from '../constants/appConstants';\n\nconst content = {\n  wishlist: 'For later',\n  applied: 'Applied',\n  phone: 'Phone Interview',\n  'on site': 'On Site Interview',\n  offer: 'Offer Recieved',\n  rejected: 'Rejected',\n};\n\nconst AppList = ({ name, icon, listIntFromDB, displayToolTip }) => {\n  const [showModal, setShowModal] = useState(false);\n  const dispatch = useDispatch();\n  const userApps = useSelector((state) => state.userApps);\n  const { apps } = userApps;\n\n  const handleClose = () => {\n    setShowModal(false);\n  };\n\n  const showAppModal = () => {\n    dispatch({ type: APP_TOOL_TIP_OFF });\n    setShowModal(true);\n  };\n\n  return (\n    <>\n      <Col className='list-container' xs={6} sm={4} md={4} lg={4} xl={2}>\n        <div className='list-header'>\n          <div className='list-header-main'>\n            <div className='list-header-main-title'>\n              <span>\n                <i className={icon}></i>\n              </span>\n              {content[name]}\n            </div>\n            <div className='list-header-main-count'>\n              {apps && apps[name] && apps[name].length ? apps[name].length : 0}{' '}\n              job\n              {`${apps[name].length === 1 ? '' : 's'}`}\n            </div>\n          </div>\n        </div>\n        <div\n          className='list-add'\n          onClick={showAppModal}\n          data-testid={`create-new-app-${listIntFromDB}`}\n        >\n          {displayToolTip && <Tooltip />}\n          <i className='fas fa-plus' />\n        </div>\n        <Droppable droppableId={name}>\n          {(provided) => (\n            <div\n              className='list-body-main'\n              data-testid={`list-body-main-${listIntFromDB}`}\n              ref={provided.innerRef}\n              {...provided.droppableProps}\n            >\n              {apps &&\n                apps[name] &&\n                apps[name].map((app, index) => (\n                  <AppCard app={app} key={app.id} index={index} />\n                ))}\n              {provided.placeholder}\n            </div>\n          )}\n        </Droppable>\n      </Col>\n      <NewAppModal\n        show={showModal}\n        handleClose={handleClose}\n        listValue={listIntFromDB}\n      />\n    </>\n  );\n};\n\nexport default AppList;\n","import React from 'react';\nimport { DragDropContext } from 'react-beautiful-dnd';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { USER_APPS_SUCCESS } from '../constants/appConstants';\nimport nameValuePairs from '../data/lookUpTables/listNameValuePairs';\n\nconst DragDropContextComponent = ({ children }) => {\n  const dispatch = useDispatch();\n\n  const userApps = useSelector((state) => state.userApps);\n  const { apps } = userApps;\n\n  const onDragEnd = async (result) => {\n    const { destination, source } = result;\n    if (!destination) return;\n\n    if (\n      destination.droppableId === source.droppableId &&\n      destination.index === source.index\n    )\n      return;\n\n    let appsCopy = apps;\n\n    if (destination.droppableId === source.droppableId) {\n      let listName = destination.droppableId;\n      let arr = appsCopy[listName];\n      let app = arr.splice(source.index, 1);\n      app = app[0];\n\n      if (source.index < destination.index) {\n        for (let i = source.index; i < destination.index; i++) {\n          arr[i].index = arr[i].index - 1;\n        }\n      } else {\n        for (let i = destination.index; i < source.index; i++) {\n          arr[i].index = arr[i].index + 1;\n        }\n      }\n      app.index = destination.index;\n      arr.splice(destination.index, 0, app);\n      appsCopy[listName] = arr;\n\n      localStorage.setItem('apps', JSON.stringify(appsCopy));\n      dispatch({ type: USER_APPS_SUCCESS, payload: appsCopy });\n      return;\n    }\n\n    if (destination.droppableId !== source.droppableId) {\n      let sourceArr = appsCopy[source.droppableId];\n      let destinationArr = appsCopy[destination.droppableId];\n      let app = sourceArr.splice(source.index, 1);\n      app = app[0];\n      app.index = destination.index;\n      app.list = nameValuePairs.indexOf(destination.droppableId);\n      for (let i = source.index; i < sourceArr.length; i++) {\n        sourceArr[i].index -= 1;\n      }\n      for (let i = destination.index; i < destinationArr.length; i++) {\n        destinationArr[i].index += 1;\n      }\n      destinationArr.splice(destination.index, 0, app);\n      appsCopy[source.droppableId] = sourceArr;\n      appsCopy[destination.droppableId] = destinationArr;\n      localStorage.setItem('apps', JSON.stringify(appsCopy));\n      dispatch({ type: USER_APPS_SUCCESS, payload: appsCopy });\n    }\n  };\n\n  return <DragDropContext onDragEnd={onDragEnd}>{children}</DragDropContext>;\n};\n\nexport default DragDropContextComponent;\n","import React from 'react';\nimport AppList from '../components/AppList';\nimport DragDropContextComponent from '../components/DragDropContextComponent';\n\nconst HomeScreen = ({ history }) => {\n  return (\n    <>\n      <DragDropContextComponent>\n        <AppList\n          name='wishlist'\n          icon='fas fa-calendar-alt'\n          listIntFromDB={1}\n          displayToolTip={true}\n        />\n        <AppList name='applied' icon='far fa-paper-plane' listIntFromDB={2} />\n        <AppList\n          name='phone'\n          icon='fas fa-phone-square-alt'\n          listIntFromDB={3}\n          displayToolTip={false}\n        />\n        <AppList\n          name='on site'\n          icon='fas fa-map-marker-alt'\n          listIntFromDB={4}\n          displayToolTip={false}\n        />\n        <AppList\n          name='offer'\n          icon='fas fa-award'\n          listIntFromDB={5}\n          displayToolTip={false}\n        />\n        <AppList\n          name='rejected'\n          icon='far fa-thumbs-down'\n          listIntFromDB={6}\n          displayToolTip={false}\n        />\n      </DragDropContextComponent>\n    </>\n  );\n};\n\nexport default HomeScreen;\n","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST';\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS';\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL';\nexport const USER_LOGOUT = 'USER_LOGOUT';\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST';\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS';\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL';\nexport const USER_REGISTER_RESET = 'USER_REGISTER_RESET';\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nimport { userLoginReducer, userRegisterReducer } from '../reducers/userReducer';\nimport {\n  userAppsReducer,\n  postAppReducer,\n  updateAppReducer,\n  toolTipReducer,\n} from '../reducers/appReducer';\nimport { notePostReducer } from '../reducers/noteReducer';\nimport { noApps } from '../helpers/NoApps.js';\n\nconst reducer = combineReducers({\n  userApps: userAppsReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  postApp: postAppReducer,\n  updateApp: updateAppReducer,\n  notePost: notePostReducer,\n  toolTip: toolTipReducer,\n});\n\nconst userInfoFromStorage = sessionStorage.getItem('userInfo')\n  ? JSON.parse(sessionStorage.getItem('userInfo'))\n  : null;\n\nconst userAppsFromStorage = localStorage.getItem('apps')\n  ? JSON.parse(localStorage.getItem('apps'))\n  : {\n      wishlist: [],\n      applied: [],\n      phone: [],\n      'on site': [],\n      offer: [],\n      rejected: [],\n    };\n\nconst initialState = {\n  userLogin: { userInfo: userInfoFromStorage },\n  userApps: {\n    apps: userAppsFromStorage,\n    displayToolTip: noApps(userAppsFromStorage),\n  },\n  toolTip: noApps(userAppsFromStorage),\n};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  reducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n","import {\n  USER_APPS_REQUEST,\n  USER_APPS_SUCCESS,\n  USER_APPS_FAIL,\n  USER_APPS_RESET,\n  POST_APP_REQUEST,\n  POST_APP_SUCCESS,\n  POST_APP_FAIL,\n  POST_APP_RESET,\n  UPDATE_APP_REQUEST,\n  UPDATE_APP_SUCCESS,\n  UPDATE_APP_FAIL,\n  UPDATE_APP_RESET,\n  APP_TOOL_TIP_ON,\n  APP_TOOL_TIP_OFF,\n} from '../constants/appConstants';\n\nexport const userAppsReducer = (\n  state = {\n    apps: {\n      wishlist: [],\n      applied: [],\n      phone: [],\n      'on site': [],\n      offer: [],\n      rejected: [],\n    },\n  },\n  action\n) => {\n  switch (action.type) {\n    case USER_APPS_REQUEST:\n      return { ...state, loading: true };\n    case USER_APPS_SUCCESS:\n      return { loading: false, apps: action.payload, success: true };\n    case USER_APPS_FAIL:\n      return { ...state, loading: false, error: action.payload };\n    case USER_APPS_RESET:\n      return {\n        apps: {\n          wishlist: [],\n          applied: [],\n          phone: [],\n          'on site': [],\n          offer: [],\n          rejected: [],\n        },\n      };\n    default:\n      return { ...state };\n  }\n};\n\nexport const postAppReducer = (state = {}, action) => {\n  switch (action.type) {\n    case POST_APP_REQUEST:\n      return { loading: true };\n    case POST_APP_SUCCESS:\n      return { loading: false, success: true };\n    case POST_APP_FAIL:\n      return { loading: false, error: action.payload };\n    case POST_APP_RESET:\n      return {};\n    default:\n      return { ...state };\n  }\n};\n\nexport const updateAppReducer = (state = {}, action) => {\n  switch (action.type) {\n    case UPDATE_APP_REQUEST:\n      return { loading: true };\n    case UPDATE_APP_SUCCESS:\n      return { loading: false, success: true };\n    case UPDATE_APP_FAIL:\n      return { loading: false, error: action.payload };\n    case UPDATE_APP_RESET:\n      return {};\n    default:\n      return state;\n  }\n};\n\nexport const toolTipReducer = (state = {}, action) => {\n  switch (action.type) {\n    case APP_TOOL_TIP_OFF:\n      return false;\n    case APP_TOOL_TIP_ON:\n      return true;\n    default:\n      return state;\n  }\n};\n","import {\n  USER_LOGIN_REQUEST,\n  USER_LOGIN_SUCCESS,\n  USER_LOGIN_FAIL,\n  USER_LOGOUT,\n  USER_REGISTER_REQUEST,\n  USER_REGISTER_SUCCESS,\n  USER_REGISTER_FAIL,\n  USER_REGISTER_RESET,\n} from '../constants/userConstants.js';\n\nexport const userLoginReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_LOGIN_REQUEST:\n      return { loading: true };\n    case USER_LOGIN_SUCCESS:\n      return { loading: false, userInfo: action.payload };\n    case USER_LOGIN_FAIL:\n      return { loading: false, error: action.payload };\n    case USER_LOGOUT:\n      return {};\n    default:\n      return state;\n  }\n};\n\nexport const userRegisterReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_REGISTER_REQUEST:\n      return { loading: true };\n    //after register returns success dispatch userLoginReducer with returned successfully created user object or throw error\n    case USER_REGISTER_SUCCESS:\n      return { loading: false, success: true };\n    case USER_REGISTER_FAIL:\n      return { loading: false, error: action.payload };\n    case USER_REGISTER_RESET:\n      return {};\n    default:\n      return state;\n  }\n};\n","import {\n  POST_NOTE_REQUEST,\n  POST_NOTE_SUCCESS,\n  POST_NOTE_FAIL,\n  POST_NOTE_RESET,\n} from '../constants/noteConstants';\n\nexport const notePostReducer = (state, action) => {\n  switch (action.type) {\n    case POST_NOTE_REQUEST:\n      return { loading: true };\n    case POST_NOTE_SUCCESS:\n      return { loading: false, success: true };\n    case POST_NOTE_FAIL:\n      return { loading: false, error: action.payload };\n    case POST_NOTE_RESET:\n      return {};\n    default:\n      return { ...state };\n  }\n};\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport Header from './components/Header';\nimport HomeScreen from './screens/HomeScreen';\nimport store from './stores/store.js';\nimport './styles/app.css';\nimport { Row } from 'react-bootstrap';\n\nconst App = () => {\n  return (\n    <Provider store={store}>\n      <Header />\n      <main className='app-main'>\n        <Row className='app-main-container'>\n          <HomeScreen />\n        </Row>\n      </main>\n    </Provider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.jsx';\nimport './bootstrap.min.css';\nimport './styles/index.css';\nimport './styles/customBootstrap.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}